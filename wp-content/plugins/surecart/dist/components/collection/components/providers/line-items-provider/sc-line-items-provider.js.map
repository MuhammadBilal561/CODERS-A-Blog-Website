{"version":3,"file":"sc-line-items-provider.js","sourceRoot":"","sources":["../../../../src/components/providers/line-items-provider/sc-line-items-provider.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Event, EventEmitter, h, Listen, Prop, State, Watch } from '@stencil/core';\n\nimport { convertLineItemsToLineItemData } from '../../../functions/line-items';\nimport { Checkout, LineItemData } from '../../../types';\n\n@Component({\n  tag: 'sc-line-items-provider',\n  shadow: true,\n})\nexport class ScLineItemsProvider {\n  /** Order Object */\n  @Prop() order: Checkout;\n\n  /** Holds items to sync */\n  @State() syncItems: Array<{ type: 'toggle' | 'add' | 'remove' | 'update'; payload: LineItemData }> = [];\n\n  /** Update line items event */\n  @Event() scUpdateLineItems: EventEmitter<Array<LineItemData>>;\n\n  /** Handle line item toggle */\n  @Listen('scToggleLineItem')\n  handleLineItemToggle(e: CustomEvent) {\n    const lineItem = e.detail as LineItemData;\n    this.addSyncItem('toggle', lineItem);\n  }\n\n  /** Handle line item remove */\n  @Listen('scRemoveLineItem')\n  handleLineItemRemove(e: CustomEvent) {\n    const lineItem = e.detail as LineItemData;\n    this.addSyncItem('remove', lineItem);\n  }\n\n  /** Handle line item add */\n  @Listen('scAddLineItem')\n  handleLineItemAdd(e: CustomEvent) {\n    const lineItem = e.detail as LineItemData;\n    this.addSyncItem('add', lineItem);\n  }\n\n  /** Handle line item add */\n  @Listen('scUpdateLineItem')\n  handleLineItemUpdate(e: CustomEvent) {\n    const lineItem = e.detail as LineItemData;\n    this.addSyncItem('update', lineItem);\n  }\n\n  /** We listen to the syncItems array and run it on the next render in batch */\n  @Watch('syncItems')\n  async syncItemsHandler(val) {\n    if (!val?.length) return;\n    setTimeout(() => {\n      if (!this.syncItems?.length) return;\n      const items = this.processSyncItems();\n      this.scUpdateLineItems.emit(items);\n      this.syncItems = [];\n    }, 100);\n  }\n\n  /** Add item to sync */\n  addSyncItem(type: 'add' | 'remove' | 'toggle' | 'update', payload: LineItemData) {\n    this.syncItems = [...this.syncItems, ...[{ type, payload }]];\n  }\n\n  /** Batch process items to sync before sending */\n  processSyncItems() {\n    // get existing line item data.\n    let existingData = convertLineItemsToLineItemData(this?.order?.line_items || []);\n\n    const map = {\n      toggle: this.toggleItem,\n      add: this.addItem,\n      remove: this.removeItem,\n      update: this.updateItem,\n    };\n\n    // run existing data through chain of sync updates.\n    (this.syncItems || []).forEach(item => {\n      existingData = map[item.type](item.payload, existingData) as any;\n    });\n\n    return existingData;\n  }\n\n  /** Add item */\n  addItem(item: LineItemData, existingLineData: Array<LineItemData>) {\n    return [...existingLineData, ...[item]];\n  }\n\n  /** Toggle item */\n  toggleItem(item: LineItemData, existingLineData: Array<LineItemData>) {\n    // find existing item.\n    const existingPriceId = existingLineData.find(line => line.price_id === item.price_id)?.price_id;\n    // toggle it.\n    existingLineData = existingPriceId ? existingLineData.filter(item => existingPriceId !== item.price_id) : [...existingLineData, ...[item]];\n    // return.\n    return existingLineData;\n  }\n\n  /** Remove item */\n  removeItem(item: LineItemData, existingLineData: Array<LineItemData>) {\n    if (!item.price_id) return existingLineData;\n    return existingLineData.filter(data => data.price_id !== item.price_id);\n  }\n\n  /** Update the item item */\n  updateItem(item: LineItemData, existingLineData: Array<LineItemData>) {\n    // find existing item.\n    const existingLineItem = existingLineData.findIndex(line => line.price_id === item.price_id);\n    // if we found it, update it\n    if (existingLineItem !== -1) {\n      existingLineData[existingLineItem] = item;\n      // otherwise, add it\n    } else {\n      return [...existingLineData, ...[item]];\n    }\n\n    return existingLineData;\n  }\n\n  render() {\n    return <slot />;\n  }\n}\n"]}