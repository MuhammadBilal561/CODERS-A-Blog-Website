{"version":3,"file":"sc-order-confirm-provider.js","sourceRoot":"","sources":["../../../../src/components/providers/order-confirm-provider/sc-order-confirm-provider.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Event, EventEmitter, h, Host, Watch, Prop, State } from '@stencil/core';\nimport { __ } from '@wordpress/i18n';\nimport { addQueryArgs } from '@wordpress/url';\nimport { speak } from '@wordpress/a11y';\n\nimport apiFetch from '../../../functions/fetch';\nimport { expand } from '../../../services/session';\nimport { state as checkoutState } from '@store/checkout';\nimport { state as formState } from '@store/form';\nimport { Checkout, ManualPaymentMethod } from '../../../types';\nimport { createErrorNotice } from '@store/notices/mutations';\nimport { clearCheckout } from '@store/checkout/mutations';\n/**\n * This component listens to the order status\n * and confirms the order when payment is successful.\n */\n@Component({\n  tag: 'sc-order-confirm-provider',\n  styleUrl: 'sc-order-confirm-provider.scss',\n  shadow: true,\n})\nexport class ScOrderConfirmProvider {\n  private continueButton: HTMLScButtonElement;\n  /** The order confirm provider element */\n  @Element() el: HTMLScOrderConfirmProviderElement;\n\n  /** Whether to show success modal */\n  @State() showSuccessModal: boolean = false;\n\n  /** Whether to show success modal */\n  @State() manualPaymentMethod: ManualPaymentMethod;\n\n  /** Checkout status to listen and do payment related stuff. */\n  @Prop() checkoutStatus: string;\n\n  /** Success url. */\n  @Prop() successUrl: string;\n\n  /** The order is paid event. */\n  @Event() scOrderPaid: EventEmitter<Checkout>;\n\n  @Event() scSetState: EventEmitter<string>;\n\n  /**\n   * Watch for paid checkout machine state.\n   * This is triggered by Stripe, Paypal or Paystack when payment succeeds.\n   */\n  @Watch('checkoutStatus')\n  handleConfirmOrderEvent() {\n    if (this.checkoutStatus === 'confirming') {\n      this.confirmOrder();\n    } else if (this.checkoutStatus === 'confirmed') {\n      speak(__('Order has been confirmed. Please select continue to go to the next step.', 'surecart'));\n    }\n  }\n\n  /** Confirm the order. */\n  async confirmOrder() {\n    try {\n      checkoutState.checkout = (await apiFetch({\n        method: 'PATCH',\n        path: addQueryArgs(`surecart/v1/checkouts/${checkoutState?.checkout?.id}/confirm`, { expand }),\n      })) as Checkout;\n      this.scSetState.emit('CONFIRMED');\n    } catch (e) {\n      console.error(e);\n      createErrorNotice(e);\n    } finally {\n      this.manualPaymentMethod = (checkoutState.checkout?.manual_payment_method as ManualPaymentMethod) || null;\n      const checkout = checkoutState.checkout;\n      const formId = checkoutState.formId;\n\n      // If there is an initial upsell redirect to it.\n      if (!!checkout?.current_upsell?.permalink) {\n        setTimeout(\n          () =>\n            window.location.assign(\n              addQueryArgs(checkout?.current_upsell?.permalink, {\n                sc_checkout_id: checkout?.id,\n                sc_form_id: formId,\n              }),\n            ),\n          50,\n        );\n        clearCheckout();\n        return;\n      }\n\n      // get success url.\n      const successUrl = checkout?.metadata?.success_url || this.successUrl;\n      if (successUrl) {\n        // set state to redirecting.\n        this.scSetState.emit('REDIRECT');\n        const redirectUrl = addQueryArgs(successUrl, { sc_order: checkout?.id });\n        setTimeout(() => window.location.assign(redirectUrl), 50);\n      } else {\n        this.showSuccessModal = true;\n      }\n      clearCheckout();\n    }\n  }\n\n  getSuccessUrl() {\n    const url = checkoutState.checkout?.metadata?.success_url || this.successUrl;\n    return url ? addQueryArgs(url, { sc_order: checkoutState.checkout?.id }) : window?.scData?.pages?.dashboard;\n  }\n\n  @Watch('showSuccessModal')\n  handleSuccessModal() {\n    if (this.showSuccessModal) {\n      setTimeout(() => {\n        this.continueButton?.focus();\n      }, 50);\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <slot />\n        <sc-dialog open={!!this.showSuccessModal} style={{ '--body-spacing': 'var(--sc-spacing-xxx-large)' }} noHeader onScRequestClose={e => e.preventDefault()}>\n          <div class=\"confirm__icon\">\n            <div class=\"confirm__icon-container\">\n              <sc-icon name=\"check\" />\n            </div>\n          </div>\n          <sc-dashboard-module\n            heading={formState?.text?.success?.title || __('Thanks for your order!', 'surecart')}\n            style={{ '--sc-dashboard-module-spacing': 'var(--sc-spacing-x-large)', 'textAlign': 'center' }}\n          >\n            <span slot=\"description\">{formState?.text?.success?.description || __('Your payment was successful. A receipt is on its way to your inbox.', 'surecart')}</span>\n            {!!this.manualPaymentMethod?.name && !!this.manualPaymentMethod?.instructions && (\n              <sc-alert type=\"info\" open style={{ 'text-align': 'left' }}>\n                <span slot=\"title\">{this.manualPaymentMethod?.name}</span>\n                <div innerHTML={this.manualPaymentMethod?.instructions}></div>\n              </sc-alert>\n            )}\n            <sc-button href={this.getSuccessUrl()} size=\"large\" type=\"primary\" ref={el => (this.continueButton = el as HTMLScButtonElement)}>\n              {formState?.text?.success?.button || __('Continue', 'surecart')}\n              <sc-icon name=\"arrow-right\" slot=\"suffix\" />\n            </sc-button>\n          </sc-dashboard-module>\n        </sc-dialog>\n      </Host>\n    );\n  }\n}\n"]}