{"version":3,"file":"paypal-buttons.js","sourceRoot":"","sources":["../../../../src/components/ui/paypal-buttons/paypal-buttons.tsx"],"names":[],"mappings":"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","sourcesContent":["import { loadScript } from '@paypal/paypal-js';\nimport { Component, Element, Event, EventEmitter, h, Prop, State, Watch } from '@stencil/core';\nimport { __ } from '@wordpress/i18n';\n\nimport apiFetch from '../../../functions/fetch';\nimport { fetchCheckout } from '../../../services/session';\nimport { Checkout, PaymentIntent } from '../../../types';\nimport { getScriptLoadParams } from './functions';\nimport { createErrorNotice } from '@store/notices/mutations';\n\n@Component({\n  tag: 'sc-paypal-buttons',\n  styleUrl: 'paypal-buttons.scss',\n  shadow: true,\n})\nexport class ScPaypalButtons {\n  /** This element. */\n  @Element() el!: HTMLScPaypalButtonsElement;\n\n  /** Holds the card button */\n  private cardContainer: HTMLDivElement;\n\n  /** Holds the paypal buttons */\n  private paypalContainer: HTMLDivElement;\n\n  /** Client id for the script. */\n  @Prop() clientId: string;\n\n  /** Is this busy? */\n  @Prop() busy: boolean = false;\n\n  /** The merchant id for paypal. */\n  @Prop() merchantId: string;\n\n  /** Merchant initiated billing enabled. */\n  @Prop() merchantInitiated: boolean;\n\n  /** Test or live mode. */\n  @Prop() mode: 'test' | 'live';\n\n  /** The order. */\n  @Prop({ mutable: true }) order: Checkout;\n\n  /** Buttons to render */\n  @Prop() buttons: string[] = ['paypal', 'card'];\n\n  /** Label for the button. */\n  @Prop() label: 'paypal' | 'checkout' | 'buynow' | 'pay' | 'installment' = 'paypal';\n\n  /** Button color. */\n  @Prop() color: 'gold' | 'blue' | 'silver' | 'black' | 'white' = 'gold';\n\n  /** Has this loaded? */\n  @State() loaded: boolean;\n\n  /** Set the state machine */\n  @Event() scSetState: EventEmitter<string>;\n\n  @Event() scPaid: EventEmitter<void>;\n\n  @Watch('order')\n  handleOrderChange(val, prev) {\n    if (val?.updated_at === prev?.updated_at) {\n      return;\n    }\n    this.cardContainer.innerHTML = '';\n    this.paypalContainer.innerHTML = '';\n    this.loadScript();\n  }\n\n  /** Load the script */\n  async loadScript() {\n    if (!this.clientId || !this.merchantId) return;\n    try {\n      const paypal = await loadScript(\n        getScriptLoadParams({\n          clientId: this.clientId,\n          merchantId: this.merchantId,\n          merchantInitiated: this.merchantInitiated,\n          reusable: this.order?.reusable_payment_method_required,\n          currency: this.order?.currency,\n        }),\n      );\n      this.renderButtons(paypal);\n    } catch (err) {\n      console.error('failed to load the PayPal JS SDK script', err);\n    }\n  }\n\n  /** Load the script on component load. */\n  componentDidLoad() {\n    this.loadScript();\n  }\n\n  /** Render the buttons. */\n  renderButtons(paypal) {\n    const createFunc = this.order.reusable_payment_method_required ? 'createBillingAgreement' : 'createOrder';\n\n    const config = {\n      /**\n       * Validate the form, client-side when the button is clicked.\n       */\n      onClick: async (_, actions) => {\n        const form = this.el.closest('sc-checkout') as HTMLScCheckoutElement;\n        const isValid = await form.validate();\n        return isValid ? actions.resolve() : actions.reject();\n      },\n\n      onInit: () => {\n        this.loaded = true;\n      },\n\n      onCancel: () => {\n        this.scSetState.emit('REJECT');\n      },\n\n      /**\n       * The transaction has been approved.\n       * We can capture it.\n       */\n      onApprove: async () => {\n        try {\n          this.order = (await fetchCheckout({ id: this.order?.id })) as Checkout;\n        } catch (e) {\n          console.error(e);\n          createErrorNotice({ code: 'could_not_capture', message: __('The payment did not process. Please try again.', 'surecart') });\n          this.scSetState.emit('REJECT');\n        }\n\n        try {\n          this.scSetState.emit('PAYING');\n          const intent = (await apiFetch({\n            method: 'PATCH',\n            path: `surecart/v1/payment_intents/${this.order?.payment_intent?.id || this.order?.payment_intent}/capture`,\n          })) as PaymentIntent;\n          if (['succeeded', 'processing'].includes(intent?.status)) {\n            this.scSetState.emit('PAID');\n            this.scPaid.emit();\n          } else {\n            createErrorNotice({ code: 'could_not_capture', message: __('Payment processing failed. Kindly attempt the transaction once more.', 'surecart') });\n            this.scSetState.emit('REJECT');\n          }\n        } catch (err) {\n          console.error(err);\n          createErrorNotice({ code: 'could_not_capture', message: __('Payment processing failed. Kindly attempt the transaction once more.', 'surecart') });\n          this.scSetState.emit('REJECT');\n        }\n      },\n\n      /**\n       * Transaction errored.\n       * @param err\n       */\n      onError: err => {\n        console.error(err);\n        createErrorNotice(err);\n        this.scSetState.emit('REJECT');\n      },\n    };\n\n    config[createFunc] = async () => {\n      return new Promise(async (resolve, reject) => {\n        // get the checkout component.\n        const checkout = this.el.closest('sc-checkout') as HTMLScCheckoutElement;\n\n        // submit and get the finalized order\n        const order = (await checkout.submit()) as Checkout;\n\n        // an error occurred. reject with the error.\n        if (order instanceof Error) {\n          return reject(order);\n        }\n\n        // assume there was a validation issue here.\n        // that is handled by our fetch function.\n        if (order?.status !== 'finalized') {\n          return reject(new Error('Something went wrong. Please try again.'));\n        }\n\n        // resolve the payment intent id.\n        if (order?.payment_intent?.external_intent_id) {\n          return resolve(order?.payment_intent?.external_intent_id);\n        }\n\n        // we don't have the correct payment intent for some reason.\n        createErrorNotice({ code: 'missing_payment_intent', message: __('Something went wrong. Please contact us for payment.', 'surecart') });\n        return reject();\n      });\n    };\n\n    if (paypal.FUNDING.PAYPAL) {\n      const paypalButton = paypal.Buttons({\n        fundingSource: paypal.FUNDING.PAYPAL,\n        style: {\n          label: this.label,\n          color: this.color,\n        },\n        ...config,\n      });\n      if (paypalButton.isEligible()) {\n        paypalButton.render(this.paypalContainer);\n      }\n    }\n\n    if (paypal.FUNDING.CARD) {\n      const cardButton = paypal.Buttons({\n        fundingSource: paypal.FUNDING.CARD,\n        style: {\n          color: 'black',\n        },\n        ...config,\n      });\n      if (cardButton.isEligible()) {\n        cardButton.render(this.cardContainer);\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div part={`base ${this.busy || (!this.loaded && 'base--busy')}`} class={{ 'paypal-buttons': true, 'paypal-buttons--busy': this.busy || !this.loaded }}>\n        {(!this.loaded || this.busy) && <sc-skeleton style={{ 'height': '55px', '--border-radius': '4px', 'cursor': 'wait' }}></sc-skeleton>}\n        <div class=\"sc-paypal-button-container\" hidden={!this.loaded || this.busy}>\n          <div part=\"paypal-card-button\" hidden={!this.buttons.includes('card')} class=\"sc-paypal-card-button\" ref={el => (this.cardContainer = el as HTMLDivElement)}></div>\n          <div part=\"paypal-button\" hidden={!this.buttons.includes('paypal')} class=\"sc-paypal-button\" ref={el => (this.paypalContainer = el as HTMLDivElement)}></div>\n        </div>\n      </div>\n    );\n  }\n}\n"]}