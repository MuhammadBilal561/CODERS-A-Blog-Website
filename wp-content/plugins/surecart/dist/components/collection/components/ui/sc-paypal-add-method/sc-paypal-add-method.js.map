{"version":3,"file":"sc-paypal-add-method.js","sourceRoot":"","sources":["../../../../src/components/ui/sc-paypal-add-method/sc-paypal-add-method.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, Host, Prop, State, Watch } from '@stencil/core';\nimport { loadScript, PayPalNamespace } from '@paypal/paypal-js';\nimport { __ } from '@wordpress/i18n';\nimport apiFetch from '../../../functions/fetch';\nimport { PaymentIntent } from '../../../types';\nimport { getScriptLoadParams } from '../paypal-buttons/functions';\n\n@Component({\n  tag: 'sc-paypal-add-method',\n  styleUrl: 'sc-paypal-add-method.scss',\n  shadow: false,\n})\nexport class ScPaypalAddMethod {\n  /** Holds the card button */\n  private container: HTMLDivElement;\n  // holds the stripe instance.\n  private paypal: PayPalNamespace;\n\n  @Prop() liveMode: boolean = true;\n  @Prop() customerId: string;\n  @Prop() successUrl: string;\n  @Prop() currency: string;\n\n  @State() loading: boolean;\n  @State() loaded: boolean;\n  @State() error: string;\n  @State() paymentIntent: PaymentIntent;\n\n  componentWillLoad() {\n    this.createPaymentIntent();\n  }\n\n  @Watch('paymentIntent')\n  async handlePaymentIntentCreate() {\n    const { external_intent_id } = this.paymentIntent || {};\n    const { client_id, account_id, merchant_initiated } = this.paymentIntent?.processor_data?.paypal || {};\n    // we need this data.\n    if (!client_id || !account_id || !external_intent_id) return;\n\n    // check if stripe has been initialized\n    if (!this.paypal) {\n      try {\n        this.paypal = await loadScript(\n          getScriptLoadParams({\n            clientId: client_id,\n            merchantId: account_id,\n            merchantInitiated: merchant_initiated,\n            reusable: true,\n          }),\n        );\n\n        this.paypal\n          .Buttons({\n            onInit: () => {\n              this.loaded = true;\n            },\n            createBillingAgreement: () => {\n              return new Promise(resolve => resolve(external_intent_id));\n            },\n            onApprove: async () => {\n              try {\n                this.loading = true;\n                const intent = (await apiFetch({\n                  method: 'PATCH',\n                  path: `surecart/v1/payment_intents/${this.paymentIntent?.id}/capture`,\n                })) as PaymentIntent;\n                if (['succeeded', 'pending', 'requires_approval'].includes(intent?.status)) {\n                  window.location.assign(this.successUrl);\n                } else {\n                  throw { message: __('The payment did not process. Please try again.', 'surecart') };\n                }\n              } catch (err) {\n                console.error(err);\n                this.error = err?.message || __('The payment did not process. Please try again.', 'surecart');\n                this.loading = false;\n              }\n            },\n            onError: err => {\n              console.error(err);\n              alert(err?.message || __('The payment did not process. Please try again.', 'surecart'));\n            },\n          })\n          .render(this.container);\n      } catch (err) {\n        console.error('Failed to load the PayPal JS SDK script', err);\n        this.error = __('Failed to load the PayPal JS SDK script', 'surecart');\n      }\n    }\n  }\n\n  async createPaymentIntent() {\n    try {\n      this.loading = true;\n      this.error = '';\n      this.paymentIntent = await apiFetch({\n        method: 'POST',\n        path: 'surecart/v1/payment_intents',\n        data: {\n          processor_type: 'paypal',\n          reusable: true,\n          live_mode: this.liveMode,\n          customer_id: this.customerId,\n          currency: this.currency,\n          refresh_status: true,\n        },\n      });\n    } catch (e) {\n      this.error = e?.additional_errors?.[0]?.message || e?.message || __('Something went wrong', 'surecart');\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        {this.error && (\n          <sc-alert open={!!this.error} type=\"danger\">\n            <span slot=\"title\">{__('Error', 'surecart')}</span>\n            {this.error}\n          </sc-alert>\n        )}\n        <div class=\"sc-paypal-button-container\" hidden={!this.loaded} ref={el => (this.container = el as HTMLDivElement)}></div>\n      </Host>\n    );\n  }\n}\n"]}