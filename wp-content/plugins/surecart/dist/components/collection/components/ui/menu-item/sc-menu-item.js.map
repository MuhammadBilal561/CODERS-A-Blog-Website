{"version":3,"file":"sc-menu-item.js","sourceRoot":"","sources":["../../../../src/components/ui/menu-item/sc-menu-item.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Prop, State, h, Method, Element } from '@stencil/core';\nimport { isRtl } from '../../../functions/page-align';\n\n@Component({\n  tag: 'sc-menu-item',\n  styleUrl: 'sc-menu-item.scss',\n  shadow: true,\n})\nexport class ScMenuItem {\n  @Element() el: HTMLScMenuItemElement;\n\n  private menuItem: HTMLElement;\n\n  @State() private hasFocus = false;\n\n  /** Optional link to follow. */\n  @Prop() href: string;\n\n  /** The target of the link. */\n  @Prop() target: string;\n\n  /** Draws the item in a checked state. */\n  @Prop({ reflect: true }) checked: boolean = false;\n\n  /** A unique value to store in the menu item. This can be used as a way to identify menu items when selected. */\n  @Prop({ reflect: true }) value: string = '';\n\n  /** Draws the menu item in a disabled state. */\n  @Prop({ reflect: true }) disabled: boolean = false;\n\n  /** Sets focus on the button. */\n  @Method('setFocus')\n  async setFocus(options?: FocusOptions) {\n    this.menuItem.focus(options);\n  }\n\n  /** Removes focus from the button. */\n  @Method('setBlur')\n  async setBlur() {\n    this.menuItem.blur();\n  }\n\n  handleBlur() {\n    this.hasFocus = false;\n  }\n\n  handleFocus() {\n    this.hasFocus = true;\n  }\n\n  render() {\n    const Tag = this.href ? 'a' : 'div';\n    return (\n      <Tag\n        ref={el => (this.menuItem = el as HTMLElement)}\n        part=\"base\"\n        class={{\n          'menu-item': true,\n          'menu-item--checked': this.checked,\n          'menu-item--disabled': this.disabled,\n          'menu-item--focused': this.hasFocus,\n          'menu-item--is-rtl': isRtl(),\n        }}\n        href={this.href}\n        role=\"menuitem\"\n        aria-disabled={this.disabled ? 'true' : 'false'}\n        aria-checked={this.checked ? 'true' : 'false'}\n        tabindex={!this.disabled ? '0' : undefined}\n        onFocus={() => this.handleFocus()}\n        onBlur={() => this.handleBlur()}\n        onMouseEnter={() => this.handleFocus()}\n        onMouseLeave={() => this.handleBlur()}\n        onKeyDown={e => {\n          if (e.key === ' ' || e.key === 'Spacebar' || e.key === 'Enter') {\n            this.menuItem.click();\n          }\n        }}\n        aria-label={this.el.innerText}\n        target={this.target}\n      >\n        <span part=\"checked-icon\" class=\"menu-item__check\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-check\" viewBox=\"0 0 16 16\">\n            <path d=\"M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.267.267 0 0 1 .02-.022z\"></path>\n          </svg>\n        </span>\n        <span part=\"prefix\" class=\"menu-item__prefix\">\n          <slot name=\"prefix\"></slot>\n        </span>\n        <span part=\"label\" class=\"menu-item__label\">\n          <slot></slot>\n        </span>\n        <span part=\"suffix\" class=\"menu-item__suffix\">\n          <slot name=\"suffix\"></slot>\n        </span>\n      </Tag>\n    );\n  }\n}\n"]}