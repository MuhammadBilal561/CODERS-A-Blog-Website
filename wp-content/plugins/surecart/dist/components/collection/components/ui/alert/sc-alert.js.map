{"version":3,"file":"sc-alert.js","sourceRoot":"","sources":["../../../../src/components/ui/alert/sc-alert.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAgB,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAC7G,OAAO,EAAE,KAAK,EAAE,MAAM,+BAA+B,CAAC;AAEtD;;;;;;;GAOG;AAMH,MAAM,OAAO,OAAO;;gBAIsC,KAAK;;oBAMhB,KAAK;gBAGqC,SAAS;oBAMrE,QAAQ;;wBAMJ,KAAK;;;;EAapC,uBAAuB;EAEvB,KAAK,CAAC,IAAI;IACR,IAAI,IAAI,CAAC,IAAI,EAAE;MACb,OAAO;KACR;IACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;EACnB,CAAC;EAED,sBAAsB;EAEtB,KAAK,CAAC,IAAI;IACR,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;MACd,OAAO;KACR;IACD,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;EACpB,CAAC;EAED,eAAe;IACb,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IACnC,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,GAAG,QAAQ,EAAE;MACzC,IAAI,CAAC,eAAe,GAAG,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;KACrE;EACH,CAAC;EAED,eAAe;IACb,IAAI,CAAC,eAAe,EAAE,CAAC;EACzB,CAAC;EAED,gBAAgB;IACd,IAAI,CAAC,IAAI,EAAE,CAAC;EACd,CAAC;EAED,gDAAgD;EAEhD,gBAAgB;IACd,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IACpD,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,YAAY,EAAE;MAClC,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;KAChD;EACH,CAAC;EAED,gBAAgB;IACd,IAAI,CAAC,gBAAgB,EAAE,CAAC;EAC1B,CAAC;EAED,QAAQ;IACN,QAAQ,IAAI,CAAC,IAAI,EAAE;MACjB,KAAK,QAAQ;QACX,OAAO,cAAc,CAAC;MACxB,KAAK,SAAS;QACZ,OAAO,cAAc,CAAC;MACxB,KAAK,SAAS;QACZ,OAAO,gBAAgB,CAAC;MAC1B;QACE,OAAO,MAAM,CAAC;KACjB;EACH,CAAC;EAED,IAAI;IACF,OAAO,eAAS,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAI,CAAC;EAC5C,CAAC;EAED,MAAM;IACJ,OAAO,CACL,EAAC,IAAI,IAAC,KAAK,EAAE,EAAE,mBAAmB,EAAE,IAAI,CAAC,YAAY,EAAE;MACrD,WACE,KAAK,EAAE;UACL,OAAO,EAAE,IAAI;UACb,gBAAgB,EAAE,IAAI,CAAC,IAAI,KAAK,SAAS;UACzC,gBAAgB,EAAE,IAAI,CAAC,IAAI,KAAK,SAAS;UACzC,aAAa,EAAE,IAAI,CAAC,IAAI,KAAK,MAAM;UACnC,gBAAgB,EAAE,IAAI,CAAC,IAAI,KAAK,SAAS;UACzC,eAAe,EAAE,IAAI,CAAC,IAAI,KAAK,QAAQ;UACvC,eAAe,EAAC,KAAK,EAAE;SACxB,EACD,IAAI,EAAC,MAAM,EACX,IAAI,EAAC,OAAO,eACF,WAAW,iBACT,MAAM,iBACL,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,EACzC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,EAChC,WAAW,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE;QAEzC,WAAK,KAAK,EAAC,aAAa,EAAC,IAAI,EAAC,MAAM;UAClC,YAAM,IAAI,EAAC,MAAM,IAAE,IAAI,CAAC,IAAI,EAAE,CAAQ,CAClC;QACN,WAAK,KAAK,EAAC,aAAa,EAAC,IAAI,EAAC,MAAM;UAClC,WAAK,KAAK,EAAC,cAAc,EAAC,IAAI,EAAC,OAAO;YACpC,YAAM,IAAI,EAAC,OAAO,IAAE,IAAI,CAAC,KAAK,CAAQ,CAClC;UACN,WAAK,KAAK,EAAC,gBAAgB,EAAC,IAAI,EAAC,SAAS;YACxC,eAAQ,CACJ,CACF;QACL,IAAI,CAAC,QAAQ,IAAI,CAChB,YAAM,IAAI,EAAC,OAAO,EAAC,KAAK,EAAC,cAAc,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,EAAE;UAC5E,YAAM,KAAK,EAAC,SAAS,cAAe;UACpC,WAAK,KAAK,EAAC,SAAS,mBAAe,wBAAwB,EAAC,KAAK,EAAC,4BAA4B,EAAC,OAAO,EAAC,WAAW,EAAC,IAAI,EAAC,cAAc,iBAAa,MAAM;YACvJ,yBACY,SAAS,EACnB,CAAC,EAAC,oMAAoM,eAC5L,SAAS,GACb,CACJ,CACD,CACR,CACG,CACD,CACR,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Prop, Method, State, Event, EventEmitter, Watch, h, Element, Host } from '@stencil/core';\nimport { isRtl } from '../../../functions/page-align';\n\n/**\n * @part base - The elements base wrapper.\n * @part icon - The alert icon.\n * @part text - The alert text.\n * @part title - The alert title.\n * @part message - The alert message.\n * @part close - The close icon.\n */\n@Component({\n  tag: 'sc-alert',\n  styleUrl: 'sc-alert.scss',\n  shadow: true,\n})\nexport class ScAlert {\n  @Element() el: HTMLScAlertElement;\n\n  /** Indicates whether or not the alert is open. You can use this in lieu of the show/hide methods. */\n  @Prop({ reflect: true, mutable: true }) open: boolean = false;\n\n  /** The title. */\n  @Prop() title: string;\n\n  /** Makes the alert closable. */\n  @Prop({ reflect: true }) closable: boolean = false;\n\n  /** The type of alert. */\n  @Prop({ reflect: true }) type: 'primary' | 'success' | 'info' | 'warning' | 'danger' = 'primary';\n\n  /**\n   * The length of time, in milliseconds, the alert will show before closing itself. If the user interacts with\n   * the alert before it closes (e.g. moves the mouse over it), the timer will restart. Defaults to `Infinity`.\n   */\n  @Prop() duration: number = Infinity;\n\n  /** Scroll into view. */\n  @Prop() scrollOnOpen: boolean;\n\n  /** Scroll margin */\n  @Prop() scrollMargin: string = '0px';\n\n  /** No icon */\n  @Prop() noIcon: boolean;\n\n  @State() autoHideTimeout: any;\n\n  /** When alert is hidden */\n  @Event() scHide: EventEmitter<void>;\n\n  /** When alert is shown */\n  @Event() scShow: EventEmitter<void>;\n\n  /** Shows the alert. */\n  @Method()\n  async show() {\n    if (this.open) {\n      return;\n    }\n    this.open = true;\n  }\n\n  /** Hides the alert */\n  @Method()\n  async hide() {\n    if (!this.open) {\n      return;\n    }\n    this.open = false;\n  }\n\n  restartAutoHide() {\n    clearTimeout(this.autoHideTimeout);\n    if (this.open && this.duration < Infinity) {\n      this.autoHideTimeout = setTimeout(() => this.hide(), this.duration);\n    }\n  }\n\n  handleMouseMove() {\n    this.restartAutoHide();\n  }\n\n  handleCloseClick() {\n    this.hide();\n  }\n\n  /** Emit event when showing or hiding changes */\n  @Watch('open')\n  handleOpenChange() {\n    this.open ? this.scShow.emit() : this.scHide.emit();\n    if (this.open && this.scrollOnOpen) {\n      this.el.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  componentDidLoad() {\n    this.handleOpenChange();\n  }\n\n  iconName() {\n    switch (this.type) {\n      case 'danger':\n        return 'alert-circle';\n      case 'success':\n        return 'check-circle';\n      case 'warning':\n        return 'alert-triangle';\n      default:\n        return 'info';\n    }\n  }\n\n  icon() {\n    return <sc-icon name={this.iconName()} />;\n  }\n\n  render() {\n    return (\n      <Host style={{ 'scroll-margin-top': this.scrollMargin }}>\n        <div\n          class={{\n            'alert': true,\n            'alert--primary': this.type === 'primary',\n            'alert--success': this.type === 'success',\n            'alert--info': this.type === 'info',\n            'alert--warning': this.type === 'warning',\n            'alert--danger': this.type === 'danger',\n            'alert--is-rtl':isRtl()\n          }}\n          part=\"base\"\n          role=\"alert\"\n          aria-live=\"assertive\"\n          aria-atomic=\"true\"\n          aria-hidden={this.open ? 'false' : 'true'}\n          hidden={this.open ? false : true}\n          onMouseMove={() => this.handleMouseMove()}\n        >\n          <div class=\"alert__icon\" part=\"icon\">\n            <slot name=\"icon\">{this.icon()}</slot>\n          </div>\n          <div class=\"alert__text\" part=\"text\">\n            <div class=\"alert__title\" part=\"title\">\n              <slot name=\"title\">{this.title}</slot>\n            </div>\n            <div class=\"alert__message\" part=\"message\">\n              <slot />\n            </div>\n          </div>\n          {this.closable && (\n            <span part=\"close\" class=\"alert__close\" onClick={() => this.handleCloseClick()}>\n              <span class=\"sr-only\">Dismiss</span>\n              <svg class=\"h-5 w-5\" x-description=\"Heroicon name: solid/x\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                <path\n                  fill-rule=\"evenodd\"\n                  d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n                  clip-rule=\"evenodd\"\n                ></path>\n              </svg>\n            </span>\n          )}\n        </div>\n      </Host>\n    );\n  }\n}\n"]}