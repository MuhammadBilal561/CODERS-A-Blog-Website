{"version":3,"file":"sc-paystack-add-method.js","sourceRoot":"","sources":["../../../../src/components/ui/sc-paystack-add-method/sc-paystack-add-method.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies.\n */\nimport { __, sprintf } from '@wordpress/i18n';\n\n/**\n * External dependencies.\n */\nimport PaystackPop from '@paystack/inline-js';\nimport { Component, h, Host, Prop, State, Watch } from '@stencil/core';\n\n/**\n * Internal dependencies.\n */\nimport apiFetch from '../../../functions/fetch';\nimport { PaymentIntent } from '../../../types';\n\n@Component({\n  tag: 'sc-paystack-add-method',\n  styleUrl: 'sc-paystack-add-method.scss',\n  shadow: false,\n})\nexport class ScPaystackAddMethod {\n  @Prop() liveMode: boolean = true;\n  @Prop() customerId: string;\n  @Prop() successUrl: string;\n  @Prop() currency: string;\n\n  @State() loading: boolean;\n  @State() loaded: boolean;\n  @State() error: string;\n  @State() paymentIntent: PaymentIntent;\n\n  @Watch('paymentIntent')\n  async handlePaymentIntentCreate() {\n    const { public_key, access_code } = this.paymentIntent?.processor_data?.paystack || {};\n\n    // we need this data.\n    if (!public_key || !access_code) return;\n\n    const paystack = new PaystackPop();\n\n    await paystack.newTransaction({\n      key: public_key,\n      accessCode: access_code, // We'll use accessCode which will handle product, price on our server.\n      onSuccess: async transaction => {\n        if (transaction?.status !== 'success') {\n          throw { message: sprintf(__('Paystack transaction could not be finished. Status: %s', 'surecart'), transaction?.status) };\n        }\n        window.location.assign(this.successUrl);\n      },\n      onClose: err => {\n        console.error(err);\n        alert(err?.message || __('The payment did not process. Please try again.', 'surecart'));\n      },\n    });\n  }\n\n  async createPaymentIntent() {\n    try {\n      this.loading = true;\n      this.error = '';\n      this.paymentIntent = await apiFetch({\n        method: 'POST',\n        path: 'surecart/v1/payment_intents',\n        data: {\n          processor_type: 'paystack',\n          reusable: true,\n          live_mode: this.liveMode,\n          customer_id: this.customerId,\n          currency: this.currency,\n          refresh_status: true,\n        },\n      });\n    } catch (e) {\n      this.error = e?.additional_errors?.[0]?.message || e?.message || __('Something went wrong', 'surecart');\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        {this.error && (\n          <sc-alert open={!!this.error} type=\"danger\">\n            <span slot=\"title\">{__('Error', 'surecart')}</span>\n            {this.error}\n          </sc-alert>\n        )}\n        <div class=\"sc-paystack-button-container\">\n          <sc-alert open={true} type=\"warning\">\n            {__(\n              'In order to add a new card, we will need to make a small transaction to authenticate it. This is for authentication purposes and will be immediately refunded.',\n              'surecart',\n            )}\n            <div>\n              <sc-button loading={this.loading} type=\"primary\" onClick={() => this.createPaymentIntent()} style={{ marginTop: 'var(--sc-spacing-medium)' }}>\n                {__('Add New Card', 'surecart')}\n              </sc-button>\n            </div>\n          </sc-alert>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}