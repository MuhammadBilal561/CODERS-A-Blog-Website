{"version":3,"file":"sc-cart-button.js","sourceRoot":"","sources":["../../../../src/components/ui/sc-cart-button/sc-cart-button.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, h, Prop, State, Host } from '@stencil/core';\nimport uiStore from '@store/ui';\nimport { onChange } from '@store/checkouts';\nimport { state as checkoutState } from '@store/checkout';\nimport { __, sprintf } from '@wordpress/i18n';\n\n/**\n * @part base - The elements base wrapper.\n * @part count - The icon base wrapper.\n */\n@Component({\n  tag: 'sc-cart-button',\n  styleUrl: 'sc-cart-button.scss',\n  shadow: true,\n})\nexport class ScCartButton {\n  private link: HTMLAnchorElement;\n  /** The cart element. */\n  @Element() el: HTMLScCartButtonElement;\n\n  /** Is this open or closed? */\n  @State() open: boolean = null;\n\n  /** The order count */\n  @State() count: number = 0;\n\n  /** The form id to use for the cart. */\n  @Prop({ reflect: true }) formId: string;\n\n  /** Are we in test or live mode. */\n  @Prop() mode: 'test' | 'live' = 'live';\n\n  /** Whether the cart icon is always shown when the cart is empty */\n  @Prop() cartMenuAlwaysShown: boolean = true;\n\n  /** Whether the cart count will be shown or not when the cart is empty */\n  @Prop() showEmptyCount: boolean = false;\n\n  /** Count the number of items in the cart. */\n  getItemsCount() {\n    const items = checkoutState?.checkout?.line_items?.data;\n    let count = 0;\n    (items || []).forEach(item => {\n      count = count + item?.quantity;\n    });\n    return count;\n  }\n\n  componentDidLoad() {\n    this.link = this.el.closest('a');\n    // this is to keep the structure that WordPress expects for theme styling.\n    this.link.addEventListener('click', e => {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n      uiStore.state.cart = { ...uiStore.state.cart, open: !uiStore.state.cart.open };\n      return false;\n    });\n\n    // maybe hide the parent <a> if there are no items in the cart.\n    this.handleParentLinkDisplay();\n    onChange(this.mode, () => this.handleParentLinkDisplay());\n  }\n\n  handleParentLinkDisplay() {\n    this.link.style.display = !this.cartMenuAlwaysShown && !this.getItemsCount() ? 'none' : null;\n  }\n\n  render() {\n    return (\n      <Host\n        tabindex={0}\n        role=\"button\"\n        aria-label={sprintf(__('Open Cart Menu Icon with %d items.', 'surecart'), this.getItemsCount())}\n        onKeyDown={e => {\n          if ('Enter' === e?.code || 'Space' === e?.code) {\n            uiStore.state.cart = { ...uiStore.state.cart, open: !uiStore.state.cart.open };\n            e.preventDefault();\n          }\n        }}\n      >\n        <div class=\"cart__button\" part=\"base\">\n          <div class=\"cart__content\">\n            {(this.showEmptyCount || !!this.getItemsCount()) && (\n              <span class=\"cart__count\" part=\"count\">\n                {this.getItemsCount()}\n              </span>\n            )}\n            <div class=\"cart__icon\">\n              <slot />\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}