{"version":3,"file":"sc-stripe-add-method.js","sourceRoot":"","sources":["../../../../src/components/ui/sc-stripe-add-method/sc-stripe-add-method.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, Prop, State, Watch } from '@stencil/core';\nimport { Stripe } from '@stripe/stripe-js';\nimport { loadStripe } from '@stripe/stripe-js/pure';\nimport { __ } from '@wordpress/i18n';\nimport apiFetch from '../../../functions/fetch';\nimport { PaymentIntent } from '../../../types';\nimport { addQueryArgs } from '@wordpress/url';\n\n@Component({\n  tag: 'sc-stripe-add-method',\n  styleUrl: 'sc-stripe-add-method.scss',\n  shadow: false,\n})\nexport class ScStripeAddMethod {\n  /** Holds the element container. */\n  private container: HTMLDivElement;\n  // holds the elements instance.\n  private elements: any;\n  // holds the stripe element.\n  private element: any;\n  // holds the stripe instance.\n  private stripe: Stripe;\n\n  @Prop() liveMode: boolean = true;\n  @Prop() customerId: string;\n  @Prop() successUrl: string;\n\n  @State() loading: boolean;\n  @State() loaded: boolean;\n  @State() error: string;\n  @State() paymentIntent: PaymentIntent;\n\n  componentWillLoad() {\n    this.createPaymentIntent();\n  }\n\n  @Watch('paymentIntent')\n  async handlePaymentIntentCreate() {\n    // we need this data.\n    if (!this.paymentIntent?.processor_data?.stripe?.publishable_key || !this.paymentIntent?.processor_data?.stripe?.account_id) return;\n\n    // check if stripe has been initialized\n    if (!this.stripe) {\n      try {\n        this.stripe = await loadStripe(this.paymentIntent?.processor_data?.stripe?.publishable_key, { stripeAccount: this.paymentIntent?.processor_data?.stripe?.account_id });\n      } catch (e) {\n        this.error = e?.message || __('Stripe could not be loaded', 'surecart');\n        // don't continue.\n        return; \n      }\n    }\n\n    // load the element.\n    // we need a stripe instance and client secret.\n    if (!this.paymentIntent?.processor_data?.stripe?.client_secret || !this.container) {\n      console.warn('do not have client secret or container');\n      return;\n    }\n\n    // get the computed styles.\n    const styles = getComputedStyle(document.body);\n\n    // we have what we need, load elements.\n    this.elements = this.stripe.elements({\n      clientSecret: this.paymentIntent?.processor_data?.stripe?.client_secret,\n      appearance: {\n        variables: {\n          colorPrimary: styles.getPropertyValue('--sc-color-primary-500'),\n          colorText: styles.getPropertyValue('--sc-input-label-color'),\n          borderRadius: styles.getPropertyValue('--sc-input-border-radius-medium'),\n          colorBackground: styles.getPropertyValue('--sc-input-background-color'),\n          fontSizeBase: styles.getPropertyValue('--sc-input-font-size-medium'),\n        },\n        rules: {\n          '.Input': {\n            border: styles.getPropertyValue('--sc-input-border'),\n          },\n          '.Input::placeholder': {\n            color: styles.getPropertyValue('--sc-input-placeholder-color'),\n          },\n        },\n      },\n    });\n\n    // create the payment element.\n    this.elements\n      .create('payment', {\n        wallets: {\n          applePay: 'never',\n          googlePay: 'never',\n        },\n      })\n      .mount('.sc-payment-element-container');\n    this.element = this.elements.getElement('payment');\n    this.element.on('ready', () => (this.loaded = true));\n  }\n\n  async createPaymentIntent() {\n    try {\n      this.loading = true;\n      this.error = '';\n      this.paymentIntent = await apiFetch({\n        method: 'POST',\n        path: 'surecart/v1/payment_intents',\n        data: {\n          processor_type: 'stripe',\n          live_mode: this.liveMode,\n          customer_id: this.customerId,\n          refresh_status: true,\n        },\n      });\n    } catch (e) {\n      this.error = e?.message || __('Something went wrong', 'surecart');\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  /**\n   * Handle form submission.\n   */\n  async handleSubmit(e) {\n    e.preventDefault();\n    this.loading = true;\n    try {\n      const confirmed = await this.stripe.confirmSetup({\n        elements: this.elements,\n        confirmParams: {\n          return_url: addQueryArgs(this.successUrl, {\n            payment_intent: this.paymentIntent?.id,\n          }),\n        },\n        redirect: 'always',\n      });\n      if (confirmed?.error) {\n        this.error = confirmed.error.message;\n        throw confirmed.error;\n      }\n    } catch (e) {\n      console.error(e);\n      this.error = e?.message || __('Something went wrong', 'surecart');\n      this.loading = false;\n    }\n  }\n\n  render() {\n    return (\n      <sc-form onScFormSubmit={e => this.handleSubmit(e)}>\n        {this.error && (\n          <sc-alert open={!!this.error} type=\"danger\">\n            <span slot=\"title\">{__('Error', 'surecart')}</span>\n            {this.error}\n          </sc-alert>\n        )}\n        <div class=\"loader\" hidden={this.loaded}>\n          <div class=\"loader__row\">\n            <div style={{ width: '50%' }}>\n              <sc-skeleton style={{ width: '50%', marginBottom: '0.5em' }}></sc-skeleton>\n              <sc-skeleton></sc-skeleton>\n            </div>\n            <div style={{ flex: '1' }}>\n              <sc-skeleton style={{ width: '50%', marginBottom: '0.5em' }}></sc-skeleton>\n              <sc-skeleton></sc-skeleton>\n            </div>\n            <div style={{ flex: '1' }}>\n              <sc-skeleton style={{ width: '50%', marginBottom: '0.5em' }}></sc-skeleton>\n              <sc-skeleton></sc-skeleton>\n            </div>\n          </div>\n          <div class=\"loader__details\">\n            <sc-skeleton style={{ height: '1rem' }}></sc-skeleton>\n            <sc-skeleton style={{ height: '1rem', width: '30%' }}></sc-skeleton>\n          </div>\n        </div>\n        <div hidden={!this.loaded} class=\"sc-payment-element-container\" ref={el => (this.container = el as HTMLDivElement)}></div>\n\n        <sc-button type=\"primary\" submit full loading={this.loading}>\n          {__('Save Payment Method', 'surecart')}\n        </sc-button>\n      </sc-form>\n    );\n  }\n}\n"]}