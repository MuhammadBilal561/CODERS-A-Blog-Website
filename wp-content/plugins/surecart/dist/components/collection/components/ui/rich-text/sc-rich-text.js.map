{"version":3,"file":"sc-rich-text.js","sourceRoot":"","sources":["../../../../src/components/ui/rich-text/sc-rich-text.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Event, EventEmitter, h, Host, Prop, State, Listen } from '@stencil/core';\nimport { Editor } from '@tiptap/core';\nimport CharacterCount from '@tiptap/extension-character-count';\nimport Placeholder from '@tiptap/extension-placeholder';\nimport StarterKit from '@tiptap/starter-kit';\nimport { __, sprintf } from '@wordpress/i18n';\n\nlet id = 0;\n\n@Component({\n  tag: 'sc-rich-text',\n  styleUrl: 'sc-rich-text.scss',\n  shadow: true,\n})\nexport class ScRichText {\n  private inputId: string = `sc-richtext-${++id}`;\n  private helpId = `sc-richtext-help-text-${id}`;\n  private labelId = `sc-richtext-label-${id}`;\n\n  /** The textarea's size. */\n  @Prop({ reflect: true }) size: 'small' | 'medium' | 'large' = 'medium';\n\n  /** The textarea's name attribute. */\n  @Prop() name: string;\n\n  /** The textarea's value attribute. */\n  @Prop() value = '';\n\n  /** The textarea's label. Alternatively, you can use the label slot. */\n  @Prop() label = '';\n\n  /** Should we show the label */\n  @Prop() showLabel: boolean = true;\n\n  /** The textarea's help text. Alternatively, you can use the help-text slot. */\n  @Prop() help = '';\n\n  /** The textarea's placeholder text. */\n  @Prop() placeholder: string;\n\n  /** The max length. */\n  @Prop() maxlength: number;\n\n  /** Disables the textarea. */\n  @Prop({ reflect: true }) disabled: boolean = false;\n\n  /** Makes the textarea readonly. */\n  @Prop({ reflect: true }) readonly: boolean = false;\n\n  /** Makes the textarea a required field. */\n  @Prop({ reflect: true }) required: boolean = false;\n\n  @State() updatedAt: any = Date.now();\n  @State() hasFocus: boolean;\n\n  @Event() scChange: EventEmitter<void>;\n  @Event() scInput: EventEmitter<void>;\n  @Event() scBlur: EventEmitter<void>;\n  @Event() scFocus: EventEmitter<void>;\n\n  private element: HTMLDivElement;\n  private editor: any;\n\n  componentDidLoad() {\n    if (this.editor) return;\n    this.editor = new Editor({\n      element: this.element,\n      extensions: [\n        StarterKit,\n        Placeholder.configure({\n          // Use a placeholder:\n          placeholder: this.placeholder,\n        }),\n        ...(this?.maxlength > 0\n          ? [\n              CharacterCount.configure({\n                limit: this.maxlength,\n                mode: 'nodeSize',\n              }),\n            ]\n          : []),\n      ],\n      content: this.value,\n      onCreate: ({ editor }) => {\n        this.value = editor.getHTML();\n      },\n      onUpdate: ({ editor }) => {\n        this.value = editor.getHTML();\n        this.scInput.emit();\n        this.scChange.emit();\n      },\n      onSelectionUpdate: () => {\n        this.updatedAt = Date.now();\n      },\n      onFocus: () => {\n        this.handleFocus();\n      },\n      onBlur: () => {\n        this.handleBlur();\n      },\n    });\n  }\n\n  handleFocus() {\n    this.hasFocus = true;\n    this.scFocus.emit();\n  }\n\n  handleBlur() {\n    this.hasFocus = false;\n    this.scBlur.emit();\n  }\n\n  isActive(type, opts = {}) {\n    return this.editor?.isActive?.(type, opts);\n  }\n\n  toggleHeading(opts) {\n    this.editor.chain().toggleHeading(opts).focus().run();\n  }\n\n  toggleBold() {\n    this.editor.chain().toggleBold().focus().run();\n  }\n\n  toggleItalic() {\n    this.editor.chain().toggleItalic().focus().run();\n  }\n\n  can(property) {\n    return this.editor?.can()?.chain?.()?.focus?.()?.[property]?.()?.run?.();\n  }\n\n  run(property) {\n    return this.editor?.chain?.()?.focus?.()?.[property]?.()?.run?.();\n  }\n\n  remainingCharacters() {\n    if (!this.maxlength) return 1000;\n    return this.maxlength - (this?.editor?.storage?.characterCount.characters() || 0);\n  }\n\n  @Listen('keydown')\n  handleKeyDown(event: KeyboardEvent) {\n    // Prevent keyboard propagation for Jetpack's notification shortcut, which is 'n'.\n    if (event.key === 'n') {\n      event.stopPropagation();\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <sc-form-control\n          exportparts=\"label, help-text, form-control\"\n          size={this.size}\n          required={this.required}\n          label={this.label}\n          showLabel={this.showLabel}\n          help={this.help}\n          inputId={this.inputId}\n          helpId={this.helpId}\n          labelId={this.labelId}\n          name={this.name}\n        >\n          <div part=\"base\" class={{ 'editor-base': true, 'editor--focused': this.hasFocus }}>\n            <div class=\"menu\">\n              <sc-button size=\"small\" type={this.editor?.isActive?.('bold') ? 'default' : 'text'} onClick={() => this.run('toggleBold')} disabled={!this.can('toggleBold')}>\n                <sc-icon name=\"bold\" />\n              </sc-button>\n              <sc-button size=\"small\" type={this.editor?.isActive?.('italic') ? 'default' : 'text'} onClick={() => this.run('toggleItalic')} disabled={!this.can('toggleItalic')}>\n                <sc-icon name=\"italic\" />\n              </sc-button>\n              <sc-button size=\"small\" type={this.editor?.isActive?.('bulletList') ? 'default' : 'text'} onClick={() => this.run('toggleBulletList')}>\n                <sc-icon name=\"list\" />\n              </sc-button>\n              <sc-button size=\"small\" type={this.editor?.isActive?.('strike') ? 'default' : 'text'} onClick={() => this.run('toggleStrike')}>\n                <sc-icon name=\"minus\" />\n              </sc-button>\n              <sc-button class=\"right\" size=\"small\" type=\"text\" onClick={() => this.run('undo')} disabled={!this.can('undo')}>\n                <sc-icon name=\"corner-up-left\" />\n              </sc-button>\n              <sc-button size=\"small\" type=\"text\" onClick={() => this.run('redo')} disabled={!this.can('redo')}>\n                <sc-icon name=\"corner-up-right\" />\n              </sc-button>\n            </div>\n            <div\n              part=\"editor\"\n              class={{\n                editor: true,\n              }}\n              ref={el => (this.element = el as HTMLDivElement)}\n            ></div>\n          </div>\n          {this.remainingCharacters() < 20 && <div class={'textarea__char-limit-warning'}>{sprintf(__('%d characters remaining', 'surecart'), this.remainingCharacters())}</div>}\n        </sc-form-control>\n      </Host>\n    );\n  }\n}\n"]}