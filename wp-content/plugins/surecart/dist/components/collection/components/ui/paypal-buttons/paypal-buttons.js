import{loadScript}from"@paypal/paypal-js";import{h}from"@stencil/core";import{__}from"@wordpress/i18n";import apiFetch from"../../../functions/fetch";import{fetchCheckout}from"../../../services/session";import{getScriptLoadParams}from"./functions";import{createErrorNotice}from"@store/notices/mutations";export class ScPaypalButtons{constructor(){this.clientId=void 0,this.busy=!1,this.merchantId=void 0,this.merchantInitiated=void 0,this.mode=void 0,this.order=void 0,this.buttons=["paypal","card"],this.label="paypal",this.color="gold",this.loaded=void 0}handleOrderChange(e,t){(null==e?void 0:e.updated_at)!==(null==t?void 0:t.updated_at)&&(this.cardContainer.innerHTML="",this.paypalContainer.innerHTML="",this.loadScript())}async loadScript(){var e,t;if(this.clientId&&this.merchantId)try{const r=await loadScript(getScriptLoadParams({clientId:this.clientId,merchantId:this.merchantId,merchantInitiated:this.merchantInitiated,reusable:null===(e=this.order)||void 0===e?void 0:e.reusable_payment_method_required,currency:null===(t=this.order)||void 0===t?void 0:t.currency}));this.renderButtons(r)}catch(e){console.error("failed to load the PayPal JS SDK script",e)}}componentDidLoad(){this.loadScript()}renderButtons(e){const t={onClick:async(e,t)=>{const r=this.el.closest("sc-checkout");return await r.validate()?t.resolve():t.reject()},onInit:()=>{this.loaded=!0},onCancel:()=>{this.scSetState.emit("REJECT")},onApprove:async()=>{var e,t,r,a;try{this.order=await fetchCheckout({id:null===(e=this.order)||void 0===e?void 0:e.id})}catch(e){console.error(e),createErrorNotice({code:"could_not_capture",message:__("The payment did not process. Please try again.","surecart")}),this.scSetState.emit("REJECT")}try{this.scSetState.emit("PAYING");const e=await apiFetch({method:"PATCH",path:`surecart/v1/payment_intents/${(null===(r=null===(t=this.order)||void 0===t?void 0:t.payment_intent)||void 0===r?void 0:r.id)||(null===(a=this.order)||void 0===a?void 0:a.payment_intent)}/capture`});["succeeded","processing"].includes(null==e?void 0:e.status)?(this.scSetState.emit("PAID"),this.scPaid.emit()):(createErrorNotice({code:"could_not_capture",message:__("Payment processing failed. Kindly attempt the transaction once more.","surecart")}),this.scSetState.emit("REJECT"))}catch(e){console.error(e),createErrorNotice({code:"could_not_capture",message:__("Payment processing failed. Kindly attempt the transaction once more.","surecart")}),this.scSetState.emit("REJECT")}},onError:e=>{console.error(e),createErrorNotice(e),this.scSetState.emit("REJECT")}};if(t[this.order.reusable_payment_method_required?"createBillingAgreement":"createOrder"]=async()=>new Promise((async(e,t)=>{var r,a;const o=this.el.closest("sc-checkout"),i=await o.submit();return i instanceof Error?t(i):"finalized"!==(null==i?void 0:i.status)?t(new Error("Something went wrong. Please try again.")):(null===(r=null==i?void 0:i.payment_intent)||void 0===r?void 0:r.external_intent_id)?e(null===(a=null==i?void 0:i.payment_intent)||void 0===a?void 0:a.external_intent_id):(createErrorNotice({code:"missing_payment_intent",message:__("Something went wrong. Please contact us for payment.","surecart")}),t())})),e.FUNDING.PAYPAL){const r=e.Buttons({fundingSource:e.FUNDING.PAYPAL,style:{label:this.label,color:this.color},...t});r.isEligible()&&r.render(this.paypalContainer)}if(e.FUNDING.CARD){const r=e.Buttons({fundingSource:e.FUNDING.CARD,style:{color:"black"},...t});r.isEligible()&&r.render(this.cardContainer)}}render(){return h("div",{part:`base ${this.busy||!this.loaded&&"base--busy"}`,class:{"paypal-buttons":!0,"paypal-buttons--busy":this.busy||!this.loaded}},(!this.loaded||this.busy)&&h("sc-skeleton",{style:{height:"55px","--border-radius":"4px",cursor:"wait"}}),h("div",{class:"sc-paypal-button-container",hidden:!this.loaded||this.busy},h("div",{part:"paypal-card-button",hidden:!this.buttons.includes("card"),class:"sc-paypal-card-button",ref:e=>this.cardContainer=e}),h("div",{part:"paypal-button",hidden:!this.buttons.includes("paypal"),class:"sc-paypal-button",ref:e=>this.paypalContainer=e})))}static get is(){return"sc-paypal-buttons"}static get encapsulation(){return"shadow"}static get originalStyleUrls(){return{$:["paypal-buttons.scss"]}}static get styleUrls(){return{$:["paypal-buttons.css"]}}static get properties(){return{clientId:{type:"string",mutable:!1,complexType:{original:"string",resolved:"string",references:{}},required:!1,optional:!1,docs:{tags:[],text:"Client id for the script."},attribute:"client-id",reflect:!1},busy:{type:"boolean",mutable:!1,complexType:{original:"boolean",resolved:"boolean",references:{}},required:!1,optional:!1,docs:{tags:[],text:"Is this busy?"},attribute:"busy",reflect:!1,defaultValue:"false"},merchantId:{type:"string",mutable:!1,complexType:{original:"string",resolved:"string",references:{}},required:!1,optional:!1,docs:{tags:[],text:"The merchant id for paypal."},attribute:"merchant-id",reflect:!1},merchantInitiated:{type:"boolean",mutable:!1,complexType:{original:"boolean",resolved:"boolean",references:{}},required:!1,optional:!1,docs:{tags:[],text:"Merchant initiated billing enabled."},attribute:"merchant-initiated",reflect:!1},mode:{type:"string",mutable:!1,complexType:{original:"'test' | 'live'",resolved:'"live" | "test"',references:{}},required:!1,optional:!1,docs:{tags:[],text:"Test or live mode."},attribute:"mode",reflect:!1},order:{type:"unknown",mutable:!0,complexType:{original:"Checkout",resolved:"Checkout",references:{Checkout:{location:"import",path:"../../../types"}}},required:!1,optional:!1,docs:{tags:[],text:"The order."}},buttons:{type:"unknown",mutable:!1,complexType:{original:"string[]",resolved:"string[]",references:{}},required:!1,optional:!1,docs:{tags:[],text:"Buttons to render"},defaultValue:"['paypal', 'card']"},label:{type:"string",mutable:!1,complexType:{original:"'paypal' | 'checkout' | 'buynow' | 'pay' | 'installment'",resolved:'"buynow" | "checkout" | "installment" | "pay" | "paypal"',references:{}},required:!1,optional:!1,docs:{tags:[],text:"Label for the button."},attribute:"label",reflect:!1,defaultValue:"'paypal'"},color:{type:"string",mutable:!1,complexType:{original:"'gold' | 'blue' | 'silver' | 'black' | 'white'",resolved:'"black" | "blue" | "gold" | "silver" | "white"',references:{}},required:!1,optional:!1,docs:{tags:[],text:"Button color."},attribute:"color",reflect:!1,defaultValue:"'gold'"}}}static get states(){return{loaded:{}}}static get events(){return[{method:"scSetState",name:"scSetState",bubbles:!0,cancelable:!0,composed:!0,docs:{tags:[],text:"Set the state machine"},complexType:{original:"string",resolved:"string",references:{}}},{method:"scPaid",name:"scPaid",bubbles:!0,cancelable:!0,composed:!0,docs:{tags:[],text:""},complexType:{original:"void",resolved:"void",references:{}}}]}static get elementRef(){return"el"}static get watchers(){return[{propName:"order",methodName:"handleOrderChange"}]}}