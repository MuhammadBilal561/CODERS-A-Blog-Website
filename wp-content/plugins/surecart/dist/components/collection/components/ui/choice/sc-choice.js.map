{"version":3,"file":"sc-choice.js","sourceRoot":"","sources":["../../../../src/components/ui/choice/sc-choice.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Event, EventEmitter, h, Host, Listen, Method, Prop, State, Watch } from '@stencil/core';\nimport { __ } from '@wordpress/i18n';\n\nimport { FormSubmitController } from '../../../functions/form-data';\nimport { isRtl } from '../../../functions/page-align';\n\nlet id = 0;\n\n@Component({\n  tag: 'sc-choice',\n  styleUrl: 'sc-choice.scss',\n  shadow: true,\n})\nexport class ScChoice {\n  @Element() el: HTMLScChoiceElement;\n\n  private formController: any;\n\n  private input: HTMLInputElement;\n  private inputId: string = `choice-${++id}`;\n  private labelId: string = `choice-label-${id}`;\n\n  /** Does the choice have focus */\n  @State() hasFocus: boolean = false;\n\n  /** Does the choice have focus */\n  @State() isStacked: boolean = false;\n\n  /** The choice name attribute */\n  @Prop() name: string;\n\n  /** The size. */\n  @Prop() size: 'small' | 'medium' | 'large' = 'medium';\n\n  /** The choice value */\n  @Prop({ reflect: true }) value: string;\n\n  /** The choice name attribute */\n  @Prop() type: 'radio' | 'checkbox' = 'radio';\n\n  /** Is the choice disabled */\n  @Prop({ reflect: true, mutable: true }) disabled: boolean = false;\n\n  /** Draws the choice in a checked state. */\n  @Prop({ reflect: true, mutable: true }) checked: boolean = false;\n\n  /** Is this required */\n  @Prop({ reflect: true }) required: boolean = false;\n\n  /** This will be true when the control is in an invalid state. Validity is determined by the `required` prop. */\n  @Prop({ reflect: true, mutable: true }) invalid: boolean = false;\n\n  /** Show the label */\n  @Prop() showLabel: boolean = true;\n\n  /** Show the price */\n  @Prop() showPrice: boolean = true;\n\n  /** Show the radio/checkbox control */\n  @Prop() showControl: boolean = true;\n\n  @State() hasDefaultSlot: boolean;\n  @State() hasPrice: boolean;\n  @State() hasPer: boolean;\n  @State() hasDescription: boolean;\n\n  /** Emitted when the control loses focus. */\n  @Event() scBlur: EventEmitter<void>;\n\n  /** Emitted when the control's checked state changes. */\n  @Event() scChange: EventEmitter<boolean>;\n\n  /** Emitted when the control gains focus. */\n  @Event() scFocus: EventEmitter<void>;\n\n  /** Simulates a click on the choice. */\n  @Method()\n  async triggerClick() {\n    this.input.click();\n  }\n\n  @Method()\n  async triggerFocus() {\n    this.input.focus();\n  }\n\n  /** Checks for validity and shows the browser's validation message if the control is invalid. */\n  @Method()\n  async reportValidity() {\n    this.invalid = !this.input.checkValidity();\n\n    if (this.required) {\n      const choices = this.getAllChoices();\n      if (!choices.some(c => c.checked)) {\n        this.input.setCustomValidity(this.type === 'radio' ? __('Please choose one.', 'surecart') : __('Please choose at least one.', 'surecart'));\n        this.invalid = !this.input.checkValidity();\n      } else {\n        this.input.setCustomValidity('');\n        this.invalid = !this.input.checkValidity();\n      }\n    }\n\n    return this.input.reportValidity();\n  }\n\n  @Watch('checked')\n  handleCheckedChange() {\n    this.input.setCustomValidity('');\n    if (this.type === 'radio' && this.checked) {\n      this.getSiblingChoices().map(choice => (choice.checked = false));\n    }\n    this.input.checked = this.checked;\n  }\n\n  handleBlur() {\n    this.hasFocus = false;\n    this.scBlur.emit();\n  }\n\n  handleFocus() {\n    this.hasFocus = true;\n    this.scFocus.emit();\n  }\n\n  /** Sets a custom validation message. If `message` is not empty, the field will be considered invalid. */\n  @Method()\n  async setCustomValidity(message: string) {\n    this.input.setCustomValidity(message);\n    this.invalid = !this.input.checkValidity();\n  }\n\n  getAllChoices() {\n    const choiceGroup = this.el.closest('sc-choices') || this.el.parentElement;\n    // Radios must be part of a radio group\n    if (!choiceGroup) {\n      return [];\n    }\n    return [...choiceGroup.querySelectorAll('sc-choice')] as HTMLScChoiceElement[];\n  }\n\n  getSiblingChoices() {\n    return this.getAllChoices().filter(choice => choice !== this.el) as HTMLScChoiceElement[];\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    // On arrow key press\n    if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(event.key)) {\n      const choices = this.getAllChoices().filter(choice => !choice.disabled);\n      const incr = ['ArrowUp', 'ArrowLeft'].includes(event.key) ? -1 : 1;\n      let index = choices.indexOf(this.el) + incr;\n      if (index < 0) index = choices.length - 1;\n      if (index > choices.length - 1) index = 0;\n\n      choices[index].triggerFocus();\n      choices[index].checked = true;\n\n      event.preventDefault();\n    }\n    if ('Enter' === event.key || ' ' === event.key) {\n      this.handleClickEvent();\n    }\n  }\n\n  // Prevent clicks on the label from briefly blurring the input\n  handleMouseDown(event: MouseEvent) {\n    event.preventDefault();\n    this.input.focus();\n  }\n\n  componentDidLoad() {\n    this.handleResize();\n    this.formController = new FormSubmitController(this.el, {\n      value: (control: HTMLScChoiceElement) => (control.checked ? control.value : undefined),\n    }).addFormData();\n  }\n\n  disconnectedCallback() {\n    this.formController?.removeFormData();\n  }\n\n  handleResize() {\n    if (!window?.ResizeObserver) {\n      return;\n    }\n    const resizeObserver = new window.ResizeObserver(entries => {\n      for (let entry of entries) {\n        if (entry.contentBoxSize) {\n          const contentBoxSize = Array.isArray(entry.contentBoxSize) ? entry.contentBoxSize[0] : entry.contentBoxSize;\n          setTimeout(() => (this.isStacked = contentBoxSize?.inlineSize < 350), 0);\n        }\n      }\n    });\n    resizeObserver.observe(this.el);\n  }\n\n  handleSlotChange() {\n    this.hasPrice = !!this.el.querySelector('[slot=\"price\"]');\n    this.hasPer = !!this.el.querySelector('[slot=\"per\"]');\n    this.hasDescription = !!this.el.querySelector('[slot=\"description\"]');\n    this.hasDefaultSlot = !!this.el.querySelector('[slot=\"default\"]');\n  }\n\n  @Listen('click')\n  handleClickEvent() {\n    if (this.type === 'checkbox') {\n      this.checked = !this.checked;\n      this.scChange.emit(this.input.checked);\n    } else if (!this.checked) {\n      this.checked = true;\n      this.scChange.emit(this.input.checked);\n    }\n  }\n\n  render() {\n    return (\n      <Host tabindex=\"0\" onFocus={() => this.input.focus()}>\n        <div\n          part=\"base\"\n          class={{\n            'choice': true,\n            'choice--checked': this.checked,\n            'choice--disabled': this.disabled,\n            'choice--focused': this.hasFocus,\n            'choice--layout-columns': !this.isStacked,\n            'choice--is-rtl': isRtl(),\n            [`choice--size-${this.size}`]: true,\n          }}\n          onKeyDown={e => this.handleKeyDown(e)}\n          onMouseDown={e => this.handleMouseDown(e)}\n        >\n          <slot name=\"header\" />\n          <label class=\"choice__content\" part=\"content\" htmlFor={this.inputId}>\n            <span\n              part=\"control\"\n              class={{\n                choice__control: true,\n                choice__checkbox: this.type === 'checkbox',\n                choice__radio: this.type === 'radio',\n              }}\n              hidden={!this.showControl}\n            >\n              <span part=\"checked-icon\" class=\"choice__icon\">\n                {this.type === 'checkbox' ? (\n                  <svg viewBox=\"0 0 16 16\">\n                    <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" stroke-linecap=\"round\">\n                      <g stroke=\"currentColor\" stroke-width=\"2\">\n                        <g transform=\"translate(3.428571, 3.428571)\">\n                          <path d=\"M0,5.71428571 L3.42857143,9.14285714\"></path>\n                          <path d=\"M9.14285714,0 L3.42857143,9.14285714\"></path>\n                        </g>\n                      </g>\n                    </g>\n                  </svg>\n                ) : (\n                  <svg viewBox=\"0 0 16 16\">\n                    <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                      <g fill=\"currentColor\">\n                        <circle cx=\"8\" cy=\"8\" r=\"3.42857143\"></circle>\n                      </g>\n                    </g>\n                  </svg>\n                )}\n              </span>\n              <input\n                id={this.inputId}\n                ref={el => (this.input = el as HTMLInputElement)}\n                type={this.type}\n                name={this.name}\n                value={this.value}\n                checked={this.checked}\n                disabled={this.disabled}\n                aria-checked={this.checked ? 'true' : 'false'}\n                aria-disabled={this.disabled ? 'true' : 'false'}\n                aria-labelledby={this.labelId}\n                tabindex=\"0\"\n                // required={this.required}\n                onBlur={() => this.handleBlur()}\n                onFocus={() => this.handleFocus()}\n                onChange={() => this.handleClickEvent()}\n              />\n            </span>\n            <span part=\"label\" id={this.labelId} class=\"choice__label\">\n              <span class=\"choice__label-text\" hidden={!this.showLabel}>\n                <span class=\"choice__title\" part=\"title\">\n                  <slot onSlotchange={() => this.handleSlotChange()}></slot>\n                </span>\n                <span class=\"choice__description description\" part=\"description\" hidden={!this.hasDescription}>\n                  <slot name=\"description\" onSlotchange={() => this.handleSlotChange()}></slot>\n                </span>\n              </span>\n\n              <span class=\"choice__price\" hidden={!this.showPrice || (!this.hasPrice && !this.hasPer)}>\n                <span class=\"choice__title\">\n                  <slot name=\"price\" onSlotchange={() => this.handleSlotChange()}></slot>\n                </span>{' '}\n                <span class=\"choice__description\">\n                  <slot name=\"per\" onSlotchange={() => this.handleSlotChange()}></slot>\n                </span>\n              </span>\n            </span>\n          </label>\n          <slot name=\"footer\" />\n        </div>\n      </Host>\n    );\n  }\n}\n"]}