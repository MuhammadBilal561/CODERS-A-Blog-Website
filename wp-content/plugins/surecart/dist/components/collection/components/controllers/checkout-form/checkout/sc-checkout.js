import{h}from"@stencil/core";import{state as checkoutState}from"@store/checkout";import{state as formState}from"@store/form";import{state as userState}from"@store/user";import{state as processorsState}from"@store/processors";import{__}from"@wordpress/i18n";import{Universe}from"stencil-wormhole";export class ScCheckout{constructor(){this.prices=[],this.product=void 0,this.mode="live",this.formId=void 0,this.modified=void 0,this.currencyCode="usd",this.persistSession=!0,this.successUrl="",this.customer=void 0,this.alignment=void 0,this.taxProtocol=void 0,this.disableComponentsValidation=void 0,this.processors=void 0,this.manualPaymentMethods=void 0,this.editLineItems=!0,this.removeLineItems=!0,this.abandonedCheckoutEnabled=void 0,this.stripePaymentElement=!1,this.pricesEntities={},this.productsEntities={},this.checkoutState="idle",this.error=void 0,this.processor="stripe",this.method=void 0,this.isManualProcessor=void 0,this.paymentIntents={},this.isDuplicate=void 0}handleOrderStateUpdate(e){checkoutState.checkout=e.detail}handleMethodChange(e){this.method=e.detail}handleAddEntities(e){const{products:t,prices:o}=e.detail;Object.keys((null==t?void 0:t.length)||{})&&(this.productsEntities={...this.productsEntities,...t}),Object.keys((null==o?void 0:o.length)||{})&&(this.pricesEntities={...this.pricesEntities,...o})}async submit({skip_validation:e}={skip_validation:!1}){return e||await this.validate(),await this.sessionProvider.finalize()}async validate(){const e=this.el.querySelector("sc-form");return await e.validate()}componentWillLoad(){const e=document.querySelector("sc-checkout");this.isDuplicate=!!e&&e!==this.el,this.isDuplicate||Universe.create(this,this.state())}state(){var e,t,o,s,i,r,a,c,n,l,d,u,p,m,h,g,v,f,b,y,k,_x;return{processor:this.processor,method:this.method,selectedProcessorId:this.processor,manualPaymentMethods:this.manualPaymentMethods,processor_data:null===(e=checkoutState.checkout)||void 0===e?void 0:e.processor_data,state:this.checkoutState,formState:formState.formState.value,paymentIntents:this.paymentIntents,successUrl:this.successUrl,bumps:null===(o=null===(t=checkoutState.checkout)||void 0===t?void 0:t.recommended_bumps)||void 0===o?void 0:o.data,order:checkoutState.checkout,abandonedCheckoutEnabled:null===(s=checkoutState.checkout)||void 0===s?void 0:s.abandoned_checkout_enabled,checkout:checkoutState.checkout,shippingEnabled:null===(i=checkoutState.checkout)||void 0===i?void 0:i.shipping_enabled,lineItems:(null===(a=null===(r=checkoutState.checkout)||void 0===r?void 0:r.line_items)||void 0===a?void 0:a.data)||[],editLineItems:this.editLineItems,removeLineItems:this.removeLineItems,loading:"loading"===formState.formState.value,busy:["updating","finalizing","paying","confirming"].includes(formState.formState.value),paying:["finalizing","paying","confirming"].includes(formState.formState.value),empty:!["loading","updating"].includes(formState.formState.value)&&!(null===(l=null===(n=null===(c=checkoutState.checkout)||void 0===c?void 0:c.line_items)||void 0===n?void 0:n.pagination)||void 0===l?void 0:l.count),stripePaymentElement:processorsState.config.stripe.paymentElement,stripePaymentIntent:((null===(u=null===(d=checkoutState.checkout)||void 0===d?void 0:d.staged_payment_intents)||void 0===u?void 0:u.data)||[]).find((e=>"stripe"===e.processor_type)),error:this.error,customer:this.customer,tax_status:null===(p=checkoutState.checkout)||void 0===p?void 0:p.tax_status,taxEnabled:null===(m=checkoutState.checkout)||void 0===m?void 0:m.tax_enabled,customerShippingAddress:"string"!=typeof(null===(h=checkoutState.checkout)||void 0===h?void 0:h.customer)?null===(v=null===(g=checkoutState.checkout)||void 0===g?void 0:g.customer)||void 0===v?void 0:v.shipping_address:{},shippingAddress:null===(f=checkoutState.checkout)||void 0===f?void 0:f.shipping_address,taxStatus:null===(b=checkoutState.checkout)||void 0===b?void 0:b.tax_status,taxIdentifier:null===(y=checkoutState.checkout)||void 0===y?void 0:y.tax_identifier,totalAmount:null===(k=checkoutState.checkout)||void 0===k?void 0:k.total_amount,taxProtocol:this.taxProtocol,lockedChoices:this.prices,products:this.productsEntities,prices:this.pricesEntities,country:"US",loggedIn:userState.loggedIn,emailExists:null===(_x=checkoutState.checkout)||void 0===_x?void 0:_x.email_exists,formId:checkoutState.formId,mode:checkoutState.mode,currencyCode:checkoutState.currencyCode}}render(){return this.isDuplicate?h("sc-alert",{open:!0},__("Due to processor restrictions, only one checkout form is allowed on the page.","surecart")):h("div",{class:{"sc-checkout-container":!0,"sc-align-center":"center"===this.alignment,"sc-align-wide":"wide"===this.alignment,"sc-align-full":"full"===this.alignment}},h("sc-checkout-unsaved-changes-warning",{state:this.checkoutState}),checkoutState.validateStock&&h("sc-checkout-stock-alert",null),h(Universe.Provider,{state:this.state()},h("sc-login-provider",{loggedIn:userState.loggedIn,onScSetCustomer:e=>this.customer=e.detail,onScSetLoggedIn:e=>userState.loggedIn=e.detail,order:checkoutState.checkout},h("sc-form-state-provider",{onScSetCheckoutFormState:e=>this.checkoutState=e.detail},h("sc-form-error-provider",null,h("sc-form-components-validator",{disabled:this.disableComponentsValidation,taxProtocol:checkoutState.taxProtocol},h("sc-order-confirm-provider",{"checkout-status":formState.formState.value,"success-url":this.successUrl},h("sc-session-provider",{ref:e=>this.sessionProvider=e,prices:this.prices,persist:this.persistSession},h("slot",null))))))),this.state().busy&&h("sc-block-ui",{class:"busy-block-ui",style:{"z-index":"30"}}),["finalizing","paying","confirming","confirmed","redirecting"].includes(formState.formState.value)&&h("sc-block-ui",{spinner:!0,style:{"--sc-block-ui-opacity":"0.75","z-index":"30"}},formState.text.loading[formState.formState.value]||__("Processing payment...","surecart"))))}static get is(){return"sc-checkout"}static get originalStyleUrls(){return{$:["sc-checkout.scss"]}}static get styleUrls(){return{$:["sc-checkout.css"]}}static get properties(){return{prices:{type:"unknown",mutable:!1,complexType:{original:"Array<PriceChoice>",resolved:"PriceChoice[]",references:{Array:{location:"global"},PriceChoice:{location:"import",path:"../../../../types"}}},required:!1,optional:!1,docs:{tags:[],text:"An array of prices to pre-fill in the form."},defaultValue:"[]"},product:{type:"unknown",mutable:!1,complexType:{original:"Product",resolved:"Product",references:{Product:{location:"import",path:"../../../../types"}}},required:!1,optional:!1,docs:{tags:[],text:"A product to pre-fill the form."}},mode:{type:"string",mutable:!1,complexType:{original:"'test' | 'live'",resolved:'"live" | "test"',references:{}},required:!1,optional:!1,docs:{tags:[],text:"Are we in test or live mode."},attribute:"mode",reflect:!1,defaultValue:"'live'"},formId:{type:"number",mutable:!1,complexType:{original:"number",resolved:"number",references:{}},required:!1,optional:!1,docs:{tags:[],text:"The checkout form id"},attribute:"form-id",reflect:!1},modified:{type:"string",mutable:!1,complexType:{original:"string",resolved:"string",references:{}},required:!1,optional:!1,docs:{tags:[],text:"When the form was modified."},attribute:"modified",reflect:!1},currencyCode:{type:"string",mutable:!1,complexType:{original:"string",resolved:"string",references:{}},required:!1,optional:!1,docs:{tags:[],text:"Currency to use for this checkout."},attribute:"currency-code",reflect:!1,defaultValue:"'usd'"},persistSession:{type:"boolean",mutable:!1,complexType:{original:"boolean",resolved:"boolean",references:{}},required:!1,optional:!1,docs:{tags:[],text:"Whether to persist the session in the browser between visits."},attribute:"persist-session",reflect:!1,defaultValue:"true"},successUrl:{type:"string",mutable:!1,complexType:{original:"string",resolved:"string",references:{}},required:!1,optional:!1,docs:{tags:[],text:"Where to go on success"},attribute:"success-url",reflect:!1,defaultValue:"''"},customer:{type:"unknown",mutable:!0,complexType:{original:"Customer",resolved:"Customer",references:{Customer:{location:"import",path:"../../../../types"}}},required:!1,optional:!1,docs:{tags:[],text:"Stores the current customer"}},alignment:{type:"string",mutable:!1,complexType:{original:"'center' | 'wide' | 'full'",resolved:'"center" | "full" | "wide"',references:{}},required:!1,optional:!1,docs:{tags:[],text:"Alignment"},attribute:"alignment",reflect:!1},taxProtocol:{type:"unknown",mutable:!1,complexType:{original:"TaxProtocol",resolved:"TaxProtocol",references:{TaxProtocol:{location:"import",path:"../../../../types"}}},required:!1,optional:!1,docs:{tags:[],text:"The account tax protocol"}},disableComponentsValidation:{type:"boolean",mutable:!1,complexType:{original:"boolean",resolved:"boolean",references:{}},required:!1,optional:!1,docs:{tags:[],text:"Should we disable components validation"},attribute:"disable-components-validation",reflect:!1},processors:{type:"unknown",mutable:!0,complexType:{original:"Processor[]",resolved:"Processor[]",references:{Processor:{location:"import",path:"../../../../types"}}},required:!1,optional:!1,docs:{tags:[],text:"Processors enabled for this form."}},manualPaymentMethods:{type:"unknown",mutable:!1,complexType:{original:"ManualPaymentMethod[]",resolved:"ManualPaymentMethod[]",references:{ManualPaymentMethod:{location:"import",path:"../../../../types"}}},required:!1,optional:!1,docs:{tags:[],text:"Manual payment methods enabled for this form."}},editLineItems:{type:"boolean",mutable:!1,complexType:{original:"boolean",resolved:"boolean",references:{}},required:!1,optional:!1,docs:{tags:[],text:"Can we edit line items?"},attribute:"edit-line-items",reflect:!1,defaultValue:"true"},removeLineItems:{type:"boolean",mutable:!1,complexType:{original:"boolean",resolved:"boolean",references:{}},required:!1,optional:!1,docs:{tags:[],text:"Can we remove line items?"},attribute:"remove-line-items",reflect:!1,defaultValue:"true"},abandonedCheckoutEnabled:{type:"boolean",mutable:!1,complexType:{original:"boolean",resolved:"boolean",references:{}},required:!1,optional:!1,docs:{tags:[],text:"Is abandoned checkout enabled."},attribute:"abandoned-checkout-enabled",reflect:!1},stripePaymentElement:{type:"boolean",mutable:!1,complexType:{original:"boolean",resolved:"boolean",references:{}},required:!1,optional:!1,docs:{tags:[],text:"Use the Stripe payment element."},attribute:"stripe-payment-element",reflect:!1,defaultValue:"false"}}}static get states(){return{pricesEntities:{},productsEntities:{},checkoutState:{},error:{},processor:{},method:{},isManualProcessor:{},paymentIntents:{},isDuplicate:{}}}static get events(){return[{method:"scOrderUpdated",name:"scOrderUpdated",bubbles:!0,cancelable:!0,composed:!0,docs:{tags:[],text:"Checkout has been updated."},complexType:{original:"Checkout",resolved:"Checkout",references:{Checkout:{location:"import",path:"../../../../types"}}}},{method:"scOrderFinalized",name:"scOrderFinalized",bubbles:!0,cancelable:!0,composed:!0,docs:{tags:[],text:"Checkout has been finalized."},complexType:{original:"Checkout",resolved:"Checkout",references:{Checkout:{location:"import",path:"../../../../types"}}}},{method:"scOrderError",name:"scOrderError",bubbles:!0,cancelable:!0,composed:!0,docs:{tags:[],text:"Checkout has an error."},complexType:{original:"ResponseError",resolved:"ResponseError",references:{ResponseError:{location:"import",path:"../../../../types"}}}}]}static get methods(){return{submit:{complexType:{signature:"({ skip_validation }?: { skip_validation: boolean; }) => Promise<Checkout | NodeJS.Timeout | Error>",parameters:[{tags:[],text:""}],references:{Promise:{location:"global"},Checkout:{location:"import",path:"../../../../types"},NodeJS:{location:"global"},Error:{location:"global"}},return:"Promise<Checkout | Timeout | Error>"},docs:{text:"Submit the form",tags:[]}},validate:{complexType:{signature:"() => Promise<boolean>",parameters:[],references:{Promise:{location:"global"},HTMLScFormElement:{location:"global"}},return:"Promise<boolean>"},docs:{text:"Validate the form.",tags:[]}}}}static get elementRef(){return"el"}static get listeners(){return[{name:"scUpdateOrderState",method:"handleOrderStateUpdate",target:void 0,capture:!1,passive:!1},{name:"scSetMethod",method:"handleMethodChange",target:void 0,capture:!1,passive:!1},{name:"scAddEntities",method:"handleAddEntities",target:void 0,capture:!1,passive:!1}]}}