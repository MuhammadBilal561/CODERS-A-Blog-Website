{"version":3,"file":"sc-express-payment.js","sourceRoot":"","sources":["../../../../../src/components/controllers/checkout-form/express-payment/sc-express-payment.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AACjE,OAAO,EAAE,kBAAkB,EAAE,MAAM,2BAA2B,CAAC;AAC/D,OAAO,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAO/C,MAAM,OAAO,gBAAgB;;;;;;;EAO3B,sBAAsB;IACpB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;EAChC,CAAC;EAED,0BAA0B;IACxB,MAAM,EAAE,cAAc,EAAE,GAAG,kBAAkB,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IAE9D,OAAO,iCAA2B,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,eAAe,EAAE,cAAc,aAAd,cAAc,uBAAd,cAAc,CAAE,UAAU,EAAE,cAAc,EAAE,cAAc,aAAd,cAAc,uBAAd,cAAc,CAAE,eAAe,GAAI,CAAC;EACxJ,CAAC;EAED,MAAM;IACJ,OAAO,CACL,EAAC,IAAI,IAAC,KAAK,EAAE,EAAE,UAAU,EAAE,CAAC,IAAI,CAAC,iBAAiB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;MAChE,IAAI,CAAC,0BAA0B,EAAE;MACjC,CAAC,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,kBAAY,KAAK,EAAE,EAAE,WAAW,EAAE,oCAAoC,EAAE,IAAG,IAAI,CAAC,WAAW,CAAc;MACnJ,CAAC,CAAC,QAAQ,EAAE,IAAI,sBAA2B,CACvC,CACR,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { ProcessorName } from '../../../../types';\nimport { Component, Host, h, Listen, Prop } from '@stencil/core';\nimport { getProcessorByType } from '@store/processors/getters';\nimport { formBusy } from '@store/form/getters';\n\n@Component({\n  tag: 'sc-express-payment',\n  styleUrl: 'sc-express-payment.css',\n  shadow: false,\n})\nexport class ScExpressPayment {\n  @Prop() processor: ProcessorName;\n  @Prop() dividerText: string;\n  @Prop() debug: boolean;\n  @Prop({ mutable: true }) hasPaymentOptions: boolean;\n\n  @Listen('scPaymentRequestLoaded')\n  onPaymentRequestLoaded() {\n    this.hasPaymentOptions = true;\n  }\n\n  renderStripePaymentRequest() {\n    const { processor_data } = getProcessorByType('stripe') || {};\n\n    return <sc-stripe-payment-request debug={this.debug} stripeAccountId={processor_data?.account_id} publishableKey={processor_data?.publishable_key} />;\n  }\n\n  render() {\n    return (\n      <Host class={{ 'is-empty': !this.hasPaymentOptions && !this.debug }}>\n        {this.renderStripePaymentRequest()}\n        {(this.hasPaymentOptions || this.debug) && <sc-divider style={{ '--spacing': 'calc(var(--sc-form-row-spacing)/2)' }}>{this.dividerText}</sc-divider>}\n        {!!formBusy() && <sc-block-ui></sc-block-ui>}\n      </Host>\n    );\n  }\n}\n"]}