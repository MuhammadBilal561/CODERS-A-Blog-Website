{"version":3,"file":"sc-donation-choices.js","sourceRoot":"","sources":["../../../../../src/components/controllers/checkout-form/donation-choices/sc-donation-choices.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, Prop, Watch, State, Element, Listen, Event, EventEmitter, Method } from '@stencil/core';\nimport { LineItem, LineItemData } from '../../../../types';\nimport { __ } from '@wordpress/i18n';\nimport { openWormhole } from 'stencil-wormhole';\n\n@Component({\n  tag: 'sc-donation-choices',\n  styleUrl: 'sc-donation-choices.scss',\n  shadow: true,\n})\nexport class ScDonationChoices {\n  @Element() el: HTMLScDonationChoicesElement;\n  private input: HTMLScPriceInputElement;\n\n  /** The price id for the fields. */\n  @Prop({ reflect: true }) priceId: string;\n\n  /** The default amount to load the page with. */\n  @Prop() defaultAmount: string;\n\n  /** Currency code for the donation. */\n  @Prop() currencyCode: string = 'usd';\n\n  /** Order line items. */\n  @Prop() lineItems: LineItem[] = [];\n\n  /** Is this loading */\n  @Prop() loading: boolean;\n  @Prop() busy: boolean;\n  @Prop() removeInvalid: boolean = true;\n\n  /** The label for the field. */\n  @Prop() label: string;\n\n  /** Holds the line item for this component. */\n  @State() lineItem: LineItem;\n\n  /** Error */\n  @State() error: string;\n\n  @State() showCustomAmount: boolean;\n\n  /** Toggle line item event */\n  @Event() scRemoveLineItem: EventEmitter<LineItemData>;\n\n  /** Toggle line item event */\n  @Event() scUpdateLineItem: EventEmitter<LineItemData>;\n\n  /** Toggle line item event */\n  @Event() scAddLineItem: EventEmitter<LineItemData>;\n\n  @Method()\n  async reportValidity() {\n    if (!this.input) return true;\n    return this.input.shadowRoot.querySelector('sc-input').reportValidity();\n  }\n\n  @Listen('scChange')\n  handleChange() {\n    const checked = Array.from(this.getChoices()).find(item => item.checked);\n    this.showCustomAmount = checked.value === 'ad_hoc';\n    if (!isNaN(parseInt(checked.value))) {\n      this.scUpdateLineItem.emit({ price_id: this.priceId, quantity: 1, ad_hoc_amount: parseInt(checked.value) });\n    }\n  }\n\n  @Watch('showCustomAmount')\n  handleCustomAmountToggle(val) {\n    if (val) {\n      setTimeout(() => {\n        this.input?.triggerFocus?.();\n      }, 50);\n    }\n  }\n\n  /** Store current line item in state. */\n  @Watch('lineItems')\n  handleLineItemsChange() {\n    if (!this.lineItems?.length) return;\n    this.lineItem = (this.lineItems || []).find(lineItem => lineItem.price.id === this.priceId);\n  }\n\n  @Watch('lineItem')\n  handleLineItemChange(val) {\n    this.removeInvalid && this.removeInvalidPrices();\n    const choices = this.getChoices();\n    let hasCheckedOption = false;\n    // check the correct option.\n    choices.forEach((el: HTMLScChoiceElement) => {\n      if (isNaN(parseInt(el.value)) || el.disabled) return;\n      if (parseInt(el.value) === val?.ad_hoc_amount) {\n        el.checked = true;\n        hasCheckedOption = true;\n      } else {\n        el.checked = false;\n      }\n    });\n\n    this.showCustomAmount = !hasCheckedOption;\n    // no options are checked, let's fill in the input.\n    if (!hasCheckedOption) {\n      (this.el.querySelector('sc-choice[value=\"ad_hoc\"]') as HTMLScChoiceElement).checked = true;\n    }\n  }\n\n  componentWillLoad() {\n    this.handleLineItemsChange();\n  }\n\n  selectDefaultChoice() {\n    const choices = this.getChoices();\n    if (!choices.length) return;\n    choices[0].checked = true;\n  }\n\n  getChoices() {\n    return (this.el.querySelectorAll('sc-choice') as NodeListOf<HTMLScChoiceElement>) || [];\n  }\n\n  removeInvalidPrices() {\n    if (!this.lineItem) return;\n\n    this.getChoices().forEach((el: HTMLScChoiceElement) => {\n      // we have a max and the value is more.\n      if (this.lineItem?.price?.ad_hoc_max_amount && parseInt(el.value) > this.lineItem?.price?.ad_hoc_max_amount) {\n        el.style.display = 'none';\n        el.disabled = true;\n        return;\n      }\n\n      // we have a min and the value is less.\n      if (this.lineItem?.price?.ad_hoc_min_amount && parseInt(el.value) < this.lineItem?.price?.ad_hoc_min_amount) {\n        el.style.display = 'none';\n        el.disabled = true;\n        return;\n      }\n\n      el.style.display = 'flex';\n      el.disabled = false;\n    });\n  }\n\n  updateCustomAmount() {\n    if (this.input.value === this.lineItem?.ad_hoc_amount?.toString?.()) return;\n    this.input.value\n      ? this.scUpdateLineItem.emit({ price_id: this.priceId, quantity: 1, ad_hoc_amount: parseInt(this.input.value) })\n      : this.scRemoveLineItem.emit({ price_id: this.priceId, quantity: 1 });\n  }\n\n  render() {\n    if (this.loading) {\n      return (\n        <div class=\"sc-donation-choices\">\n          <sc-skeleton style={{ width: '20%', display: 'inline-block' }}></sc-skeleton>\n          <sc-skeleton style={{ width: '60%', display: 'inline-block' }}></sc-skeleton>\n          <sc-skeleton style={{ width: '40%', display: 'inline-block' }}></sc-skeleton>\n        </div>\n      );\n    }\n\n    return (\n      <div class=\"sc-donation-choices\">\n        <sc-choices label={this.label} auto-width>\n          <slot />\n        </sc-choices>\n\n        {this.showCustomAmount && (\n          <div class=\"sc-donation-choices__form\">\n            <sc-price-input\n              ref={el => (this.input = el as HTMLScPriceInputElement)}\n              required\n              currencyCode={this.currencyCode}\n              label={'Enter an amount'}\n              value={this.lineItem?.ad_hoc_amount?.toString?.()}\n            ></sc-price-input>\n            <sc-button type=\"primary\" onClick={() => this.updateCustomAmount()} full busy={this.busy}>\n              {__('Update', 'surecart')}\n            </sc-button>\n          </div>\n        )}\n\n        {this.busy && <sc-block-ui style={{ zIndex: '9' }}></sc-block-ui>}\n      </div>\n    );\n  }\n}\n\nopenWormhole(ScDonationChoices, ['lineItems', 'loading', 'busy', 'currencyCode'], false);\n"]}