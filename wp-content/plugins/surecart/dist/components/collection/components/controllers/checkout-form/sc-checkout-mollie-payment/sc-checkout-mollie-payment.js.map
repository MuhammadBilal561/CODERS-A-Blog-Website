{"version":3,"file":"sc-checkout-mollie-payment.js","sourceRoot":"","sources":["../../../../../src/components/controllers/checkout-form/sc-checkout-mollie-payment/sc-checkout-mollie-payment.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Fragment, h, Prop, State } from '@stencil/core';\nimport { Address, Pagination, PaymentMethodType, ResponseError } from '../../../../types';\nimport { sprintf, __ } from '@wordpress/i18n';\nimport { addQueryArgs } from '@wordpress/url';\nimport { state as selectedProcessor } from '@store/selected-processor';\nimport { state as processorsState } from '@store/processors';\nimport { hasMultipleMethodChoices, availableMethodTypes, availableManualPaymentMethods, getAvailableProcessor } from '@store/processors/getters';\n// checkout store.\nimport { state as checkoutState } from '@store/checkout';\nimport { listenTo } from '@store/checkout/functions';\nimport { checkoutIsLocked } from '@store/checkout/getters';\nimport { lockCheckout, unLockCheckout } from '@store/checkout/mutations';\n\nimport apiFetch from '../../../../functions/fetch';\n\nimport { ManualPaymentMethods } from '../payment/ManualPaymentMethods';\nimport { createErrorNotice } from '@store/notices/mutations';\nimport { MockProcessor } from '../payment/MockProcessor';\n\n@Component({\n  tag: 'sc-checkout-mollie-payment',\n  styleUrl: 'sc-checkout-mollie-payment.css',\n  shadow: true,\n})\nexport class ScCheckoutMolliePayment {\n  @Prop() processorId: string;\n  @Prop() method: string;\n\n  @State() error: ResponseError;\n  @State() methods: PaymentMethodType[];\n\n  componentWillLoad() {\n    selectedProcessor.id = 'mollie';\n    this.fetchMethods();\n    listenTo('checkout', ['total_amount', 'currency', 'reusabled_payment_method_required', 'shipping_address'], () => this.fetchMethods());\n  }\n\n  async fetchMethods() {\n    const checkout = checkoutState.checkout;\n    if (!checkout?.currency || !checkout?.total_amount) return; // wait until we have a currency.\n    try {\n      lockCheckout('methods');\n      const response = (await apiFetch({\n        path: addQueryArgs(`surecart/v1/processors/${this.processorId}/payment_method_types`, {\n          amount: checkout?.total_amount,\n          country: (checkout?.shipping_address as Address)?.country || 'us',\n          currency: checkout?.currency,\n          ...(checkout?.reusable_payment_method_required ? { reusable: checkout?.reusable_payment_method_required } : {}),\n          per_page: 100,\n        }),\n      })) as {\n        object: 'list';\n        pagination: Pagination;\n        data: PaymentMethodType[];\n      };\n      processorsState.methods = response?.data || [];\n    } catch (e) {\n      createErrorNotice(e);\n      console.error(e);\n    } finally {\n      unLockCheckout('methods');\n    }\n  }\n\n  renderLoading() {\n    return (\n      <sc-card>\n        <sc-skeleton style={{ width: '50%', marginBottom: '0.5em' }}></sc-skeleton>\n        <sc-skeleton style={{ width: '30%', marginBottom: '0.5em' }}></sc-skeleton>\n        <sc-skeleton style={{ width: '60%', marginBottom: '0.5em' }}></sc-skeleton>\n      </sc-card>\n    );\n  }\n\n  render() {\n    if (checkoutIsLocked('methods') && !availableMethodTypes()?.length) {\n      return this.renderLoading();\n    }\n\n    if (!checkoutState.checkout?.currency) {\n      return this.renderLoading();\n    }\n\n    if (!availableMethodTypes()?.length) {\n      return (\n        <sc-alert type=\"warning\" open>\n          {__('No available payment methods', 'surecart')}{' '}\n        </sc-alert>\n      );\n    }\n\n    const Tag = hasMultipleMethodChoices() ? 'sc-toggles' : 'div';\n\n    return (\n      <Fragment>\n        <Tag collapsible={false} theme=\"container\">\n          {(availableMethodTypes() || []).map(method => (\n            <sc-payment-method-choice processor-id=\"mollie\" method-id={method?.id} key={method?.id}>\n              <span slot=\"summary\" class=\"sc-payment-toggle-summary\">\n                {!!method?.image && <img src={method?.image} aria-hidden=\"true\" />}\n                <span>{method?.description}</span>\n              </span>\n\n              <sc-card>\n                <sc-payment-selected label={sprintf(__('%s selected for check out.', 'surecart'), method?.description)}>\n                  {!!method?.image && <img slot=\"icon\" src={method?.image} style={{ width: '32px' }} />}\n                  {__('Another step will appear after submitting your order to complete your purchase details.', 'surecart')}\n                </sc-payment-selected>\n              </sc-card>\n            </sc-payment-method-choice>\n          ))}\n          <MockProcessor processor={getAvailableProcessor('mock')} />\n          <ManualPaymentMethods methods={availableManualPaymentMethods()} />\n        </Tag>\n        {!!checkoutIsLocked('methods') && <sc-block-ui class=\"busy-block-ui\" z-index={9} style={{ '--sc-block-ui-opacity': '0.4' }}></sc-block-ui>}\n      </Fragment>\n    );\n  }\n}\n"]}