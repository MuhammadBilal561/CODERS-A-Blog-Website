{"version":3,"file":"sc-payment-methods-list.js","sourceRoot":"","sources":["../../../../../src/components/controllers/dashboard/payment-methods-list/sc-payment-methods-list.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, h, Prop, State, Watch } from '@stencil/core';\nimport { __ } from '@wordpress/i18n';\nimport { addQueryArgs } from '@wordpress/url';\nimport apiFetch from '../../../../functions/fetch';\nimport { Customer, PaymentMethod } from '../../../../types';\nimport { onFirstVisible } from '../../../../functions/lazy';\n\n@Component({\n  tag: 'sc-payment-methods-list',\n  styleUrl: 'sc-payment-methods-list.scss',\n  shadow: true,\n})\nexport class ScPaymentMethodsList {\n  @Element() el: HTMLScPaymentMethodsListElement;\n\n  /** Query to fetch paymentMethods */\n  @Prop() query: object;\n\n  /** The heading */\n  @Prop() heading: string;\n\n  /** Is this a customer */\n  @Prop() isCustomer: boolean;\n\n  /** Whether default payment method can be detached */\n  @Prop() canDetachDefaultPaymentMethod: boolean = false;\n\n  /** Loaded payment methods */\n  @State() paymentMethods: Array<PaymentMethod> = [];\n\n  /** Loading state */\n  @State() loading: boolean;\n  @State() busy: boolean;\n\n  /** Error message */\n  @State() error: string;\n\n  /** Does this have a title slot */\n  @State() hasTitleSlot: boolean;\n\n  /** Stores the currently selected payment method for editing */\n  @State() editPaymentMethod: PaymentMethod | false = false;\n\n  /** Stores the currently selected payment method for editing */\n  @State() deletePaymentMethod: PaymentMethod | false = false;\n\n  /** Whether to cascade default payment method */\n  @State() cascadeDefaultPaymentMethod: boolean = false;\n\n  /** Only fetch if visible */\n  componentWillLoad() {\n    onFirstVisible(this.el, () => this.getPaymentMethods());\n    this.handleSlotChange();\n  }\n\n  handleSlotChange() {\n    this.hasTitleSlot = !!this.el.querySelector('[slot=\"title\"]');\n  }\n\n  /**\n   * Delete the payment method.\n   */\n  async deleteMethod() {\n    if (!this.deletePaymentMethod) return;\n    try {\n      this.busy = true;\n      (await apiFetch({\n        path: `surecart/v1/payment_methods/${this.deletePaymentMethod?.id}/detach`,\n        method: 'PATCH',\n      })) as PaymentMethod;\n      // remove from view.\n      this.paymentMethods = this.paymentMethods.filter(m => m.id !== (this.deletePaymentMethod as PaymentMethod)?.id);\n      this.deletePaymentMethod = false;\n    } catch (e) {\n      alert(e?.messsage || __('Something went wrong', 'surecart'));\n    } finally {\n      this.busy = false;\n    }\n  }\n\n  /**\n   * Set the default payment method.\n   */\n  async setDefault() {\n    if (!this.editPaymentMethod) return;\n    try {\n      this.error = '';\n      this.busy = true;\n      (await apiFetch({\n        path: `surecart/v1/customers/${(this.editPaymentMethod?.customer as Customer)?.id}`,\n        method: 'PATCH',\n        data: {\n          default_payment_method: this.editPaymentMethod?.id,\n          cascade_default_payment_method: this.cascadeDefaultPaymentMethod,\n        },\n      })) as PaymentMethod;\n      this.editPaymentMethod = false;\n    } catch (e) {\n      this.error = e?.message || __('Something went wrong', 'surecart');\n    } finally {\n      this.busy = false;\n    }\n\n    try {\n      this.busy = true;\n      this.paymentMethods = (await apiFetch({\n        path: addQueryArgs(`surecart/v1/payment_methods/`, {\n          expand: ['card', 'customer', 'billing_agreement', 'paypal_account', 'payment_instrument', 'bank_account'],\n          ...this.query,\n        }),\n      })) as PaymentMethod[];\n    } catch (e) {\n      this.error = e?.message || __('Something went wrong', 'surecart');\n    } finally {\n      this.busy = false;\n    }\n  }\n\n  /** Get all paymentMethods */\n  async getPaymentMethods() {\n    if (!this.isCustomer) {\n      return;\n    }\n\n    try {\n      this.loading = true;\n      this.paymentMethods = (await apiFetch({\n        path: addQueryArgs(`surecart/v1/payment_methods/`, {\n          expand: ['card', 'customer', 'billing_agreement', 'paypal_account', 'payment_instrument', 'bank_account'],\n          ...this.query,\n          per_page: 100,\n        }),\n      })) as PaymentMethod[];\n    } catch (e) {\n      console.error(this.error);\n      this.error = e?.message || __('Something went wrong', 'surecart');\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  renderLoading() {\n    return (\n      <sc-card noPadding>\n        <sc-stacked-list>\n          <sc-stacked-list-row style={{ '--columns': '4' }} mobile-size={500}>\n            {[...Array(4)].map(() => (\n              <sc-skeleton style={{ width: '100px', display: 'inline-block' }}></sc-skeleton>\n            ))}\n          </sc-stacked-list-row>\n        </sc-stacked-list>\n      </sc-card>\n    );\n  }\n\n  renderEmpty() {\n    return (\n      <div>\n        <sc-divider style={{ '--spacing': '0' }}></sc-divider>\n        <slot name=\"empty\">\n          <sc-empty icon=\"credit-card\">{__(\"You don't have any saved payment methods.\", 'surecart')}</sc-empty>\n        </slot>\n      </div>\n    );\n  }\n\n  renderPaymentMethodActions(paymentMethod: PaymentMethod) {\n    const { id, customer } = paymentMethod;\n\n    // If this is a string, don't show the actions.\n    if (typeof customer === 'string') return;\n\n    // If this is the default payment method and it cannot be detached, don't show the actions.\n    if (customer.default_payment_method === id && !this.canDetachDefaultPaymentMethod) return;\n\n    return (\n      <sc-dropdown placement=\"bottom-end\" slot=\"suffix\">\n        <sc-icon role=\"button\" tabIndex={0} name=\"more-horizontal\" slot=\"trigger\"></sc-icon>\n        <sc-menu>\n          {customer.default_payment_method !== id && <sc-menu-item onClick={() => (this.editPaymentMethod = paymentMethod)}>{__('Make Default', 'surecart')}</sc-menu-item>}\n          <sc-menu-item onClick={() => (this.deletePaymentMethod = paymentMethod)}>{__('Delete', 'surecart')}</sc-menu-item>\n        </sc-menu>\n      </sc-dropdown>\n    );\n  }\n\n  renderList() {\n    return this.paymentMethods.map(paymentMethod => {\n      const { id, card, customer, live_mode, billing_agreement, paypal_account } = paymentMethod;\n      return (\n        <sc-stacked-list-row style={{ '--columns': billing_agreement ? '2' : '3' }}>\n          <sc-payment-method paymentMethod={paymentMethod} />\n\n          <div class=\"payment-id\">\n            {!!card?.exp_month && (\n              <span>\n                {__('Exp.', 'surecart')}\n                {card?.exp_month}/{card?.exp_year}\n              </span>\n            )}\n            {!!paypal_account && paypal_account?.email}\n          </div>\n\n          <sc-flex justify-content=\"flex-start\" align-items=\"center\" style={{ '--spacing': '0.5em', 'marginLeft': 'auto' }}>\n            {typeof customer !== 'string' && customer?.default_payment_method === id && <sc-tag type=\"info\">{__('Default', 'surecart')}</sc-tag>}\n            {!live_mode && <sc-tag type=\"warning\">{__('Test', 'surecart')}</sc-tag>}\n          </sc-flex>\n          {this.renderPaymentMethodActions(paymentMethod)}\n        </sc-stacked-list-row>\n      );\n    });\n  }\n\n  renderContent() {\n    if (!this.isCustomer) {\n      return this.renderEmpty();\n    }\n\n    if (this.loading) {\n      return this.renderLoading();\n    }\n\n    if (this.paymentMethods?.length === 0) {\n      return this.renderEmpty();\n    }\n\n    return (\n      <sc-card no-padding>\n        <sc-stacked-list>{this.renderList()}</sc-stacked-list>\n      </sc-card>\n    );\n  }\n\n  @Watch('editPaymentMethod')\n  handleEditPaymentMethodChange() {\n    // reset when payment method edit changes\n    this.cascadeDefaultPaymentMethod = false;\n  }\n\n  render() {\n    return (\n      <sc-dashboard-module class=\"payment-methods-list\" error={this.error}>\n        <span slot=\"heading\">\n          <slot name=\"heading\">{this.heading || __('Payment Methods', 'surecart')}</slot>\n        </span>\n\n        {this.isCustomer && (\n          <sc-flex slot=\"end\">\n            <sc-button\n              type=\"link\"\n              href={addQueryArgs(window.location.href, {\n                action: 'index',\n                model: 'charge',\n              })}\n            >\n              <sc-icon name=\"clock\" slot=\"prefix\"></sc-icon>\n              {__('Payment History', 'surecart')}\n            </sc-button>\n            <sc-button\n              type=\"link\"\n              href={addQueryArgs(window.location.href, {\n                action: 'create',\n                model: 'payment_method',\n              })}\n            >\n              <sc-icon name=\"plus\" slot=\"prefix\"></sc-icon>\n              {__('Add', 'surecart')}\n            </sc-button>\n          </sc-flex>\n        )}\n\n        {this.renderContent()}\n\n        <sc-dialog open={!!this.editPaymentMethod} label={__('Update Default Payment Method', 'surecart')} onScRequestClose={() => (this.editPaymentMethod = false)}>\n          <sc-alert type=\"danger\" open={!!this.error}>\n            {this.error}\n          </sc-alert>\n          <sc-flex flexDirection=\"column\" style={{ '--sc-flex-column-gap': 'var(--sc-spacing-small)' }}>\n            <sc-alert type=\"info\" open>\n              {__('A default payment method will be used as a fallback in case other payment methods get removed from a subscription.', 'surecart')}\n            </sc-alert>\n            <sc-switch checked={this.cascadeDefaultPaymentMethod} onScChange={e => (this.cascadeDefaultPaymentMethod = e.target.checked)}>\n              {__('Update All Subscriptions', 'surecart')}\n              <span slot=\"description\">{__('Update all existing subscriptions to use this payment method', 'surecart')}</span>\n            </sc-switch>\n          </sc-flex>\n          <div slot=\"footer\">\n            <sc-button type=\"text\" onClick={() => (this.editPaymentMethod = false)}>\n              {__('Cancel', 'surecart')}\n            </sc-button>\n            <sc-button type=\"primary\" onClick={() => this.setDefault()}>\n              {__('Make Default', 'surecart')}\n            </sc-button>\n          </div>\n          {this.busy && <sc-block-ui spinner></sc-block-ui>}\n        </sc-dialog>\n\n        <sc-dialog open={!!this.deletePaymentMethod} label={__('Delete Payment Method', 'surecart')} onScRequestClose={() => (this.deletePaymentMethod = false)}>\n          <sc-alert type=\"danger\" open={!!this.error}>\n            {this.error}\n          </sc-alert>\n          <sc-text>{__('Are you sure you want to remove this payment method?', 'surecart')}</sc-text>\n          <div slot=\"footer\">\n            <sc-button type=\"text\" onClick={() => (this.deletePaymentMethod = false)}>\n              {__('Cancel', 'surecart')}\n            </sc-button>\n            <sc-button type=\"primary\" onClick={() => this.deleteMethod()}>\n              {__('Delete', 'surecart')}\n            </sc-button>\n          </div>\n          {this.busy && <sc-block-ui spinner></sc-block-ui>}\n        </sc-dialog>\n\n        {this.busy && <sc-block-ui spinner></sc-block-ui>}\n      </sc-dashboard-module>\n    );\n  }\n}\n"]}