import{Fragment,h}from"@stencil/core";import apiFetch from"../../../../functions/fetch";import{addQueryArgs}from"@wordpress/url";import{baseUrl}from"../../../../services/session";import{getCheckout,setCheckout,clearCheckout}from"@store/checkouts/mutations";import{state as checkoutState}from"@store/checkout";import uiStore from"@store/ui";import{expand}from"../../../../services/session";import{createErrorNotice}from"@store/notices/mutations";import{updateFormState}from"@store/form/mutations";import{formBusy}from"@store/form/getters";export class ScCart{constructor(){this.open=null,this.formId=void 0,this.header=void 0,this.checkoutLink=void 0,this.cartTemplate=void 0,this.mode="live",this.checkoutUrl=void 0,this.alwaysShow=void 0,this.floatingIconEnabled=!0,this.uiState="idle"}handleOpenChange(){var e,t,o;uiStore.set("cart",{...uiStore.state.cart,open:this.open}),!0===this.open?this.fetchOrder():null===(o=null===(t=null===(e=null===document||void 0===document?void 0:document.querySelector("sc-cart-icon"))||void 0===e?void 0:e.shadowRoot)||void 0===t?void 0:t.querySelector(".cart"))||void 0===o||o.focus()}order(){return getCheckout(this.formId,this.mode)}setCheckout(e){setCheckout(e,this.formId)}pageHasForm(){return!!document.querySelector("sc-checkout")}getItemsCount(){var e,t;const o=null===(t=null===(e=checkoutState.checkout)||void 0===e?void 0:e.line_items)||void 0===t?void 0:t.data;let r=0;return(o||[]).forEach((e=>{r+=null==e?void 0:e.quantity})),r}handleSetState(e){this.uiState=e.detail}handleCloseCart(){this.open=!1}async fetchOrder(){var e,t;if(null===(e=checkoutState.checkout)||void 0===e?void 0:e.id)try{updateFormState("FETCH"),checkoutState.checkout=await apiFetch({method:"GET",path:addQueryArgs(`${baseUrl}${null===(t=checkoutState.checkout)||void 0===t?void 0:t.id}`,{expand:expand})}),updateFormState("RESOLVE")}catch(e){console.error(e),updateFormState("REJECT"),createErrorNotice(e),"checkout.not_found"===(null==e?void 0:e.code)&&clearCheckout(this.formId,this.mode)}}componentWillLoad(){this.open=!!uiStore.state.cart.open,uiStore.onChange("cart",(e=>{this.open=e.open}))}state(){var e,t,o,r,i,a,s,c,n,l,u;return{uiState:this.uiState,checkoutLink:this.checkoutLink,loading:"loading"===this.uiState,busy:"busy"===this.uiState,navigating:"navigating"===this.uiState,empty:!(null===(o=null===(t=null===(e=checkoutState.checkout)||void 0===e?void 0:e.line_items)||void 0===t?void 0:t.pagination)||void 0===o?void 0:o.count),order:checkoutState.checkout,lineItems:(null===(i=null===(r=checkoutState.checkout)||void 0===r?void 0:r.line_items)||void 0===i?void 0:i.data)||[],tax_status:null===(a=checkoutState.checkout)||void 0===a?void 0:a.tax_status,customerShippingAddress:"string"!=typeof(null===(s=checkoutState.checkout)||void 0===s?void 0:s.customer)?null===(n=null===(c=checkoutState.checkout)||void 0===c?void 0:c.customer)||void 0===n?void 0:n.shipping_address:{},shippingAddress:null===(l=checkoutState.checkout)||void 0===l?void 0:l.shipping_address,taxStatus:null===(u=checkoutState.checkout)||void 0===u?void 0:u.tax_status,formId:this.formId}}render(){return h("sc-cart-session-provider",null,h("sc-drawer",{open:this.open,onScAfterShow:()=>this.open=!0,onScAfterHide:()=>{this.open=!1}},!0===this.open&&h(Fragment,null,h("div",{class:"cart__header-suffix",slot:"header"},h("slot",{name:"cart-header"}),h("sc-error",{style:{"--sc-alert-border-radius":"0"},slot:"header"})),h("slot",null)),formBusy()&&h("sc-block-ui",{"z-index":9})))}static get is(){return"sc-cart"}static get encapsulation(){return"shadow"}static get originalStyleUrls(){return{$:["sc-cart.scss"]}}static get styleUrls(){return{$:["sc-cart.css"]}}static get properties(){return{formId:{type:"string",mutable:!1,complexType:{original:"string",resolved:"string",references:{}},required:!1,optional:!1,docs:{tags:[],text:"The form id to use for the cart."},attribute:"form-id",reflect:!0},header:{type:"string",mutable:!1,complexType:{original:"string",resolved:"string",references:{}},required:!1,optional:!1,docs:{tags:[],text:"The header for the popout."},attribute:"header",reflect:!1},checkoutLink:{type:"string",mutable:!1,complexType:{original:"string",resolved:"string",references:{}},required:!1,optional:!1,docs:{tags:[],text:""},attribute:"checkout-link",reflect:!1},cartTemplate:{type:"string",mutable:!1,complexType:{original:"string",resolved:"string",references:{}},required:!1,optional:!1,docs:{tags:[],text:"The template for the cart to inject when opened."},attribute:"cart-template",reflect:!1},mode:{type:"string",mutable:!1,complexType:{original:"'test' | 'live'",resolved:'"live" | "test"',references:{}},required:!1,optional:!1,docs:{tags:[],text:"Are we in test or live mode."},attribute:"mode",reflect:!1,defaultValue:"'live'"},checkoutUrl:{type:"string",mutable:!1,complexType:{original:"string",resolved:"string",references:{}},required:!1,optional:!1,docs:{tags:[],text:"The checkout url for the button."},attribute:"checkout-url",reflect:!1},alwaysShow:{type:"boolean",mutable:!1,complexType:{original:"boolean",resolved:"boolean",references:{}},required:!1,optional:!1,docs:{tags:[],text:"Should we force show the cart, even if there's a form on the page?"},attribute:"always-show",reflect:!1},floatingIconEnabled:{type:"boolean",mutable:!1,complexType:{original:"boolean",resolved:"boolean",references:{}},required:!1,optional:!1,docs:{tags:[],text:"Whether the floating button should be visible"},attribute:"floating-icon-enabled",reflect:!1,defaultValue:"true"}}}static get states(){return{open:{},uiState:{}}}static get elementRef(){return"el"}static get watchers(){return[{propName:"open",methodName:"handleOpenChange"}]}static get listeners(){return[{name:"scSetState",method:"handleSetState",target:void 0,capture:!1,passive:!1},{name:"scCloseCart",method:"handleCloseCart",target:void 0,capture:!1,passive:!1}]}}