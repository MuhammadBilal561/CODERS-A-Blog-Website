{"version":3,"file":"sc-subscription-payment-method.js","sourceRoot":"","sources":["../../../../../src/components/controllers/dashboard/sc-subscription-payment-method/sc-subscription-payment-method.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Prop, State, h, Element } from '@stencil/core';\nimport { __ } from '@wordpress/i18n';\nimport { addQueryArgs } from '@wordpress/url';\nimport apiFetch from '../../../../functions/fetch';\nimport { onFirstVisible } from '../../../../functions/lazy';\nimport { ManualPaymentMethod, PaymentMethod, Subscription } from '../../../../types';\n\n@Component({\n  tag: 'sc-subscription-payment-method',\n  styleUrl: 'sc-subscription-payment-method.css',\n  shadow: true,\n})\nexport class ScSubscriptionPaymentMethod {\n  /** The element */\n  @Element() el: HTMLScSubscriptionPaymentElement;\n\n  /** The heading */\n  @Prop() heading: string;\n\n  /** The subscription */\n  @Prop() subscription: Subscription;\n\n  /** The list of payment methods. */\n  @State() paymentMethods: PaymentMethod[];\n\n  @State() manualPaymentMethods: ManualPaymentMethod[];\n\n  /** The error. */\n  @State() error: string;\n\n  /** Loading state. */\n  @State() loading: boolean;\n  @State() busy: boolean;\n  @State() method: string;\n\n  renderLoading() {\n    return (\n      <sc-card noPadding>\n        <sc-stacked-list>\n          <sc-stacked-list-row style={{ '--columns': '4' }} mobile-size={500}>\n            {[...Array(4)].map(() => (\n              <sc-skeleton style={{ width: '100px', display: 'inline-block' }}></sc-skeleton>\n            ))}\n          </sc-stacked-list-row>\n        </sc-stacked-list>\n      </sc-card>\n    );\n  }\n\n  renderEmpty() {\n    return (\n      <slot name=\"empty\">\n        <sc-card>\n          <sc-empty icon=\"credit-card\">{__('You do not have any payment methods.', 'surecart')}</sc-empty>\n        </sc-card>\n      </slot>\n    );\n  }\n\n  currentPaymentMethodId() {\n    return this.subscription?.manual_payment\n      ? this.subscription?.manual_payment_method\n      : (this.subscription?.payment_method as PaymentMethod)?.id || this.subscription?.payment_method;\n  }\n\n  hasPaymentMethods() {\n    return this.paymentMethods?.length && this.manualPaymentMethods?.length;\n  }\n\n  hasMultiplePaymentMethods() {\n    return [...(this?.paymentMethods || []), ...(this?.manualPaymentMethods || [])]?.length > 1;\n  }\n\n  componentWillLoad() {\n    onFirstVisible(this.el, () => {\n      this.getPaymentMethods();\n    });\n  }\n\n  /** Get all subscriptions */\n  async getPaymentMethods() {\n    if (this.hasPaymentMethods()) return;\n    const customerId = this.subscription?.customer?.id || this.subscription?.customer;\n    if (!customerId) return;\n    try {\n      this.loading = true;\n      await this.fetchMethods(customerId);\n    } catch (e) {\n      this.error = e?.messsage || __('Something went wrong', 'surecart');\n      console.error(this.error);\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  async fetchMethods(customerId) {\n    this.paymentMethods = (await apiFetch({\n      path: addQueryArgs(`surecart/v1/payment_methods`, {\n        expand: ['card', 'customer', 'billing_agreement', 'paypal_account', 'payment_instrument', 'bank_account'],\n        customer_ids: [customerId],\n        reusable: true,\n        live_mode: this.subscription?.live_mode,\n      }),\n    })) as PaymentMethod[];\n\n    this.manualPaymentMethods = (await apiFetch({\n      path: addQueryArgs(`surecart/v1/manual_payment_methods`, {\n        customer_ids: [customerId],\n        reusable: true,\n        live_mode: this.subscription?.live_mode,\n      }),\n    })) as ManualPaymentMethod[];\n  }\n\n  async deleteMethod(method: PaymentMethod) {\n    const r = confirm(__('Are you sure you want to remove this payment method?', 'surecart'));\n    if (!r) return;\n    try {\n      this.busy = true;\n      (await apiFetch({\n        path: `surecart/v1/payment_methods/${method?.id}/detach`,\n        method: 'PATCH',\n      })) as PaymentMethod;\n      // remove from view.\n      this.paymentMethods = this.paymentMethods.filter(m => m.id !== method.id);\n    } catch (e) {\n      this.error = e?.messsage || __('Something went wrong', 'surecart');\n      console.error(this.error);\n    } finally {\n      this.busy = false;\n    }\n  }\n\n  async updateMethod(e) {\n    const { payment_method } = await e.target.getFormJson();\n\n    if (payment_method === this.currentPaymentMethodId()) {\n      return;\n    }\n    try {\n      const isManualPaymentMethod = (this.manualPaymentMethods || []).some(method => method.id === payment_method);\n      this.busy = true;\n      this.subscription = (await apiFetch({\n        path: `surecart/v1/subscriptions/${this.subscription?.id}`,\n        method: 'PATCH',\n        data: {\n          ...(!isManualPaymentMethod ? { payment_method, manual_payment: false } : { manual_payment_method: payment_method, manual_payment: true }),\n        },\n      })) as Subscription;\n      // redirect to edit page.\n      window.location.assign(\n        addQueryArgs(window.location.href, {\n          action: 'edit',\n          model: 'subscription',\n          id: this.subscription?.id,\n        }),\n      );\n      // remove from view.\n    } catch (e) {\n      this.error = e?.messsage || __('Something went wrong', 'surecart');\n      console.error(this.error);\n    } finally {\n      this.busy = false;\n    }\n  }\n\n  renderContent() {\n    if (this.loading) {\n      return this.renderLoading();\n    }\n\n    if (!this.paymentMethods?.length && !this.manualPaymentMethods?.length) {\n      return this.renderEmpty();\n    }\n\n    return (\n      <sc-form onScSubmit={e => this.updateMethod(e)}>\n        <sc-choices>{this.renderList()}</sc-choices>\n        {this.hasMultiplePaymentMethods() && (\n          <sc-button type=\"primary\" submit full size=\"large\" busy={this.busy} disabled={this.busy}>\n            {__('Update Payment Method', 'surecart')}\n          </sc-button>\n        )}\n      </sc-form>\n    );\n  }\n\n  renderList() {\n    const regularPaymentMethods = this.paymentMethods.map(paymentMethod => {\n      const { id, card, live_mode, paypal_account } = paymentMethod;\n\n      return (\n        <sc-choice checked={this.currentPaymentMethodId() === id} name=\"payment_method\" value={id} required>\n          <sc-flex justifyContent=\"flex-start\" align-items=\"center\">\n            <sc-payment-method paymentMethod={paymentMethod} />{' '}\n            {!live_mode && (\n              <sc-tag type=\"warning\" size=\"small\">\n                {__('Test', 'surecart')}\n              </sc-tag>\n            )}\n          </sc-flex>\n          <div slot=\"description\">\n            {!!card?.exp_month && (\n              <span>\n                {\n                  /** Translators: Credit Card Expires (Exp. 11/27) */\n                  __('Exp.', 'surecart')\n                }\n                {card?.exp_month}/{card?.exp_year}\n              </span>\n            )}\n            {!!paypal_account && paypal_account?.email}\n          </div>\n          {this.currentPaymentMethodId() === id && (\n            <sc-tag type=\"info\" slot=\"price\">\n              {__('Current Payment Method', 'surecart')}\n            </sc-tag>\n          )}\n        </sc-choice>\n      );\n    });\n\n    const manualPaymentMethods = this.manualPaymentMethods.map(paymentMethod => {\n      const { id } = paymentMethod;\n\n      return (\n        <sc-choice checked={this.currentPaymentMethodId() === id} name=\"payment_method\" value={id} required>\n          <sc-flex justifyContent=\"flex-start\" align-items=\"center\">\n            <sc-manual-payment-method paymentMethod={paymentMethod} showDescription />\n          </sc-flex>\n          {this.currentPaymentMethodId() === id && (\n            <sc-tag type=\"info\" slot=\"price\">\n              {__('Current Payment Method', 'surecart')}\n            </sc-tag>\n          )}\n        </sc-choice>\n      );\n    });\n    return [...regularPaymentMethods, ...manualPaymentMethods];\n  }\n\n  render() {\n    return (\n      <sc-dashboard-module heading={this.heading || __('Update Payment Method', 'surecart')} class=\"subscription\" error={this.error}>\n        <sc-button\n          slot=\"end\"\n          type=\"link\"\n          href={addQueryArgs(window.location.href, {\n            action: 'create',\n            model: 'payment_method',\n            ...(this.subscription?.live_mode === false ? { live_mode: false } : {}),\n            success_url: window.location.href,\n          })}\n        >\n          <sc-icon name=\"plus\" slot=\"prefix\"></sc-icon>\n          {__('Add New', 'surecart')}\n        </sc-button>\n\n        {this.renderContent()}\n\n        {this.busy && <sc-block-ui spinner></sc-block-ui>}\n      </sc-dashboard-module>\n    );\n  }\n}\n"]}