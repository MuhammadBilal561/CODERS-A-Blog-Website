{"version":3,"file":"sc-charges-list.js","sourceRoot":"","sources":["../../../../../src/components/controllers/dashboard/charges-list/sc-charges-list.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, h, Prop, State } from '@stencil/core';\nimport { sprintf, __ } from '@wordpress/i18n';\nimport { addQueryArgs } from '@wordpress/url';\nimport apiFetch from '../../../../functions/fetch';\nimport { Charge, Checkout, Order } from '../../../../types';\nimport { onFirstVisible } from '../../../../functions/lazy';\n\n@Component({\n  tag: 'sc-charges-list',\n  styleUrl: 'sc-charges-list.scss',\n  shadow: true,\n})\nexport class ScChargesList {\n  @Element() el: HTMLScChargesListElement;\n  /** Query to fetch charges */\n  @Prop({ mutable: true }) query: {\n    page: number;\n    per_page: number;\n  } = {\n    page: 1,\n    per_page: 10,\n  };\n\n  @Prop() heading: string;\n  @Prop() showPagination: boolean = true;\n  @Prop() allLink: string;\n  @State() charges: Array<Charge> = [];\n\n  /** Loading state */\n  @State() loading: boolean;\n  @State() loaded: boolean;\n\n  /** Error message */\n  @State() error: string;\n\n  @State() pagination: {\n    total: number;\n    total_pages: number;\n  } = {\n    total: 0,\n    total_pages: 0,\n  };\n\n  /** Only fetch if visible */\n  componentWillLoad() {\n    onFirstVisible(this.el, () => {\n      this.getItems();\n    });\n  }\n\n  /** Get items */\n  async getItems() {\n    try {\n      this.loading = true;\n      const response = (await apiFetch({\n        path: addQueryArgs(`surecart/v1/charges/`, {\n          expand: ['checkout', 'checkout.order'],\n          ...this.query,\n        }),\n        parse: false,\n      })) as Response;\n\n      this.pagination = {\n        total: parseInt(response.headers.get('X-WP-Total')),\n        total_pages: parseInt(response.headers.get('X-WP-TotalPages')),\n      };\n      this.charges = (await response.json()) as Charge[];\n    } catch (e) {\n      if (e?.message) {\n        this.error = e.message;\n      } else {\n        this.error = __('Something went wrong', 'surecart');\n      }\n      console.error(this.error);\n    } finally {\n      this.loading = false;\n      this.loaded = true;\n    }\n  }\n\n  renderRefundStatus(charge: Charge) {\n    if (charge?.fully_refunded) {\n      return <sc-tag type=\"danger\">{__('Refunded', 'surecart')}</sc-tag>;\n    }\n\n    if (charge?.refunded_amount) {\n      return <sc-tag type=\"warning\">{__('Partially Refunded', 'surecart')}</sc-tag>;\n    }\n\n    return <sc-tag type=\"success\">{__('Paid', 'surecart')}</sc-tag>;\n  }\n\n  renderEmpty() {\n    return (\n      <sc-stacked-list-row mobile-size={0}>\n        <slot name=\"empty\">{__('You have no saved payment methods.', 'surecart')}</slot>\n      </sc-stacked-list-row>\n    );\n  }\n\n  renderLoading() {\n    return (\n      <sc-stacked-list-row style={{ '--columns': '2' }} mobile-size={0}>\n        <div style={{ padding: '0.5em' }}>\n          <sc-skeleton style={{ width: '30%', marginBottom: '0.75em' }}></sc-skeleton>\n          <sc-skeleton style={{ width: '20%', marginBottom: '0.75em' }}></sc-skeleton>\n          <sc-skeleton style={{ width: '40%' }}></sc-skeleton>\n        </div>\n      </sc-stacked-list-row>\n    );\n  }\n\n  renderContent() {\n    if (this.loading && !this.loaded) {\n      return this.renderLoading();\n    }\n\n    if (this.charges?.length === 0) {\n      return this.renderEmpty();\n    }\n\n    return this.charges.map(charge => {\n      const { currency, amount, created_at } = charge;\n\n      return (\n        <sc-stacked-list-row\n          style={{ '--columns': '4' }}\n          mobile-size={600}\n          href={addQueryArgs(window.location.href, {\n            action: 'show',\n            model: 'order',\n            id: ((charge.checkout as Checkout).order as Order)?.id,\n          })}\n        >\n          <strong>\n            <sc-format-date date={created_at} type=\"timestamp\" month=\"short\" day=\"numeric\" year=\"numeric\"></sc-format-date>\n          </strong>\n\n          <sc-text style={{ '--color': 'var(--sc-color-gray-500)' }}>{sprintf(__('#%s', 'surecart'), ((charge.checkout as Checkout).order as Order).number)}</sc-text>\n\n          <div>{this.renderRefundStatus(charge)}</div>\n\n          <strong>\n            <sc-format-number type=\"currency\" value={amount} currency={currency}></sc-format-number>\n          </strong>\n        </sc-stacked-list-row>\n      );\n    });\n  }\n\n  nextPage() {\n    this.query.page = this.query.page + 1;\n    this.getItems();\n  }\n\n  prevPage() {\n    this.query.page = this.query.page - 1;\n    this.getItems();\n  }\n\n  render() {\n    return (\n      <sc-dashboard-module class=\"charges-list\" error={this.error}>\n        <span slot=\"heading\">\n          <slot name=\"heading\">{this.heading || __('Payment History', 'surecart')}</slot>\n        </span>\n\n        {!!this.allLink && (\n          <sc-button type=\"link\" href={this.allLink} slot=\"end\">\n            {__('View all', 'surecart')}\n            <sc-icon name=\"chevron-right\" slot=\"suffix\"></sc-icon>\n          </sc-button>\n        )}\n\n        <sc-card no-padding style={{ '--overflow': 'hidden' }}>\n          <sc-stacked-list>{this.renderContent()}</sc-stacked-list>\n        </sc-card>\n\n        {this.showPagination && (\n          <sc-pagination\n            page={this.query.page}\n            perPage={this.query.per_page}\n            total={this.pagination.total}\n            totalPages={this.pagination.total_pages}\n            totalShowing={this?.charges?.length}\n            onScNextPage={() => this.nextPage()}\n            onScPrevPage={() => this.prevPage()}\n          ></sc-pagination>\n        )}\n\n        {this.loading && this.loaded && <sc-block-ui spinner></sc-block-ui>}\n      </sc-dashboard-module>\n    );\n  }\n}\n"]}