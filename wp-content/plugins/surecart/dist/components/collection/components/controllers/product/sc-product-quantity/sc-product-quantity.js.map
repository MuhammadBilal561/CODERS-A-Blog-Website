{"version":3,"file":"sc-product-quantity.js","sourceRoot":"","sources":["../../../../../src/components/controllers/product/sc-product-quantity/sc-product-quantity.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AACzD,OAAO,EAAE,KAAK,EAAE,MAAM,gBAAgB,CAAC;AACvC,OAAO,EAAE,UAAU,EAAE,MAAM,wBAAwB,CAAC;AACpD,OAAO,EAAE,mBAAmB,EAAE,MAAM,gCAAgC,CAAC;AACrE,IAAI,EAAE,GAAG,CAAC,CAAC;AAOX,MAAM,OAAO,iBAAiB;;IACpB,YAAO,GAAW,eAAe,EAAE,EAAE,EAAE,CAAC;IACxC,WAAM,GAAG,yBAAyB,EAAE,EAAE,CAAC;IACvC,YAAO,GAAG,qBAAqB,EAAE,EAAE,CAAC;gBAGkB,QAAQ;;;qBASzC,IAAI;;oBAML,KAAK;;;;EAQjC,MAAM;;IACJ,MAAM,gBAAgB,GAAG,mBAAmB,CAAC,MAAA,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,0CAAE,OAAO,EAAE,MAAA,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,0CAAE,eAAe,CAAC,CAAC;IAErH,OAAO,CACL,EAAC,IAAI;MACH,uBACE,WAAW,EAAC,gCAAgC,EAC5C,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,SAAS,EAAE,IAAI,CAAC,SAAS,EACzB,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,MAAM,EAAE,IAAI,CAAC,MAAM,EACnB,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,IAAI,EAAE,IAAI,CAAC,IAAI;QAEf,0BACE,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,CAAA,MAAA,MAAA,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,0CAAE,aAAa,0CAAE,MAAM,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAA,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,0CAAE,QAAQ,EAAE,CAAC,CAAC,EACzG,QAAQ,EAAE,MAAA,MAAA,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,0CAAE,aAAa,0CAAE,MAAM,EACtD,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,KAC9D,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,gBAAgB,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GACrC,CACN,CACb,CACR,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Host, h, Prop } from '@stencil/core';\nimport { state } from '@store/product';\nimport { setProduct } from '@store/product/setters';\nimport { getMaxStockQuantity } from '../../../../functions/quantity';\nlet id = 0;\n\n@Component({\n  tag: 'sc-product-quantity',\n  styleUrl: 'sc-product-quantity.css',\n  shadow: true,\n})\nexport class ScProductQuantity {\n  private inputId: string = `sc-quantity-${++id}`;\n  private helpId = `sc-quantity-help-text-${id}`;\n  private labelId = `sc-quantity-label-${id}`;\n\n  /** Size of the control */\n  @Prop({ reflect: true }) size: 'small' | 'medium' | 'large' = 'medium';\n\n  /** Name for the input. Used for validation errors. */\n  @Prop() name: string;\n\n  /** Display server-side validation errors. */\n  @Prop() errors: any;\n\n  /** Show the label. */\n  @Prop() showLabel: boolean = true;\n\n  /** Input label. */\n  @Prop() label: string;\n\n  /** Whether the input is required. */\n  @Prop() required: boolean = false;\n\n  /** Help text */\n  @Prop() help: string;\n\n  /** The product id */\n  @Prop() productId: string;\n\n  render() {\n    const maxStockQuantity = getMaxStockQuantity(state[this.productId]?.product, state[this.productId]?.selectedVariant);\n\n    return (\n      <Host>\n        <sc-form-control\n          exportparts=\"label, help-text, form-control\"\n          size={this.size}\n          required={this.required}\n          label={this.label}\n          showLabel={this.showLabel}\n          help={this.help}\n          inputId={this.inputId}\n          helpId={this.helpId}\n          labelId={this.labelId}\n          name={this.name}\n        >\n          <sc-quantity-select\n            size={this.size}\n            quantity={Math.max(state[this.productId]?.selectedPrice?.ad_hoc ? 1 : state[this.productId]?.quantity, 1)}\n            disabled={state[this.productId]?.selectedPrice?.ad_hoc}\n            onScInput={e => setProduct(this.productId, { quantity: e.detail })}\n            {...(!!maxStockQuantity ? { max: maxStockQuantity } : {})}\n          ></sc-quantity-select>\n        </sc-form-control>\n      </Host>\n    );\n  }\n}\n"]}