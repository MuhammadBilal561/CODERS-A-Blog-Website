{"version":3,"file":"sc-payment.js","sourceRoot":"","sources":["../../../../../src/components/controllers/checkout-form/payment/sc-payment.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Fragment, h, Host, Prop } from '@stencil/core';\nimport { __ } from '@wordpress/i18n';\nimport { state as checkoutState } from '@store/checkout';\nimport { state as processorsState } from '@store/processors';\nimport { state as selectedProcessor } from '@store/selected-processor';\nimport { ManualPaymentMethods } from './ManualPaymentMethods';\nimport {\n  getAvailableProcessor,\n  hasMultipleProcessorChoices,\n  availableManualPaymentMethods,\n  availableProcessors,\n  hasOtherAvailableCreditCardProcessor,\n} from '@store/processors/getters';\nimport { addQueryArgs } from '@wordpress/url';\nimport { MockProcessor } from './MockProcessor';\n\n/**\n * @part base - The elements base wrapper.\n * @part form-control - The form control wrapper.\n * @part label - The input label.\n * @part help-text - Help text that describes how to use the input.\n * @part test-badge__base - Test badge base.\n * @part test-badge__content - Test badge content.\n */\n@Component({\n  tag: 'sc-payment',\n  styleUrl: 'sc-payment.scss',\n  shadow: true,\n})\nexport class ScPayment {\n  /** This element. */\n  @Element() el: HTMLScPaymentElement;\n\n  @Prop() stripePaymentElement: boolean;\n\n  /** Disabled processor types */\n  @Prop() disabledProcessorTypes: string[];\n\n  @Prop() secureNotice: string;\n\n  /** The input's label. */\n  @Prop() label: string;\n\n  /** Hide the test mode badge */\n  @Prop() hideTestModeBadge: boolean;\n\n  componentWillLoad() {\n    processorsState.disabled.processors = this.disabledProcessorTypes;\n  }\n\n  renderStripe(processor) {\n    const title = hasOtherAvailableCreditCardProcessor('stripe') ? __('Credit Card (Stripe)', 'surecart') : __('Credit Card', 'surecart');\n    return (\n      <sc-payment-method-choice key={processor?.id} processor-id=\"stripe\" card={this.stripePaymentElement}>\n        <span slot=\"summary\" class=\"sc-payment-toggle-summary\">\n          <sc-icon name=\"credit-card\" style={{ fontSize: '24px' }} aria-hidden=\"true\"></sc-icon>\n          <span>{title}</span>\n        </span>\n\n        <div class=\"sc-payment__stripe-card-element\">\n          <slot name=\"stripe\" />\n        </div>\n      </sc-payment-method-choice>\n    );\n  }\n\n  renderPayPal(processor) {\n    return (\n      <Fragment>\n        <sc-payment-method-choice key={processor?.id} processor-id=\"paypal\">\n          <span slot=\"summary\" class=\"sc-payment-toggle-summary\">\n            <sc-icon name=\"paypal\" style={{ width: '80px', fontSize: '24px' }} aria-hidden=\"true\"></sc-icon>\n            <sc-visually-hidden>{__('PayPal', 'surecart')}</sc-visually-hidden>\n          </span>\n\n          <sc-card>\n            <sc-payment-selected label={__('PayPal selected for check out.', 'surecart')}>\n              <sc-icon slot=\"icon\" name=\"paypal\" style={{ width: '80px' }} aria-hidden=\"true\"></sc-icon>\n              {__('Another step will appear after submitting your order to complete your purchase details.', 'surecart')}\n            </sc-payment-selected>\n          </sc-card>\n        </sc-payment-method-choice>\n        {!hasOtherAvailableCreditCardProcessor('paypal') && (\n          <sc-payment-method-choice key={processor?.id} processor-id=\"paypal\" method-id=\"card\">\n            <span slot=\"summary\" class=\"sc-payment-toggle-summary\">\n              <sc-icon name=\"credit-card\" style={{ fontSize: '24px' }} aria-hidden=\"true\"></sc-icon>\n              <span>{__('Credit Card', 'surecart')}</span>\n            </span>\n\n            <sc-card>\n              <sc-payment-selected label={__('Credit Card selected for check out.', 'surecart')}>\n                <sc-icon name=\"credit-card\" slot=\"icon\" style={{ fontSize: '24px' }} aria-hidden=\"true\"></sc-icon>\n                {__('Another step will appear after submitting your order to complete your purchase details.', 'surecart')}\n              </sc-payment-selected>\n            </sc-card>\n          </sc-payment-method-choice>\n        )}\n      </Fragment>\n    );\n  }\n\n  renderMock(processor) {\n    return <MockProcessor processor={processor} />;\n  }\n\n  renderPaystack(processor) {\n    const title = hasOtherAvailableCreditCardProcessor('paystack') ? __('Credit Card (Paystack)', 'surecart') : __('Credit Card', 'surecart');\n\n    // if system currency is not in the supported currency list, then stop.\n    if (!(processor?.supported_currencies ?? []).includes(window?.scData?.currency)) {\n      return;\n    }\n\n    return (\n      <sc-payment-method-choice key={processor?.id} processor-id=\"paystack\">\n        <span slot=\"summary\" class=\"sc-payment-toggle-summary\">\n          <sc-icon name=\"credit-card\" style={{ fontSize: '24px' }} aria-hidden=\"true\"></sc-icon>\n          <span>{title}</span>\n        </span>\n\n        <sc-card>\n          <sc-payment-selected label={__('Credit Card selected for check out.', 'surecart')}>\n            <sc-icon slot=\"icon\" name=\"credit-card\" aria-hidden=\"true\"></sc-icon>\n            {__('Another step will appear after submitting your order to complete your purchase details.', 'surecart')}\n          </sc-payment-selected>\n        </sc-card>\n        <sc-checkout-paystack-payment-provider />\n      </sc-payment-method-choice>\n    );\n  }\n\n  render() {\n    // payment is not required for this order.\n    if (checkoutState.checkout?.payment_method_required === false) {\n      return null;\n    }\n\n    const Tag = hasMultipleProcessorChoices() || selectedProcessor?.id === 'paypal' ? 'sc-toggles' : 'div';\n    const mollie = getAvailableProcessor('mollie');\n\n    return (\n      <Host>\n        <sc-form-control label={this.label} exportparts=\"label, help-text, form-control\">\n          <div class=\"sc-payment-label\" slot=\"label\">\n            <div>{this.label}</div>\n            {checkoutState.mode === 'test' && !this.hideTestModeBadge && (\n              <sc-tag type=\"warning\" size=\"small\" exportparts=\"base:test-badge__base, content:test-badge__content\">\n                {__('Test Mode', 'surecart')}\n              </sc-tag>\n            )}\n          </div>\n\n          {mollie?.id ? (\n            <sc-checkout-mollie-payment processor-id={mollie?.id}></sc-checkout-mollie-payment>\n          ) : (\n            <Tag collapsible={false} theme=\"container\">\n              {!availableProcessors()?.length && !availableManualPaymentMethods()?.length && (\n                <sc-alert type=\"info\" open>\n                  {window?.scData?.user_permissions?.manage_sc_shop_settings ? (\n                    <Fragment>\n                      {__('You do not have any processors enabled for this mode and cart. ', 'surecart')}\n                      <a\n                        href={addQueryArgs(`${window?.scData?.admin_url}admin.php`, {\n                          page: 'sc-settings',\n                          tab: 'processors',\n                        })}\n                        style={{ color: 'var(--sc-color-gray-700)' }}\n                      >\n                        {__('Please configure your processors', 'surecart')}\n                      </a>\n                      .\n                    </Fragment>\n                  ) : (\n                    __('Please contact us for payment.', 'surecart')\n                  )}\n                </sc-alert>\n              )}\n              {(availableProcessors() || []).map(processor => {\n                switch (processor?.processor_type) {\n                  case 'stripe':\n                    return this.renderStripe(processor);\n                  case 'paypal':\n                    return this.renderPayPal(processor);\n                  case 'paystack':\n                    return this.renderPaystack(processor);\n                  case 'mock':\n                    return this.renderMock(processor);\n                }\n              })}\n              <ManualPaymentMethods methods={availableManualPaymentMethods()} />\n            </Tag>\n          )}\n        </sc-form-control>\n      </Host>\n    );\n  }\n}\n"]}