{"version":3,"file":"sc-fulfillments.js","sourceRoot":"","sources":["../../../../../src/components/controllers/dashboard/fulfillments/sc-fulfillments.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Host, Prop, State, h } from '@stencil/core';\nimport { __, _n, sprintf } from '@wordpress/i18n';\nimport apiFetch from '../../../../functions/fetch';\nimport { addQueryArgs } from '@wordpress/url';\nimport { Fulfillment, Product } from 'src/types';\n\n@Component({\n  tag: 'sc-fulfillments',\n  styleUrl: 'sc-fulfillments.scss',\n  shadow: true,\n})\nexport class ScFulfillments {\n  @Element() el: HTMLScFulfillmentsElement;\n\n  @Prop() orderId: string;\n  @Prop() heading: string;\n\n  /** Holds fulfillments. */\n  @State() fulfillments: Fulfillment[];\n\n  /** Loading state */\n  @State() loading: boolean;\n  @State() busy: boolean;\n\n  /** Error message */\n  @State() error: string;\n\n  componentDidLoad() {\n    this.fetch();\n  }\n\n  async fetch() {\n    try {\n      this.busy = true;\n      this.fulfillments = (await apiFetch({\n        path: addQueryArgs(`surecart/v1/fulfillments`, {\n          expand: ['trackings', 'fulfillment_items', 'fulfillment_item.line_item', 'line_item.price', 'price.product'],\n          order_ids: [this.orderId],\n          shipment_status: ['shipped', 'delivered'],\n        }),\n      })) as Fulfillment[];\n    } catch (e) {\n      console.error(this.error);\n      this.error = e?.message || __('Something went wrong', 'surecart');\n    } finally {\n      this.busy = false;\n    }\n  }\n\n  renderLoading() {\n    return (\n      <sc-flex flexDirection=\"column\" style={{ gap: '1em' }}>\n        <sc-skeleton style={{ width: '20%', display: 'inline-block' }}></sc-skeleton>\n        <sc-skeleton style={{ width: '60%', display: 'inline-block' }}></sc-skeleton>\n        <sc-skeleton style={{ width: '40%', display: 'inline-block' }}></sc-skeleton>\n      </sc-flex>\n    );\n  }\n\n  render() {\n    if (this.loading || !this.fulfillments?.length) return <Host style={{ display: 'none' }}></Host>;\n\n    return (\n      <sc-spacing style={{ '--spacing': 'var(--sc-spacing-large)' }}>\n        <sc-dashboard-module error={this.error}>\n          <span slot=\"heading\">{this.heading || _n('Shipment', 'Shipments', this.fulfillments?.length, 'surecart')}</span>\n          {this.fulfillments.map(fulfillment => (\n            <sc-card noPadding>\n              <sc-stacked-list>\n                <sc-stacked-list-row>\n                  <div class=\"fulfillment__header\">\n                    <sc-fulfillment-shipping-status-badge status={fulfillment.shipment_status} />\n                    <div class=\"fulfillment__number\">#{fulfillment?.number}</div>\n                  </div>\n                </sc-stacked-list-row>\n\n                {!!fulfillment?.trackings?.data?.length && (\n                  <sc-stacked-list-row>\n                    <div class=\"trackings\">\n                      <sc-icon name=\"truck\" />\n                      <div class=\"trackings__details\">\n                        <div class=\"trackings__title\">{_n('Tracking number', 'Tracking numbers', fulfillment?.trackings?.data?.length, 'surecart')}</div>\n                        <div class=\"trackings__list\">\n                          {(fulfillment?.trackings?.data || []).map(({ number, url }) => (\n                            <a href={url} target=\"_blank\">\n                              {number}\n                            </a>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  </sc-stacked-list-row>\n                )}\n\n                {(fulfillment?.fulfillment_items?.data || []).map(({ id, line_item, quantity }) => {\n                  return (\n                    <sc-stacked-list-row key={id} style={{ '--columns': '2' }}>\n                      <div>\n                        <div class=\"line_item__info\">\n                          <div class=\"line_item__image\">\n                            {!!(line_item?.price?.product as Product)?.image_url && <img src={(line_item?.price?.product as Product)?.image_url} />}\n                          </div>\n                          <div class=\"line_item__text\">\n                            <div>{(line_item?.price?.product as Product)?.name}</div>\n                            <div>\n                              {!!(line_item?.price?.product as Product)?.weight && (\n                                <sc-format-number type=\"unit\" value={(line_item?.price?.product as Product)?.weight} unit={(line_item?.price?.product as Product)?.weight_unit} />\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <span>{sprintf(__('Qty: %d', 'surecart'), quantity || 0)}</span>\n                    </sc-stacked-list-row>\n                  );\n                })}\n              </sc-stacked-list>\n            </sc-card>\n          ))}\n        </sc-dashboard-module>\n      </sc-spacing>\n    );\n  }\n}\n"]}