{"version":3,"file":"fetch.js","sourceRoot":"","sources":["../../src/functions/fetch.ts"],"names":[],"mappings":"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","sourcesContent":["import apiFetch from '@wordpress/api-fetch';\nimport { __ } from '@wordpress/i18n';\nimport { addQueryArgs } from '@wordpress/url';\n\napiFetch.fetchAllMiddleware = null;\n\napiFetch.use(apiFetch.createRootURLMiddleware(window?.parent?.scData?.root_url || window?.scData?.root_url));\n\nif (window?.scData?.nonce) {\n  // @ts-ignore\n  apiFetch.nonceMiddleware = apiFetch.createNonceMiddleware(window?.scData?.nonce);\n  // @ts-ignore\n  apiFetch.use(apiFetch.nonceMiddleware);\n}\n\nif (window?.scData?.nonce_endpoint) {\n  // @ts-ignore\n  apiFetch.nonceEndpoint = window?.scData?.nonce_endpoint;\n}\n\n// Add a timestamp so it can bypass cache rest api\napiFetch.use((options, next) => {\n  options.path = addQueryArgs(options.path, { t: Date.now() });\n  return next(options);\n});\n\nexport default apiFetch;\n\n/**\n * Calls the `json` function on the Response, throwing an error if the response\n * doesn't have a json function or if parsing the json itself fails.\n *\n * @param {Response} response\n * @return {Promise<any>} Parsed response.\n */\nexport const parseJsonAndNormalizeError = response => {\n  const invalidJsonError = {\n    code: 'invalid_json',\n    message: __('The response is not a valid JSON response.', 'surecart'),\n  };\n\n  if (response?.code && response?.message) {\n    throw response;\n  }\n\n  if (!response || !response.json) {\n    throw invalidJsonError;\n  }\n\n  return response.json().catch(() => {\n    throw invalidJsonError;\n  });\n};\n\nexport const handleNonceError = async response => {\n  // need to parse the error response since we are bypassing the apiFetch middleware.\n  const error = await parseJsonAndNormalizeError(response);\n\n  if (error.code !== 'rest_cookie_invalid_nonce') {\n    // console.error(error);\n    throw error;\n  }\n\n  // If the nonce is invalid, refresh it and try again.\n  return (\n    window\n      // @ts-ignore\n      .fetch(apiFetch.nonceEndpoint)\n      .then(response => {\n        if (response.status >= 200 && response.status < 300) {\n          return response;\n        }\n        throw response;\n      })\n      .then(data => data.text())\n      .then(text => {\n        // @ts-ignore\n        apiFetch.nonceMiddleware.nonce = text;\n      })\n  );\n};\n"]}