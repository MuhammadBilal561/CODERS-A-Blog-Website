{"version":3,"file":"error.js","sourceRoot":"","sources":["../../src/functions/error.ts"],"names":[],"mappings":"AAEA;;GAEG;AACH,MAAM,CAAC,MAAM,0BAA0B,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,iBAAiB,KAAI,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAEhH;;GAEG;AACH,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,KAAoB,EAAE,EAAE;;EACvD,oCAAoC;EACpC,IAAI,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI,MAAK,kBAAkB,KAAI,MAAA,0BAA0B,CAAC,KAAK,CAAC,0CAAE,MAAM,CAAA,EAAE;IACnF,OAAO,EAAE,CAAC;GACX;EACD,OAAO,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,CAAC;AACxB,CAAC,CAAC","sourcesContent":["import { ScNoticeStore } from '../types';\n\n/**\n * Get any additional error messages.\n */\nexport const getAdditionalErrorMessages = error => (error?.additional_errors || []).map(error => error.message);\n\n/**\n * Get the top level error\n */\nexport const getTopLevelError = (error: ScNoticeStore) => {\n  // checkout invalid is not friendly.\n  if (error?.code === 'checkout.invalid' && getAdditionalErrorMessages(error)?.length) {\n    return '';\n  }\n  return error?.message;\n};\n"]}