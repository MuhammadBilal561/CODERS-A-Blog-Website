{"version":3,"file":"store.js","sourceRoot":"","sources":["../../../src/store/checkout/store.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAG7C,OAAO,EAAE,kBAAkB,EAAE,MAAM,cAAc,CAAC;AAClD,MAAM,EAAE,QAAQ,EAAE,GAAG,kBAAkB,EAAE,CAAC;AAmB1C,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,WAAW,CACnE;EACE,MAAM,EAAE,IAAI;EACZ,OAAO,EAAE,IAAI;EACb,IAAI,EAAE,MAAM;EACZ,KAAK,EAAE,EAAE;EACT,OAAO,EAAE,IAAI;EACb,QAAQ,EAAE,IAAI;EACd,YAAY,EAAE,KAAK;EACnB,wBAAwB,EAAE,IAAI;EAC9B,gBAAgB,EAAE,EAAE;EACpB,cAAc,EAAE,KAAK;EACrB,aAAa,EAAE,KAAK;EACpB,OAAO,EAAE,SAAS;EAClB,6BAA6B,EAAE,KAAK;EACpC,GAAG,QAAQ;CACZ,EACD,CAAC,QAAQ,EAAE,QAAQ,EAAE,EAAE;EACrB,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;AAC/D,CAAC,CACF,CAAC;AAEF,eAAe,KAAK,CAAC;AACrB,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC","sourcesContent":["import { createStore } from '@stencil/store';\n\nimport { Checkout, LineItemData, Product, TaxProtocol } from '../../types';\nimport { getSerializedState } from '@store/utils';\nconst { checkout } = getSerializedState();\n\ninterface Store {\n  formId: number | string;\n  groupId: string;\n  mode: 'live' | 'test';\n  locks: string[];\n  product: Product;\n  checkout: Checkout;\n  currencyCode: string;\n  abandonedCheckoutEnabled: boolean;\n  initialLineItems: LineItemData[];\n  taxProtocol: TaxProtocol;\n  isCheckoutPage: boolean;\n  validateStock: boolean;\n  persist: 'browser' | 'url' | false;\n  paymentMethodRequiresShipping: boolean;\n}\n\nconst { state, onChange, on, set, get, dispose, reset } = createStore<Store>(\n  {\n    formId: null,\n    groupId: null,\n    mode: 'live',\n    locks: [],\n    product: null,\n    checkout: null,\n    currencyCode: 'usd',\n    abandonedCheckoutEnabled: true,\n    initialLineItems: [],\n    isCheckoutPage: false,\n    validateStock: false,\n    persist: 'browser',\n    paymentMethodRequiresShipping: false,\n    ...checkout,\n  },\n  (newValue, oldValue) => {\n    return JSON.stringify(newValue) !== JSON.stringify(oldValue);\n  },\n);\n\nexport default state;\nexport { state, onChange, on, set, get, dispose, reset };\n"]}