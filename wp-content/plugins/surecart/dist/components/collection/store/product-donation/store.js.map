{"version":3,"file":"store.js","sourceRoot":"","sources":["../../../src/store/product-donation/store.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAC7C,OAAO,EAAE,kBAAkB,EAAE,MAAM,cAAc,CAAC;AAClD,OAAO,EAAE,sBAAsB,EAAE,MAAM,yBAAyB,CAAC;AAEjE,MAAM,EAAE,eAAe,EAAE,GAAG,kBAAkB,EAAE,CAAC;AAYjD,iGAAiG;AACjG,MAAM,mBAAmB,GAAG,MAAM,CAAC,IAAI,CAAC,eAAe,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,SAAS,EAAE,EAAE;;EACvF,MAAM,QAAQ,GAAG,sBAAsB,CAAC,SAAS,CAAC,CAAC;EACnD,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,EAAE,EAAE;IAChB,GAAG,CAAC,SAAS,CAAC,GAAG;MACf,GAAG,GAAG,CAAC,SAAS,CAAC;MACjB,GAAG,CAAC,CAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,aAAa,EAAC,CAAC,CAAC,EAAE,aAAa,EAAE,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;MAC7E,GAAG,CAAC,CAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,KAAK,EAAC,CAAC,CAAC,EAAE,aAAa,EAAE,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;MAC7D,aAAa,EAAE,CAAA,MAAA,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,OAAO,IAAI,EAAE,CAAC,0CAAE,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,aAAa;KAChH,CAAC;GACH;EACD,OAAO,GAAG,CAAC;AACb,CAAC,EAAE,eAAe,CAAC,CAAC;AAEpB,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,WAAW,CAAQ,EAAE,GAAG,mBAAmB,EAAE,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,EAAE;EACvH,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;AAC/D,CAAC,CAAC,CAAC;AAEH,eAAe,KAAK,CAAC;AACrB,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC","sourcesContent":["import { createStore } from '@stencil/store';\nimport { getSerializedState } from '@store/utils';\nimport { getLineItemByProductId } from '@store/checkout/getters';\nimport { Price, Product } from '../../types';\nconst { productDonation } = getSerializedState();\n\ninterface Store {\n  [key: string]: {\n    product: Product;\n    selectedPrice: Price;\n    ad_hoc_amount: number;\n    custom_amount: number;\n    amounts: number[];\n  };\n}\n\n// This gets initial checkout line items and updates the product donation store to match on load.\nconst productDonationData = Object.keys(productDonation || {}).reduce((acc, productId) => {\n  const lineItem = getLineItemByProductId(productId);\n  if (lineItem?.id) {\n    acc[productId] = {\n      ...acc[productId],\n      ...(lineItem?.ad_hoc_amount ? { ad_hoc_amount: lineItem.ad_hoc_amount } : {}),\n      ...(lineItem?.price ? { selectedPrice: lineItem.price } : {}),\n      custom_amount: (acc[productId].amounts || [])?.includes(lineItem.ad_hoc_amount) ? null : lineItem.ad_hoc_amount,\n    };\n  }\n  return acc;\n}, productDonation);\n\nconst { state, onChange, on, set, get, dispose } = createStore<Store>({ ...productDonationData }, (newValue, oldValue) => {\n  return JSON.stringify(newValue) !== JSON.stringify(oldValue);\n});\n\nexport default state;\nexport { state, onChange, on, set, get, dispose };\n"]}