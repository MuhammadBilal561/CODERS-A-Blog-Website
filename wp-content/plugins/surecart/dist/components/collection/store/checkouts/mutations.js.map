{"version":3,"file":"mutations.js","sourceRoot":"","sources":["../../../src/store/checkouts/mutations.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,MAAM,SAAS,CAAC;AAC5B,OAAO,EAAE,KAAK,IAAI,aAAa,EAAE,KAAK,IAAI,kBAAkB,EAAE,MAAM,iBAAiB,CAAC;AACtF,OAAO,EAAE,YAAY,EAAE,eAAe,EAAE,MAAM,gBAAgB,CAAC;AAE/D,wBAAwB;AACxB,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,MAAuB,EAAE,IAAqB,EAAE,EAAE,WAAC,OAAA,CAAA,MAAA,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,0CAAG,MAAM,CAAC,KAAI,EAAE,CAAA,EAAA,CAAC;AAEjH,wBAAwB;AACxB,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,IAAc,EAAE,MAAuB,EAAE,EAAE;EACrE,MAAM,IAAI,GAAG,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,SAAS,EAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;EAC/C,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;EAC1D,qCAAqC;EACrC,IAAI,aAAa,CAAC,MAAM,KAAK,MAAM,IAAI,aAAa,CAAC,IAAI,KAAK,IAAI,EAAE;IAClE,aAAa,CAAC,QAAQ,GAAG,IAAI,CAAC;GAC/B;EACD,qDAAqD;EACrD,IAAI,aAAa,CAAC,OAAO,KAAK,KAAK,KAAI,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,EAAE,CAAA,EAAE;IAC/C,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,EAAE,QAAQ,CAAC,KAAK,EAAE,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,WAAW,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,EAAE,EAAE,CAAC,CAAC,CAAC;GAChH;AACH,CAAC,CAAC;AAEF,sCAAsC;AACtC,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,MAAuB,EAAE,IAAqB,EAAE,EAAE;EAC9E,MAAM,EAAE,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,GAAG,SAAS,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;EAC7D,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,EAAE,QAAQ,CAAC,KAAK,EAAE,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,iBAAiB,EAAE,QAAQ,EAAE,YAAY,EAAE,qBAAqB,EAAE,aAAa,CAAC,CAAC,CAAC;EACxK,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;EAC3B,kBAAkB,EAAE,CAAC;AACvB,CAAC,CAAC","sourcesContent":["import { Checkout } from 'src/types';\nimport store from './store';\nimport { state as checkoutState, reset as resetCheckoutState } from '@store/checkout';\nimport { addQueryArgs, removeQueryArgs } from '@wordpress/url';\n\n/** Get the checkout. */\nexport const getCheckout = (formId: number | string, mode: 'live' | 'test') => store.state[mode]?.[formId] || {};\n\n/** Set the checkout. */\nexport const setCheckout = (data: Checkout, formId: number | string) => {\n  const mode = data?.live_mode ? 'live' : 'test';\n  store.set(mode, { ...store.state[mode], [formId]: data });\n  // update the current checkout state.\n  if (checkoutState.formId === formId && checkoutState.mode === mode) {\n    checkoutState.checkout = data;\n  }\n  // set in url only if we are not persisting the cart.\n  if (checkoutState.persist === 'url' && data?.id) {\n    window.history.replaceState({}, document.title, addQueryArgs(window.location.href, { checkout_id: data?.id }));\n  }\n};\n\n/** Clear the order from the store. */\nexport const clearCheckout = (formId: number | string, mode: 'live' | 'test') => {\n  const { [formId]: remove, ...checkouts } = store.state[mode];\n  window.history.replaceState({}, document.title, removeQueryArgs(window.location.href, 'redirect_status', 'coupon', 'line_items', 'confirm_checkout_id', 'checkout_id'));\n  store.set(mode, checkouts);\n  resetCheckoutState();\n};\n"]}