{"version":3,"file":"getters.js","sourceRoot":"","sources":["../../../src/store/product/getters.ts"],"names":[],"mappings":"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","sourcesContent":["import { Price, ProductState } from 'src/types';\n\n/**\n * Internal dependencies.\n */\nimport state from './store';\nimport { getSerializedState, isProductVariantOptionMissing, isProductVariantOptionSoldOut } from '@store/utils';\nimport { getVariantFromValues } from '../../functions/util';\n\n/**\n * Available product prices\n *\n * @param {string} productId - Product ID\n *\n * @returns {Price[]} - Returns an array of prices that are not archived\n */\nexport const availablePrices = (productId: string): Price[] => (state[productId]?.prices || []).filter(price => !price?.archived).sort((a, b) => a?.position - b?.position); // sort by position\n\n/**\n * Get Product\n */\nexport const getProduct = (productId?: string): ProductState => state[productId] ?? null;\n\n/**\n * Check if product label stock is enabled and not out of stock purchases are allowed.\n *\n * @returns {boolean} - Returns stock needs to be checked or not\n */\nexport const isStockNeedsToBeChecked = (productId: string) => !!(state?.[productId]?.product?.stock_enabled && !state?.[productId]?.product?.allow_out_of_stock_purchases);\n\n/**\n * Check if this option is out of stock base on the selected variant.\n */\nexport const isOptionSoldOut = (productId: string, optionNumber: number, option: string) =>\n  isProductVariantOptionSoldOut(optionNumber, option, state[productId].variantValues, state[productId].product);\n\n/**\n * Check if this option is out of stock base on the selected variant.\n */\nexport const isOptionMissing = (productId: string, optionNumber: number, option: string) =>\n  isProductVariantOptionMissing(optionNumber, option, state[productId].variantValues, state[productId].product);\n\n/**\n * Is product out of stock.\n *\n * @returns {boolean} - Returns true if product is out of stock\n */\nexport const isProductOutOfStock = (productId: string) => {\n  // If stock doesn't need to be checked, product is not out of stock.\n  if (!isStockNeedsToBeChecked(productId)) {\n    return false;\n  }\n\n  // If no variant is selected, check against product stock.\n  if (!state?.[productId]?.selectedVariant?.id) return state[productId].product?.available_stock <= 0;\n\n  // Check against selected variant's stock.\n  return state[productId].selectedVariant?.available_stock <= 0;\n};\n\n/**\n * Is the selected variant missing.\n */\nexport const isSelectedVariantMissing = (productId: string) =>\n  !!state?.[productId]?.variants?.length && getVariantFromValues({ variants: state[productId].variants, values: state[productId].variantValues })?.id === undefined;\n\n/**\n * Get product default state\n *\n * @returns {ProductState} - Returns the product state\n */\nexport const getDefaultState = (): { [key: string]: ProductState } => {\n  const { product: serializedProductState = {} } = getSerializedState();\n\n  return (\n    Object.values(serializedProductState as { [key: string]: ProductState }).reduce((acc, productState) => {\n      const { selectedPrice, product, selectedVariant } = productState || {};\n      const current: ProductState = {\n        ...productState,\n        quantity: 1,\n        total: null,\n        dialog: null,\n        busy: false,\n        error: null,\n        adHocAmount: selectedPrice?.amount || null,\n        disabled: selectedPrice?.archived || product?.archived,\n        line_item: {\n          price_id: selectedPrice?.id,\n          quantity: 1,\n          ...(selectedPrice?.ad_hoc ? { ad_hoc_amount: selectedPrice?.amount } : {}),\n          ...(selectedVariant?.id ? { variant_id: selectedVariant?.id } : {}),\n        },\n        variantValues: {\n          ...(selectedVariant?.option_1 ? { option_1: selectedVariant?.option_1 } : {}),\n          ...(selectedVariant?.option_2 ? { option_2: selectedVariant?.option_2 } : {}),\n          ...(selectedVariant?.option_3 ? { option_3: selectedVariant?.option_3 } : {}),\n        },\n      };\n\n      acc[product.id] = current;\n\n      return acc;\n    }, {}) || {}\n  );\n};\n\nexport const availableSubscriptionPrices = (productId: string) =>\n  (availablePrices(productId) || []).filter(price => price?.recurring_interval).sort((a, b) => a?.position - b?.position);\n\nexport const availableNonSubscriptionPrices = (productId: string) =>\n  (availablePrices(productId) || []).filter(price => !price?.recurring_interval).sort((a, b) => a?.position - b?.position);\n"]}