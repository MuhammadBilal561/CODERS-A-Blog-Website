{"file":"sc-line-item-total.entry.cjs.js","mappings":";;;;;;;;;;;;;;;;;AAAA,MAAM,kBAAkB,GAAG,8WAA8W;;;;;;;;;;;;;;;;;;;;;;;8GC2CjV,UAAE;;;;;;uHAgBC,UAAE;;;;;;;;;;;;;;;6jBAiDR,UAAE,wXAWN,UAAE,6HAIE,UAAE;;iUAiBA,UAAE;;;;;;;","names":[],"sources":["./src/components/controllers/checkout-form/line-item-total/sc-line-item-total.scss?tag=sc-line-item-total&encapsulation=shadow","./src/components/controllers/checkout-form/line-item-total/sc-line-item-total.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n\nsc-line-item {\n  text-align: left;\n}\n\n.line-item-total__group sc-line-item {\n  margin: 4px 0px !important;\n}\n\n.scratch-price {\n  text-decoration: line-through;\n  color: var(--sc-color-gray-500);\n  font-size: var(--sc-font-size-small);\n  margin-right: var(--sc-spacing-xx-small);\n}\n\nsc-line-item::part(base) {\n  grid-template-columns: max-content auto auto;\n}\n\n.total-price {\n  white-space: nowrap;\n}\n","/**\n * External dependencies.\n */\nimport { Component, Fragment, h, Prop } from '@stencil/core';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies.\n */\nimport { formBusy } from '@store/form/getters';\nimport { state as checkoutState } from '@store/checkout';\nimport { Checkout } from '../../../../types';\n\n@Component({\n  tag: 'sc-line-item-total',\n  styleUrl: 'sc-line-item-total.scss',\n  shadow: true,\n})\nexport class ScLineItemTotal {\n  @Prop() total: 'total' | 'subtotal' = 'total';\n  @Prop() size: 'large' | 'medium';\n  @Prop() checkout: Checkout;\n\n  order_key = {\n    total: 'total_amount',\n    subtotal: 'subtotal_amount',\n    amount_due: 'amount_due',\n  };\n\n  hasInstallmentPlan(checkout: Checkout) {\n    return checkout?.full_amount !== checkout?.subtotal_amount;\n  }\n\n  hasSubscription(checkout: Checkout) {\n    return (checkout?.line_items?.data || []).some(\n      lineItem => lineItem?.price?.recurring_interval === 'month' && !!lineItem?.price?.recurring_interval && !lineItem?.price?.recurring_period_count,\n    );\n  }\n\n  renderLineItemTitle(checkout: Checkout) {\n    if (this.total === 'total' && this.hasInstallmentPlan(checkout)) {\n      return (\n        <span slot=\"title\">\n          <slot name=\"first-payment-total-description\">{__('Subtotal', 'surecart')}</slot>\n        </span>\n      );\n    }\n\n    return (\n      <span slot=\"title\">\n        <slot name=\"title\" />\n      </span>\n    );\n  }\n\n  renderLineItemDescription(checkout: Checkout) {\n    if (this.total === 'subtotal' && this.hasInstallmentPlan(checkout)) {\n      return (\n        <span slot=\"description\">\n          <slot name=\"first-payment-subtotal-description\">{__('Initial Payment', 'surecart')}</slot>\n        </span>\n      );\n    }\n\n    return (\n      <span slot=\"description\">\n        <slot name=\"description\" />\n      </span>\n    );\n  }\n\n  render() {\n    const checkout = this.checkout || checkoutState?.checkout;\n    // loading state\n    if (formBusy() && !checkout?.[this?.order_key?.[this?.total]]) {\n      return (\n        <sc-line-item>\n          <sc-skeleton slot=\"title\" style={{ width: '120px', display: 'inline-block' }}></sc-skeleton>\n          <sc-skeleton slot=\"price\" style={{ 'width': '70px', 'display': 'inline-block', 'height': this.size === 'large' ? '40px' : '', '--border-radius': '6px' }}></sc-skeleton>\n        </sc-line-item>\n      );\n    }\n\n    if (!checkout?.currency) return;\n\n    // if the total amount is different than the amount due.\n    if (this.total === 'total' && checkout?.total_amount !== checkout?.amount_due) {\n      return (\n        <div class=\"line-item-total__group\">\n          <sc-line-item>\n            <span slot=\"description\">\n              {this.hasInstallmentPlan(checkout) ? (\n                this.renderLineItemTitle(checkout)\n              ) : (\n                <Fragment>\n                  <slot name=\"title\" />\n                  <slot name=\"description\" />\n                </Fragment>\n              )}\n            </span>\n            <span slot=\"price\">\n              <sc-total order={checkout} total={this.total}></sc-total>\n            </span>\n          </sc-line-item>\n\n          {!!checkout.trial_amount && (\n            <sc-line-item>\n              <span slot=\"description\">\n                <slot name=\"free-trial-description\">{__('Trial', 'surecart')}</slot>\n              </span>\n              <span slot=\"price\">\n                <sc-format-number type=\"currency\" value={checkout.trial_amount} currency={checkout.currency} />\n              </span>\n            </sc-line-item>\n          )}\n\n          <sc-line-item style={{ '--price-size': 'var(--sc-font-size-x-large)' }}>\n            {this.hasSubscription(checkout) ? (\n              <span slot=\"title\">\n                <slot name=\"subscription-title\">{__('Total Due Today', 'surecart')}</slot>\n              </span>\n            ) : (\n              <span slot=\"title\">\n                <slot name=\"due-amount-description\">{__('Amount Due', 'surecart')}</slot>\n              </span>\n            )}\n\n            <span slot=\"price\">\n              <sc-format-number type=\"currency\" currency={checkout?.currency} value={checkout?.amount_due}></sc-format-number>\n            </span>\n          </sc-line-item>\n        </div>\n      );\n    }\n\n    return (\n      <Fragment>\n        {this.total === 'subtotal' && this.hasInstallmentPlan(checkout) && (\n          <sc-line-item style={this.size === 'large' ? { '--price-size': 'var(--sc-font-size-x-large)' } : {}}>\n            <span slot=\"description\">\n              <slot name=\"total-payments-description\">{__('Total Installment Payments', 'surecart')}</slot>\n            </span>\n            <span slot=\"price\">\n              <sc-format-number type=\"currency\" value={checkout?.full_amount} currency={checkout?.currency || 'usd'} />\n            </span>\n          </sc-line-item>\n        )}\n\n        <sc-line-item style={this.size === 'large' ? { '--price-size': 'var(--sc-font-size-x-large)' } : {}}>\n          {this.renderLineItemTitle(checkout)}\n          {this.renderLineItemDescription(checkout)}\n          <span slot=\"price\">\n            {!!checkout?.total_savings_amount && this.total === 'total' && (\n              <sc-format-number class=\"scratch-price\" type=\"currency\" value={-checkout?.total_savings_amount + checkout?.total_amount} currency={checkout?.currency || 'usd'} />\n            )}\n            <sc-total class=\"total-price\" order={checkout} total={this.total}></sc-total>\n          </span>\n        </sc-line-item>\n      </Fragment>\n    );\n  }\n}\n"],"version":3}