{"file":"getters-8b2c88a6.js","mappings":";;;;;AAKA;;;MAGa,eAAe,GAAG,MAAMA,qBAAW,CAACC,eAAK,CAAC,MAAM,EAAEA,eAAK,CAAC,IAAI,EAAE;AAE3E;;;;;MAKa,gBAAgB,GAAG,CAAC,QAAQ,GAAG,EAAE,eAAc,QAAC,QAAQ,GAAGA,eAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,KAAK,QAAQ,CAAC,GAAG,CAAC,EAAC,MAAAA,eAAK,CAAC,KAAK,0CAAE,MAAM,CAAA,EAAC,GAAC;AAE7I;;;MAGa,sBAAsB,GAAG,CAAC,SAAiB,mBAAK,OAAA,CAAC,CAAA,MAAA,MAAAA,eAAK,CAAC,QAAQ,0CAAE,UAAU,0CAAE,IAAI,KAAI,EAAE,EAAE,IAAI,CAAC,SAAS,kBAAI,OAAA,CAAA,MAAC,MAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,KAAK,0CAAE,OAAmB,0CAAE,EAAE,MAAK,SAAS,CAAA,EAAA,CAAC,CAAA,GAAC;AAElL;;;MAGa,2BAA2B,GAAG,oBAAM,OAAA,CAAA,MAAAA,eAAK,CAAC,QAAQ,0CAAE,gBAAgB,MAAI,MAAAA,eAAK,aAALA,eAAK,uBAALA,eAAK,CAAE,QAAQ,0CAAE,yBAAyB,CAAA,KAAIA,eAAK,aAALA,eAAK,uBAALA,eAAK,CAAE,6BAA6B,CAAA,CAAA,GAAC;AAExK;;;MAGa,uBAAuB,GAAG;;EACrC,OAAA,CAAA,MAAAA,eAAK,CAAC,QAAQ,0CAAE,UAAU,MAAK,iBAAiB;KAChD,MAAAA,eAAK,CAAC,QAAQ,0CAAE,gBAAgB,CAAA;KAChC,MAAAA,eAAK,CAAC,QAAQ,0CAAE,yBAAyB,CAAA;KACzC,MAAAA,eAAK,aAALA,eAAK,uBAALA,eAAK,CAAE,QAAQ,0CAAE,WAAW,CAAA;KAC5BA,eAAK,aAALA,eAAK,uBAALA,eAAK,CAAE,6BAA6B,CAAA,CAAA;EAAC;AAEvC;;;MAGa,kBAAkB,GAAG,CAAC,IAAI,GAAG,UAAU;;EAClD,MAAM,UAAU,GAAGC,yBAAiB,CAAC,MAAAD,eAAK,CAAC,QAAQ,0CAAG,GAAG,IAAI,UAAU,CAAY,CAAC,CAAC;EACrF,IAAI,CAAC,UAAU;IAAE,OAAO;EAExB,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,UAAU,EAAE,GAAG,CAAC,MAAAA,eAAK,CAAC,QAAQ,0CAAE,gBAA4B,KAAI,EAAE,CAAC;EAE5G,OAAO;IACL,KAAK;IACL,KAAK;IACL,GAAG,UAAU;GACd,CAAC;AACJ;;;;;;;;;","names":["getCheckout","state","isAddressComplete"],"sources":["./src/store/checkout/getters.ts"],"sourcesContent":["import { Product, Address } from 'src/types';\nimport { getCheckout } from '../checkouts/mutations';\nimport state from './store';\nimport { isAddressComplete } from 'src/functions/address';\n\n/**\n * Gets the current checkout for the page.\n */\nexport const currentCheckout = () => getCheckout(state.formId, state.mode);\n\n/**\n * Is the checkout currently locked.\n * Pass an optional lock name to find if a\n * specific lock name is locking checkout.\n */\nexport const checkoutIsLocked = (lockName = ''): boolean => (lockName ? state.locks.some(name => name === lockName) : !!state.locks?.length);\n\n/**\n * Get a line item by product id.\n */\nexport const getLineItemByProductId = (productId: string) => (state.checkout?.line_items?.data || []).find(line_item => (line_item?.price?.product as Product)?.id === productId);\n\n/**\n * Is the shipping address required?\n */\nexport const fullShippingAddressRequired = () => state.checkout?.shipping_enabled || state?.checkout?.shipping_address_required || state?.paymentMethodRequiresShipping;\n\n/**\n * Is the address required?\n */\nexport const shippingAddressRequired = () =>\n  state.checkout?.tax_status === 'address_invalid' ||\n  state.checkout?.shipping_enabled ||\n  state.checkout?.shipping_address_required ||\n  state?.checkout?.tax_enabled ||\n  state?.paymentMethodRequiresShipping;\n\n/**\n * Get Billing address\n */\nexport const getCompleteAddress = (type = 'shipping') => {\n  const isComplete = isAddressComplete(state.checkout?.[`${type}_address`] as Address);\n  if (!isComplete) return;\n\n  const { line_1: line1, line_2: line2, ...otherProps } = (state.checkout?.shipping_address as Address) || {};\n\n  return {\n    line1,\n    line2,\n    ...otherProps,\n  };\n};\n"],"version":3}