{"file":"sc-cancel-dialog.sc-subscription-next-payment.entry.cjs.js","mappings":";;;;;;;;;;;AAAA,MAAM,iBAAiB,GAAG,yHAAyH;;MCWtI,cAAc;;;;;;;;;;gBAM+C,QAAQ;;;EAKhF,KAAK;IACH,IAAI,CAAC,KAAK,EAAE,CAAC;IACb,IAAI,CAAC,YAAY,EAAE,CAAC;IACpB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;GAC1C;EAED,KAAK;;IACH,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACnB,IAAI,CAAC,IAAI,GAAG,CAAA,MAAA,IAAI,CAAC,QAAQ,0CAAE,oBAAoB,IAAG,QAAQ,GAAG,QAAQ,CAAC;GACvE;EAED,MAAM,YAAY;;IAChB,IAAI,EAAC,MAAA,IAAI,CAAC,QAAQ,0CAAE,oBAAoB,CAAA;MAAE,OAAO;IACjD,MAAMA,cAAQ,CAAC;MACb,MAAM,EAAE,OAAO;MACf,IAAI,EAAE,6BAA6B,MAAA,IAAI,CAAC,YAAY,0CAAE,EAAE,WAAW;KACpE,CAAC,CAAC;GACJ;EAED,iBAAiB;IACf,IAAI,CAAC,KAAK,EAAE,CAAC;GACd;EAED,MAAM;IACJ,QACEC,uBACE,KAAK,EAAE;QACL,SAAS,EAAE,IAAI,CAAC,IAAI,KAAK,QAAQ,GAAG,OAAO,GAAG,OAAO;QACrD,gBAAgB,EAAE,6BAA6B;OAChD,EACD,QAAQ,QACR,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,gBAAgB,EAAE,MAAM,IAAI,CAAC,KAAK,EAAE,IAEpCA,iBACE,KAAK,EAAE;QACL,MAAM,EAAE,IAAI;OACb,IAEDA,uBAAW,KAAK,EAAC,eAAe,EAAC,IAAI,EAAC,MAAM,EAAC,MAAM,QAAC,OAAO,EAAE,MAAM,IAAI,CAAC,KAAK,EAAE,IAC7EA,qBAAS,IAAI,EAAC,GAAG,GAAG,CACV,EAEX,IAAI,CAAC,IAAI,KAAK,QAAQ,KACrBA,oCACE,YAAY,EAAE,IAAI,CAAC,YAAY,EAC/B,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,MAAM,EAAE,IAAI,CAAC,MAAM,EACnB,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,WAAW,EAAE,MAAM,IAAI,CAAC,KAAK,EAAE,EAC/B,aAAa,EAAE;QACb,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;OAC1C,GACD,CACH,EAEA,IAAI,CAAC,IAAI,KAAK,QAAQ,KACrBA,8BACE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,WAAW,EAAE,MAAM,IAAI,CAAC,KAAK,EAAE,EAC/B,gBAAgB,EAAE,CAAC;QACjB,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC;QACrC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,cAAc,IAAG,UAAU,GAAG,QAAQ,CAAC;OAC5D,GACD,CACH,EAEA,IAAI,CAAC,IAAI,KAAK,UAAU,KACvBA,gCACE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,YAAY,EAAE,IAAI,CAAC,YAAY,EAC/B,MAAM,EAAE,IAAI,CAAC,MAAM,EACnB,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,UAAU,EAAE,OAAO,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,EACxC,aAAa,EAAE;QACb,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;OAC1C,GACD,CACH,CACG,CACI,EACZ;GACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gRCRc,UAAE;;;;iFA2BqB,UAAE,2WAMA,UAAE,8XAOF,UAAE,yXAOF,UAAE,2ZAOF,UAAE,idAOF,UAAE,yyBAeJ,UAAE;;;;;uCAmBvB,UAAE,gKAMa,UAAE;;;;;;;;;;","names":["apiFetch","h"],"sources":["./src/components/controllers/dashboard/sc-cancel-dialog/sc-cancel-dialog.scss?tag=sc-cancel-dialog&encapsulation=shadow","./src/components/controllers/dashboard/sc-cancel-dialog/sc-cancel-dialog.tsx","./src/components/controllers/dashboard/subscription-details/sc-subscription-next-payment.tsx"],"sourcesContent":[":host {\n  display: block;\n  font-size: var(--sc-font-size-medium);\n}\n\n\n.close__button {\n  position: absolute;\n  top: 0;\n  right: 0;\n  font-size: 22px;\n}\n","import { Component, Event, EventEmitter, h, Prop, State } from '@stencil/core';\nimport { __ } from '@wordpress/i18n';\nimport apiFetch from '../../../../functions/fetch';\n\nimport { CancellationReason, Subscription, SubscriptionProtocol } from '../../../../types';\n\n@Component({\n  tag: 'sc-cancel-dialog',\n  styleUrl: 'sc-cancel-dialog.scss',\n  shadow: true,\n})\nexport class ScCancelDialog {\n  @Prop() open: boolean;\n  @Prop() protocol: SubscriptionProtocol;\n  @Prop() subscription: Subscription;\n  @State() reasons: CancellationReason[];\n  @State() reason: CancellationReason;\n  @State() step: 'cancel' | 'survey' | 'discount' | 'discount-complete' = 'cancel';\n  @State() comment: string;\n  @Event({ cancelable: true }) scRequestClose: EventEmitter<'close-button' | 'keyboard' | 'overlay'>;\n  @Event() scRefresh: EventEmitter<void>;\n\n  close() {\n    this.reset();\n    this.trackAttempt();\n    this.scRequestClose.emit('close-button');\n  }\n\n  reset() {\n    this.reason = null;\n    this.step = this.protocol?.preservation_enabled ? 'survey' : 'cancel';\n  }\n\n  async trackAttempt() {\n    if (!this.protocol?.preservation_enabled) return;\n    await apiFetch({\n      method: 'PATCH',\n      path: `surecart/v1/subscriptions/${this.subscription?.id}/preserve`,\n    });\n  }\n\n  componentWillLoad() {\n    this.reset();\n  }\n\n  render() {\n    return (\n      <sc-dialog\n        style={{\n          '--width': this.step === 'survey' ? '675px' : '500px',\n          '--body-spacing': 'var(--sc-spacing-xxx-large)',\n        }}\n        noHeader\n        open={this.open}\n        onScRequestClose={() => this.close()}\n      >\n        <div\n          class={{\n            cancel: true,\n          }}\n        >\n          <sc-button class=\"close__button\" type=\"text\" circle onClick={() => this.close()}>\n            <sc-icon name=\"x\" />\n          </sc-button>\n\n          {this.step === 'cancel' && (\n            <sc-subscription-cancel\n              subscription={this.subscription}\n              protocol={this.protocol}\n              reason={this.reason}\n              comment={this.comment}\n              onScAbandon={() => this.close()}\n              onScCancelled={() => {\n                this.scRefresh.emit();\n                this.reset();\n                this.scRequestClose.emit('close-button');\n              }}\n            />\n          )}\n\n          {this.step === 'survey' && (\n            <sc-cancel-survey\n              protocol={this.protocol}\n              onScAbandon={() => this.close()}\n              onScSubmitReason={e => {\n                const { comment, reason } = e.detail;\n                this.reason = reason;\n                this.comment = comment;\n                this.step = reason?.coupon_enabled ? 'discount' : 'cancel';\n              }}\n            />\n          )}\n\n          {this.step === 'discount' && (\n            <sc-cancel-discount\n              protocol={this.protocol}\n              subscription={this.subscription}\n              reason={this.reason}\n              comment={this.comment}\n              onScCancel={() => (this.step = 'cancel')}\n              onScPreserved={() => {\n                this.scRefresh.emit();\n                this.reset();\n                this.scRequestClose.emit('close-button');\n              }}\n            />\n          )}\n        </div>\n      </sc-dialog>\n    );\n  }\n}\n","import { Component, h, Prop, State, Host, Watch } from '@stencil/core';\nimport { __ } from '@wordpress/i18n';\nimport { addQueryArgs } from '@wordpress/url';\nimport apiFetch from '../../../../functions/fetch';\nimport { intervalString, translateRemainingPayments } from '../../../../functions/price';\nimport { formatTaxDisplay } from '../../../../functions/tax';\nimport { Checkout, Period, Product, ResponseError, Subscription, ManualPaymentMethod } from '../../../../types';\n\n@Component({\n  tag: 'sc-subscription-next-payment',\n  shadow: true,\n})\nexport class ScSubscriptionNextPayment {\n  @Prop() subscription: Subscription;\n  /** Update the payment method url */\n  @Prop() updatePaymentMethodUrl: string;\n\n  @State() period: Period;\n  @State() loading: boolean = true;\n  @State() error: ResponseError;\n  @State() details: boolean;\n\n  componentWillLoad() {\n    this.fetch();\n  }\n\n  @Watch('subscription')\n  handleSubscriptionChange() {\n    this.fetch();\n  }\n\n  async fetch() {\n    if (this.subscription?.cancel_at_period_end && this.subscription.current_period_end_at) {\n      this.loading = false;\n      return;\n    }\n    if (this.subscription?.status === 'canceled') {\n      this.loading = false;\n      return;\n    }\n    try {\n      this.loading = true;\n      this.period = (await apiFetch({\n        method: 'PATCH',\n        path: addQueryArgs(`surecart/v1/subscriptions/${this.subscription?.id}/upcoming_period`, {\n          skip_product_group_validation: true,\n          expand: [\n            'period.checkout',\n            'checkout.line_items',\n            'checkout.payment_method',\n            'checkout.manual_payment_method',\n            'payment_method.card',\n            'payment_method.payment_instrument',\n            'payment_method.paypal_account',\n            'payment_method.bank_account',\n            'line_item.price',\n            'price.product',\n            'period.subscription',\n          ],\n        }),\n        data: {\n          purge_pending_update: false,\n        },\n      })) as Period;\n    } catch (e) {\n      console.error(e);\n      this.error = e;\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  render() {\n    if (this.loading) {\n      return (\n        <sc-toggle borderless disabled>\n          <sc-flex slot=\"summary\" flexDirection=\"column\">\n            <sc-skeleton style={{ width: '200px' }}></sc-skeleton>\n            <sc-skeleton style={{ width: '400px' }}></sc-skeleton>\n            <sc-skeleton style={{ width: '300px' }}></sc-skeleton>\n          </sc-flex>\n        </sc-toggle>\n      );\n    }\n\n    const checkout = this?.period?.checkout as Checkout;\n    if (!checkout)\n      return (\n        <div style={{ padding: 'var(--sc-spacing-medium)' }}>\n          <sc-subscription-details slot=\"summary\" subscription={this.subscription}></sc-subscription-details>\n        </div>\n      );\n\n    const manualPaymentMethod = checkout?.manual_payment ? (checkout?.manual_payment_method as ManualPaymentMethod) : null;\n    const paymentMethodExists = this?.subscription.payment_method || this?.subscription.manual_payment;\n\n    return (\n      <Host>\n        <sc-toggle borderless shady>\n          <span slot=\"summary\">\n            <sc-subscription-details subscription={this.subscription}>\n              <div style={{ fontSize: 'var(--sc-font-size-small)' }}>\n                {__('Your next payment is', 'surecart')}{' '}\n                <strong>\n                  <sc-format-number type=\"currency\" currency={checkout?.currency} value={checkout?.amount_due} />\n                </strong>{' '}\n                {!!this.subscription?.finite && ' — ' + translateRemainingPayments(this.subscription?.remaining_period_count)}\n              </div>\n            </sc-subscription-details>\n          </span>\n\n          <sc-card noPadding borderless>\n            {checkout?.line_items?.data.map(item => (\n              <sc-product-line-item\n                imageUrl={(item.price?.product as Product)?.image_url}\n                name={(item.price?.product as Product)?.name}\n                priceName={item?.price?.name}\n                variantLabel={(item?.variant_options || []).filter(Boolean).join(' / ') || null}\n                editable={false}\n                removable={false}\n                quantity={item?.quantity}\n                amount={item?.total_amount}\n                currency={item?.price?.currency}\n                interval={intervalString(item?.price)}\n                purchasableStatusDisplay={item?.purchasable_status_display}\n              ></sc-product-line-item>\n            ))}\n\n            <sc-line-item>\n              <span slot=\"description\">{__('Subtotal', 'surecart')}</span>\n              <sc-format-number slot=\"price\" type=\"currency\" currency={checkout?.currency} value={checkout?.subtotal_amount}></sc-format-number>\n            </sc-line-item>\n\n            {!!checkout.proration_amount && (\n              <sc-line-item>\n                <span slot=\"description\">{__('Proration Credit', 'surecart')}</span>\n                <sc-format-number slot=\"price\" type=\"currency\" currency={checkout?.currency} value={-checkout?.proration_amount}></sc-format-number>\n              </sc-line-item>\n            )}\n\n            {!!checkout.applied_balance_amount && (\n              <sc-line-item>\n                <span slot=\"description\">{__('Applied Balance', 'surecart')}</span>\n                <sc-format-number slot=\"price\" type=\"currency\" currency={checkout?.currency} value={-checkout?.applied_balance_amount}></sc-format-number>\n              </sc-line-item>\n            )}\n\n            {!!checkout.trial_amount && (\n              <sc-line-item>\n                <span slot=\"description\">{__('Trial', 'surecart')}</span>\n                <sc-format-number slot=\"price\" type=\"currency\" currency={checkout?.currency} value={checkout?.trial_amount}></sc-format-number>\n              </sc-line-item>\n            )}\n\n            {!!checkout?.discount_amount && (\n              <sc-line-item>\n                <span slot=\"description\">{__('Discounts', 'surecart')}</span>\n                <sc-format-number slot=\"price\" type=\"currency\" currency={checkout?.currency} value={checkout?.discount_amount}></sc-format-number>\n              </sc-line-item>\n            )}\n\n            {!!checkout?.shipping_amount && (\n              <sc-line-item style={{ marginTop: 'var(--sc-spacing-small)' }}>\n                <span slot=\"description\">{__('Shipping', 'surecart')}</span>\n                <sc-format-number slot=\"price\" type=\"currency\" currency={checkout?.currency} value={checkout?.shipping_amount}></sc-format-number>\n              </sc-line-item>\n            )}\n\n            {!!checkout.tax_amount && (\n              <sc-line-item>\n                <span slot=\"description\">{formatTaxDisplay(checkout?.tax_label)}</span>\n                <sc-format-number slot=\"price\" type=\"currency\" currency={checkout?.currency} value={checkout?.tax_amount}></sc-format-number>\n              </sc-line-item>\n            )}\n\n            <sc-divider style={{ '--spacing': '0' }}></sc-divider>\n\n            <sc-line-item>\n              <span slot=\"description\">{__('Payment', 'surecart')}</span>\n              {paymentMethodExists && (\n                <a href={this.updatePaymentMethodUrl} slot=\"price-description\">\n                  <sc-flex justify-content=\"flex-start\" align-items=\"center\" style={{ '--spacing': '0.5em' }}>\n                    {manualPaymentMethod ? <sc-manual-payment-method paymentMethod={manualPaymentMethod} /> : <sc-payment-method paymentMethod={checkout?.payment_method} />}\n                    <sc-icon name=\"edit-3\"></sc-icon>\n                  </sc-flex>\n                </a>\n              )}\n              {!paymentMethodExists && (\n                <a\n                  href={addQueryArgs(window.location.href, {\n                    action: 'create',\n                    model: 'payment_method',\n                    id: this?.subscription.id,\n                    ...(this?.subscription?.live_mode === false ? { live_mode: false } : {}),\n                  })}\n                  slot=\"price-description\"\n                >\n                  {__('Add Payment Method', 'surecart')}\n                </a>\n              )}\n            </sc-line-item>\n\n            <sc-line-item style={{ '--price-size': 'var(--sc-font-size-x-large)' }}>\n              <span slot=\"title\">{__('Total Due', 'surecart')}</span>\n              <sc-format-number slot=\"price\" type=\"currency\" currency={checkout?.currency} value={checkout?.amount_due}></sc-format-number>\n              <span slot=\"currency\">{checkout.currency}</span>\n            </sc-line-item>\n          </sc-card>\n        </sc-toggle>\n      </Host>\n    );\n  }\n}\n"],"version":3}