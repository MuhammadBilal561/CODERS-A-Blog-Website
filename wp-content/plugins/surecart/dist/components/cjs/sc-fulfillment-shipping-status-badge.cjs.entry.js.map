{"file":"sc-fulfillment-shipping-status-badge.entry.cjs.js","mappings":";;;;;;AAAA,MAAM,mCAAmC,GAAG,6BAA6B;;ACKzE;aACa,UAAE;WACJ,UAAE;aACA,UAAE;;AAKf;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["./src/components/ui/fulfillment-shipping-status-badge/sc-fulfillment-shipping-status-badge.css?tag=sc-fulfillment-shipping-status-badge&encapsulation=shadow","./src/components/ui/fulfillment-shipping-status-badge/sc-fulfillment-shipping-status-badge.tsx"],"sourcesContent":[":host {\n  display: inline-block;\n}\n","import { Component, h, Host, Prop } from '@stencil/core';\nimport { __ } from '@wordpress/i18n';\n\nimport { FulfillmentStatus } from '../../../types';\n\nconst status = {\n  unshipped: __('Not Shipped', 'surecart'),\n  shipped: __('Shipped', 'surecart'),\n  delivered: __('Delivered', 'surecart'),\n} as {\n  [key in FulfillmentStatus]: string;\n};\n\nconst type = {\n  unshipped: 'default',\n  shipped: 'info',\n  delivered: 'success',\n} as {\n  [key in FulfillmentStatus]: 'default' | 'info' | 'success';\n};\n\n@Component({\n  tag: 'sc-fulfillment-shipping-status-badge',\n  styleUrl: 'sc-fulfillment-shipping-status-badge.css',\n  shadow: true,\n})\nexport class ScOrderStatusBadge {\n  /** The tag's statux type. */\n  @Prop() status: FulfillmentStatus;\n\n  /** The tag's size. */\n  @Prop({ reflect: true }) size: 'small' | 'medium' | 'large' = 'medium';\n\n  /** Draws a pill-style tag with rounded edges. */\n  @Prop({ reflect: true }) pill: boolean = false;\n\n  /** Makes the tag clearable. */\n  @Prop() clearable: boolean = false;\n\n  render() {\n    // don't render if not shippable.\n    if (this.status === 'unshippable') {\n      return <Host style={{ display: 'none' }}></Host>;\n    }\n\n    return (\n      <sc-tag type={type?.[this?.status]} pill={this.pill}>\n        {status?.[this.status] || this.status}\n      </sc-tag>\n    );\n  }\n}\n"],"version":3}