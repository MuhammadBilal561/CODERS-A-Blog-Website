{"file":"sc-tooltip2.js","mappings":"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","names":[],"sources":["./src/components/ui/tooltip/sc-tooltip.scss?tag=sc-tooltip&encapsulation=shadow","./src/components/ui/tooltip/sc-tooltip.tsx"],"sourcesContent":[".tooltip {\n  position: relative;\n\n\n  &--has-width .tooltip-text {\n    white-space: normal;\n    min-width: var(--sc-tooltip-width);\n    max-width: var(--sc-tooltip-width);\n  }\n}\n\n.tooltip-text {\n  position: fixed;\n  background: var(--sc-color-gray-900);\n  border-radius:var(--sc-border-radius-small);\n  padding: var(--sc-spacing-small);\n  font-family: var(--sc-input-font-family);\n  font-size: var(--sc-input-font-size-small);\n  white-space: nowrap;\n  line-height: 1.2;\n  color: var(--sc-color-white);\n  z-index: 99999;\n\n  &:after {\n    content: '';\n    position: absolute;\n    transform: translateX(-50%);\n    top: calc(100% - 1px);\n    left: 50%;\n    height: 0;\n    width: 0;\n    border: 7px solid transparent;\n    border-top-color: var(--sc-color-gray-900);\n  }\n}\n\n.tooltip--primary .tooltip-text {\n  background: var(--sc-color-primary-500);\n  &:after {\n    border-top-color: var(--sc-color-primary-500);\n  }\n}\n.tooltip--success .tooltip-text {\n  background: var(--sc-color-success-500);\n  &:after {\n    border-top-color: var(--sc-color-success-500);\n  }\n}\n.tooltip--info .tooltip-text {\n  background: var(--sc-color-info-500);\n  &:after {\n    border-top-color: var(--sc-color-info-500);\n  }\n}\n.tooltip--warning .tooltip-text {\n  background: var(--sc-color-warning-500);\n  &:after {\n    border-top-color: var(--sc-color-warning-500);\n  }\n}\n.tooltip--danger .tooltip-text {\n  background: var(--sc-color-danger-500);\n  &:after {\n    border-top-color: var(--sc-color-danger-500);\n  }\n}\n","import { Component, h, Prop, State, Element, Listen, Watch } from '@stencil/core';\n\n/**\n * @part base - The elements base wrapper.\n * @part text - The tooltip text.\n */\n@Component({\n  tag: 'sc-tooltip',\n  styleUrl: 'sc-tooltip.scss',\n  shadow: true,\n})\nexport class ScTooltip {\n  @Element() el: HTMLScTooltipElement;\n  private tooltip: HTMLDivElement;\n\n  /** Open or not */\n  @Prop({ mutable: true }) open: boolean;\n\n  /** Tooltip fixed width */\n  @Prop() width: string;\n\n  /** Tooltip text */\n  @Prop() text: string;\n\n  /** Freeze open or closed. */\n  @Prop() freeze: boolean;\n\n  /** The tooltip's padding. */\n  @Prop() padding: number = 5;\n\n  /** The tooltip's type. */\n  @Prop({ reflect: true }) type: 'primary' | 'success' | 'info' | 'warning' | 'danger' | 'text' = 'info';\n\n  @State() top: number = -10000;\n  @State() left: number = -10000;\n\n  componentDidLoad() {\n    this.handleWindowScroll();\n  }\n\n  @Listen('scroll', { target: 'window' })\n  @Listen('resize', { target: 'window' })\n  handleWindowScroll() {\n    if (!this.open) return;\n    if (!this.tooltip) return;\n\n    var linkProps = this.tooltip.getBoundingClientRect();\n    var tooltipProps = this.el.getBoundingClientRect();\n\n    this.top = tooltipProps.top - (linkProps.height + this.padding);\n    const min = Math.max(tooltipProps.left + tooltipProps.width / 2 - linkProps.width / 2 + this.padding, 0);\n    this.left = Math.min(min, window.innerWidth - linkProps.width);\n  }\n\n  @Watch('open')\n  handleOpenChange() {\n    setTimeout(() => this.handleWindowScroll(), 0);\n  }\n\n  handleBlur() {\n    if (this.freeze) return;\n    this.open = false;\n  }\n  handleClick() {\n    if (this.freeze) return;\n    this.open = true;\n  }\n  handleFocus() {\n    if (this.freeze) return;\n    this.open = true;\n  }\n  handleMouseOver() {\n    if (this.freeze) return;\n    this.open = true;\n  }\n  handleMouseOut() {\n    if (this.freeze) return;\n    this.open = false;\n  }\n\n  render() {\n    if (!this.text) {\n      return <slot />;\n    }\n\n    return (\n      <span\n        part=\"base\"\n        class={{\n          'tooltip': true,\n          // Types\n          'tooltip--primary': this.type === 'primary',\n          'tooltip--success': this.type === 'success',\n          'tooltip--info': this.type === 'info',\n          'tooltip--warning': this.type === 'warning',\n          'tooltip--danger': this.type === 'danger',\n          'tooltip--has-width': !!this.width,\n        }}\n        onClick={() => this.handleClick()}\n        onBlur={() => this.handleBlur()}\n        onFocus={() => this.handleFocus()}\n        onMouseOver={() => this.handleMouseOver()}\n        onMouseOut={() => this.handleMouseOut()}\n      >\n        <slot></slot>\n        {!!this.open && (\n          <div\n            part=\"text\"\n            ref={el => (this.tooltip = el as HTMLDivElement)}\n            class=\"tooltip-text\"\n            style={{\n              top: `${this.top}px`,\n              left: `${this.left}px`,\n              ...(this.width ? { '--sc-tooltip-width': this.width } : {}),\n            }}\n          >\n            {this.text}\n          </div>\n        )}\n      </span>\n    );\n  }\n}\n"],"version":3}