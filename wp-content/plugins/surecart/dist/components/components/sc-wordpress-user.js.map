{"file":"sc-wordpress-user.js","mappings":";;;;;;;;;;;AAAA,MAAM,kBAAkB,GAAG,kFAAkF;;;;;;;;;;;;;;;oQCwBtF,UAAE,wWASF,UAAE,uWAUF,UAAE,wWASF,UAAE;;;wCAWM,UAAE;;;mHAMa,UAAE;;;2EAWrC,UAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["./src/components/controllers/dashboard/wordpress-user/sc-wordpress-user.css?tag=sc-wordpress-user&encapsulation=shadow","./src/components/controllers/dashboard/wordpress-user/sc-wordpress-user.tsx"],"sourcesContent":[":host {\n  display: block;\n  position: relative;\n}\n\n.customer-details {\n  display: grid;\n  gap: 0.75em;\n}\n","import { Component, Fragment, h, Prop } from '@stencil/core';\nimport { __ } from '@wordpress/i18n';\nimport { addQueryArgs } from '@wordpress/url';\nimport { WordPressUser } from '../../../../types';\n\n@Component({\n  tag: 'sc-wordpress-user',\n  styleUrl: 'sc-wordpress-user.css',\n  shadow: true,\n})\nexport class ScWordPressUser {\n  @Prop() heading: string;\n  @Prop() user: WordPressUser;\n\n  renderContent() {\n    if (!this.user) {\n      return this.renderEmpty();\n    }\n\n    return (\n      <Fragment>\n        {!!this?.user?.display_name && (\n          <sc-stacked-list-row style={{ '--columns': '3' }} mobileSize={480}>\n            <div>\n              <strong>{__('Display Name', 'surecart')}</strong>\n            </div>\n            <div>{this.user?.display_name}</div>\n            <div></div>\n          </sc-stacked-list-row>\n        )}\n        {!!this?.user?.email && (\n          <sc-stacked-list-row style={{ '--columns': '3' }} mobileSize={480}>\n            <div>\n              <strong>{__('Account Email', 'surecart')}</strong>\n            </div>\n            <div>{this.user?.email}</div>\n            <div></div>\n          </sc-stacked-list-row>\n        )}\n\n        {!!this?.user?.first_name && (\n          <sc-stacked-list-row style={{ '--columns': '3' }} mobileSize={480}>\n            <div>\n              <strong>{__('First Name', 'surecart')}</strong>\n            </div>\n            <div>{this.user?.first_name}</div>\n            <div></div>\n          </sc-stacked-list-row>\n        )}\n        {!!this?.user?.last_name && (\n          <sc-stacked-list-row style={{ '--columns': '3' }} mobileSize={480}>\n            <div>\n              <strong>{__('Last Name', 'surecart')}</strong>\n            </div>\n            <div>{this.user?.last_name}</div>\n            <div></div>\n          </sc-stacked-list-row>\n        )}\n      </Fragment>\n    );\n  }\n\n  renderEmpty() {\n    return <slot name=\"empty\">{__('User not found.', 'surecart')}</slot>;\n  }\n\n  render() {\n    return (\n      <sc-dashboard-module class=\"customer-details\">\n        <span slot=\"heading\">{this.heading || __('Account Details', 'surecart')} </span>\n\n        <sc-button\n          type=\"link\"\n          href={addQueryArgs(window.location.href, {\n            action: 'edit',\n            model: 'user',\n          })}\n          slot=\"end\"\n        >\n          <sc-icon name=\"edit-3\" slot=\"prefix\"></sc-icon>\n          {__('Update', 'surecart')}\n        </sc-button>\n\n        <sc-card no-padding>\n          <sc-stacked-list>{this.renderContent()}</sc-stacked-list>\n        </sc-card>\n      </sc-dashboard-module>\n    );\n  }\n}\n"],"version":3}