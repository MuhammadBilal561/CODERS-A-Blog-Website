{"file":"sc-subscription-cancel2.js","mappings":";;;;;;;;;;;;;AAAA,MAAM,uBAAuB,GAAG,mLAAmL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wECyClL,UAAE;;;;;;;;;4MActB,UAAE,gXAIA,UAAE,iHAGkB,UAAE;;;;;;gEAmBJ,UAAE,oWAStB,UAAE,2NAUF,UAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["./src/components/controllers/dashboard/subscription-cancel/sc-subscription-cancel.scss?tag=sc-subscription-cancel&encapsulation=shadow","./src/components/controllers/dashboard/subscription-cancel/sc-subscription-cancel.tsx"],"sourcesContent":[":host {\n  display: block;\n  position: relative;\n}\n\n.subscription-cancel {\n  display: grid;\n  gap: 0.5em;\n}\n\n.subscription-cancel__terms {\n  color: var(--sc-color-gray-600);\n  font-size: var(--sc-font-size-small);\n}\n","import { Component, Event, EventEmitter, Fragment, h, Prop, State } from '@stencil/core';\nimport { __ } from '@wordpress/i18n';\nimport { addQueryArgs } from '@wordpress/url';\nimport apiFetch from '../../../../functions/fetch';\nimport { CancellationReason, SubscriptionProtocol } from '../../../../types';\nimport { Subscription } from '../../../../types';\n\n@Component({\n  tag: 'sc-subscription-cancel',\n  styleUrl: 'sc-subscription-cancel.scss',\n  shadow: true,\n})\nexport class ScSubscriptionCancel {\n  @Prop() heading: string;\n  @Prop() backUrl: string;\n  @Prop() successUrl: string;\n  @Prop() subscription: Subscription;\n  @Prop() protocol: SubscriptionProtocol;\n  @Prop() reason: CancellationReason;\n  @Prop() comment: string;\n  @State() loading: boolean;\n  @State() busy: boolean;\n  @State() error: string;\n  @Event() scAbandon: EventEmitter<void>;\n  @Event() scCancelled: EventEmitter<void>;\n\n  async cancelSubscription() {\n    try {\n      this.error = '';\n      this.busy = true;\n      await apiFetch({\n        path: addQueryArgs(`/surecart/v1/subscriptions/${this.subscription?.id}/cancel`, {\n          cancellation_act: {\n            ...(!!this.comment ? { comment: this.comment } : {}),\n            cancellation_reason_id: this.reason?.id,\n          },\n        }),\n        method: 'PATCH',\n      });\n      this.scCancelled.emit();\n    } catch (e) {\n      this.error = e?.message || __('Something went wrong', 'surecart');\n      this.busy = false;\n    }\n  }\n\n  renderContent() {\n    if (this.loading) {\n      return this.renderLoading();\n    }\n\n    return (\n      <Fragment>\n        {this?.protocol?.cancel_behavior === 'pending' ? (\n          <div slot=\"description\">\n            {__('Your plan will be canceled, but is still available until the end of your billing period on', 'surecart')}{' '}\n            <strong>\n              <sc-format-date type=\"timestamp\" date={this?.subscription?.current_period_end_at as number} month=\"long\" day=\"numeric\" year=\"numeric\"></sc-format-date>\n            </strong>\n            . {__('If you change your mind, you can renew your subscription.', 'surecart')}\n          </div>\n        ) : (\n          <div slot=\"description\">{__('Your plan will be canceled immediately and cannot be modified later.', 'surecart')}</div>\n        )}\n      </Fragment>\n    );\n  }\n\n  renderLoading() {\n    return (\n      <div style={{ padding: '0.5em' }}>\n        <sc-skeleton style={{ width: '30%', marginBottom: '0.75em' }}></sc-skeleton>\n        <sc-skeleton style={{ width: '20%', marginBottom: '0.75em' }}></sc-skeleton>\n        <sc-skeleton style={{ width: '40%' }}></sc-skeleton>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <sc-dashboard-module\n        heading={this.heading || __('Cancel your plan', 'surecart')}\n        class=\"subscription-cancel\"\n        error={this.error}\n        style={{ '--sc-dashboard-module-spacing': '1em' }}\n      >\n        {this.renderContent()}\n\n        <sc-flex justifyContent=\"flex-start\">\n          <sc-button type=\"primary\" loading={this.loading || this.busy} disabled={this.loading || this.busy} onClick={() => this.cancelSubscription()}>\n            {__('Cancel Plan', 'surecart')}\n          </sc-button>\n\n          <sc-button\n            style={{ color: 'var(--sc-color-gray-500' }}\n            type=\"text\"\n            onClick={() => this.scAbandon.emit()}\n            loading={this.loading || this.busy}\n            disabled={this.loading || this.busy}\n          >\n            {__('Keep My Plan', 'surecart')}\n          </sc-button>\n        </sc-flex>\n\n        {this.busy && <sc-block-ui></sc-block-ui>}\n      </sc-dashboard-module>\n    );\n  }\n}\n"],"version":3}