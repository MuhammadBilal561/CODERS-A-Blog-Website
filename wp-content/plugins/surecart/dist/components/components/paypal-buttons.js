import{proxyCustomElement,HTMLElement,createEvent,h}from"@stencil/core/internal/client";import{l as loadScript,g as getScriptLoadParams}from"./functions.js";import{a as apiFetch}from"./fetch.js";import{g as fetchCheckout}from"./index4.js";import{c as createErrorNotice}from"./mutations3.js";import{d as defineCustomElement$1}from"./sc-skeleton2.js";const paypalButtonsCss=':host{display:block}.paypal-buttons{position:relative;line-height:0;text-align:center}.paypal-buttons:not(.paypal-buttons--busy):after{content:" ";border-bottom:1px solid var(--sc-input-border-color);width:100%;height:0;top:50%;left:0;right:0;position:absolute}',ScPaypalButtons=proxyCustomElement(class extends HTMLElement{constructor(){super(),this.__registerHost(),this.__attachShadow(),this.scSetState=createEvent(this,"scSetState",7),this.scPaid=createEvent(this,"scPaid",7),this.clientId=void 0,this.busy=!1,this.merchantId=void 0,this.merchantInitiated=void 0,this.mode=void 0,this.order=void 0,this.buttons=["paypal","card"],this.label="paypal",this.color="gold",this.loaded=void 0}handleOrderChange(t,e){(null==t?void 0:t.updated_at)!==(null==e?void 0:e.updated_at)&&(this.cardContainer.innerHTML="",this.paypalContainer.innerHTML="",this.loadScript())}async loadScript(){var t,e;if(this.clientId&&this.merchantId)try{const s=await loadScript(getScriptLoadParams({clientId:this.clientId,merchantId:this.merchantId,merchantInitiated:this.merchantInitiated,reusable:null===(t=this.order)||void 0===t?void 0:t.reusable_payment_method_required,currency:null===(e=this.order)||void 0===e?void 0:e.currency}));this.renderButtons(s)}catch(t){console.error("failed to load the PayPal JS SDK script",t)}}componentDidLoad(){this.loadScript()}renderButtons(t){const e={onClick:async(t,e)=>{const s=this.el.closest("sc-checkout");return await s.validate()?e.resolve():e.reject()},onInit:()=>{this.loaded=!0},onCancel:()=>{this.scSetState.emit("REJECT")},onApprove:async()=>{var t,e,s,i;try{this.order=await fetchCheckout({id:null===(t=this.order)||void 0===t?void 0:t.id})}catch(t){console.error(t),createErrorNotice({code:"could_not_capture",message:wp.i18n.__("The payment did not process. Please try again.","surecart")}),this.scSetState.emit("REJECT")}try{this.scSetState.emit("PAYING");const t=await apiFetch({method:"PATCH",path:`surecart/v1/payment_intents/${(null===(s=null===(e=this.order)||void 0===e?void 0:e.payment_intent)||void 0===s?void 0:s.id)||(null===(i=this.order)||void 0===i?void 0:i.payment_intent)}/capture`});["succeeded","processing"].includes(null==t?void 0:t.status)?(this.scSetState.emit("PAID"),this.scPaid.emit()):(createErrorNotice({code:"could_not_capture",message:wp.i18n.__("Payment processing failed. Kindly attempt the transaction once more.","surecart")}),this.scSetState.emit("REJECT"))}catch(t){console.error(t),createErrorNotice({code:"could_not_capture",message:wp.i18n.__("Payment processing failed. Kindly attempt the transaction once more.","surecart")}),this.scSetState.emit("REJECT")}},onError:t=>{console.error(t),createErrorNotice(t),this.scSetState.emit("REJECT")}};if(e[this.order.reusable_payment_method_required?"createBillingAgreement":"createOrder"]=async()=>new Promise((async(t,e)=>{var s,i;const a=this.el.closest("sc-checkout"),n=await a.submit();return n instanceof Error?e(n):"finalized"!==(null==n?void 0:n.status)?e(new Error("Something went wrong. Please try again.")):(null===(s=null==n?void 0:n.payment_intent)||void 0===s?void 0:s.external_intent_id)?t(null===(i=null==n?void 0:n.payment_intent)||void 0===i?void 0:i.external_intent_id):(createErrorNotice({code:"missing_payment_intent",message:wp.i18n.__("Something went wrong. Please contact us for payment.","surecart")}),e())})),t.FUNDING.PAYPAL){const s=t.Buttons({fundingSource:t.FUNDING.PAYPAL,style:{label:this.label,color:this.color},...e});s.isEligible()&&s.render(this.paypalContainer)}if(t.FUNDING.CARD){const s=t.Buttons({fundingSource:t.FUNDING.CARD,style:{color:"black"},...e});s.isEligible()&&s.render(this.cardContainer)}}render(){return h("div",{part:`base ${this.busy||!this.loaded&&"base--busy"}`,class:{"paypal-buttons":!0,"paypal-buttons--busy":this.busy||!this.loaded}},(!this.loaded||this.busy)&&h("sc-skeleton",{style:{height:"55px","--border-radius":"4px",cursor:"wait"}}),h("div",{class:"sc-paypal-button-container",hidden:!this.loaded||this.busy},h("div",{part:"paypal-card-button",hidden:!this.buttons.includes("card"),class:"sc-paypal-card-button",ref:t=>this.cardContainer=t}),h("div",{part:"paypal-button",hidden:!this.buttons.includes("paypal"),class:"sc-paypal-button",ref:t=>this.paypalContainer=t})))}get el(){return this}static get watchers(){return{order:["handleOrderChange"]}}static get style(){return paypalButtonsCss}},[1,"sc-paypal-buttons",{clientId:[1,"client-id"],busy:[4],merchantId:[1,"merchant-id"],merchantInitiated:[4,"merchant-initiated"],mode:[1],order:[1040],buttons:[16],label:[1],color:[1],loaded:[32]}]);function defineCustomElement(){"undefined"!=typeof customElements&&["sc-paypal-buttons","sc-skeleton"].forEach((t=>{switch(t){case"sc-paypal-buttons":customElements.get(t)||customElements.define(t,ScPaypalButtons);break;case"sc-skeleton":customElements.get(t)||defineCustomElement$1()}}))}export{ScPaypalButtons as S,defineCustomElement as d};