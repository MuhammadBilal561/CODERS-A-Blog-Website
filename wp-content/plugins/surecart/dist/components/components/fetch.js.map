{"file":"fetch.js","mappings":"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,OAAO,EAAE,MAAM;AACrB,KAAK,CAAC,CAAC;AACP,GAAG;AACH;AACA,EAAE,IAAI,OAAO,OAAO,CAAC,IAAI,KAAK,QAAQ,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE;AACjF,IAAI,OAAO,CAAC,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE;AAC9C,MAAM,OAAO,EAAE,MAAM;AACrB,KAAK,CAAC,CAAC;AACP,GAAG;AACH;AACA,EAAE,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC;AACvB,CAAC;;ACtBD;AACA;AACA;AACqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAE;AACjB;AACA;AACA;AACA;;ACrFA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,UAAE;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChFA;AACA;AACA;AAeeAAe,UAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7KA;AAEA;AAEA;;;;;;AAOA;;;;AAKA;AACA;;;AAGA;AAIA;;;;;;;;;;aAUa,UAAE;;;;;;;;;;;AAcf;;;;;;;;;;;;;;;;;;;;;;;AA4BA;;;;","names":["parseResponse"],"sources":["../../node_modules/@wordpress/api-fetch/build-module/middlewares/nonce.js","../../node_modules/@wordpress/api-fetch/build-module/middlewares/namespace-endpoint.js","../../node_modules/@wordpress/api-fetch/build-module/middlewares/root-url.js","../../node_modules/@wordpress/api-fetch/node_modules/@wordpress/url/build-module/get-query-string.js","../../node_modules/@wordpress/api-fetch/node_modules/@wordpress/url/build-module/build-query-string.js","../../node_modules/@wordpress/api-fetch/node_modules/@wordpress/url/build-module/get-query-args.js","../../node_modules/@wordpress/api-fetch/node_modules/@wordpress/url/build-module/add-query-args.js","../../node_modules/@wordpress/api-fetch/node_modules/@wordpress/url/build-module/get-query-arg.js","../../node_modules/@wordpress/api-fetch/node_modules/@wordpress/url/build-module/has-query-arg.js","../../node_modules/@wordpress/api-fetch/node_modules/@wordpress/url/build-module/normalize-path.js","../../node_modules/@wordpress/api-fetch/build-module/middlewares/preloading.js","../../node_modules/@wordpress/api-fetch/build-module/middlewares/fetch-all-middleware.js","../../node_modules/@wordpress/api-fetch/build-module/middlewares/http-v1.js","../../node_modules/@wordpress/api-fetch/build-module/middlewares/user-locale.js","../../node_modules/@wordpress/api-fetch/build-module/utils/response.js","../../node_modules/@wordpress/api-fetch/build-module/middlewares/media-upload.js","../../node_modules/@wordpress/api-fetch/build-module/index.js","./src/functions/fetch.ts"],"sourcesContent":["/**\n * @param {string} nonce\n * @return {import('../types').APIFetchMiddleware & { nonce: string }} A middleware to enhance a request with a nonce.\n */\nfunction createNonceMiddleware(nonce) {\n  /**\n   * @type {import('../types').APIFetchMiddleware & { nonce: string }}\n   */\n  const middleware = (options, next) => {\n    const {\n      headers = {}\n    } = options; // If an 'X-WP-Nonce' header (or any case-insensitive variation\n    // thereof) was specified, no need to add a nonce header.\n\n    for (const headerName in headers) {\n      if (headerName.toLowerCase() === 'x-wp-nonce' && headers[headerName] === middleware.nonce) {\n        return next(options);\n      }\n    }\n\n    return next({ ...options,\n      headers: { ...headers,\n        'X-WP-Nonce': middleware.nonce\n      }\n    });\n  };\n\n  middleware.nonce = nonce;\n  return middleware;\n}\n\nexport default createNonceMiddleware;\n//# sourceMappingURL=nonce.js.map","/**\n * @type {import('../types').APIFetchMiddleware}\n */\nconst namespaceAndEndpointMiddleware = (options, next) => {\n  let path = options.path;\n  let namespaceTrimmed, endpointTrimmed;\n\n  if (typeof options.namespace === 'string' && typeof options.endpoint === 'string') {\n    namespaceTrimmed = options.namespace.replace(/^\\/|\\/$/g, '');\n    endpointTrimmed = options.endpoint.replace(/^\\//, '');\n\n    if (endpointTrimmed) {\n      path = namespaceTrimmed + '/' + endpointTrimmed;\n    } else {\n      path = namespaceTrimmed;\n    }\n  }\n\n  delete options.namespace;\n  delete options.endpoint;\n  return next({ ...options,\n    path\n  });\n};\n\nexport default namespaceAndEndpointMiddleware;\n//# sourceMappingURL=namespace-endpoint.js.map","/**\n * Internal dependencies\n */\nimport namespaceAndEndpointMiddleware from './namespace-endpoint';\n/**\n * @param {string} rootURL\n * @return {import('../types').APIFetchMiddleware} Root URL middleware.\n */\n\nconst createRootURLMiddleware = rootURL => (options, next) => {\n  return namespaceAndEndpointMiddleware(options, optionsWithPath => {\n    let url = optionsWithPath.url;\n    let path = optionsWithPath.path;\n    let apiRoot;\n\n    if (typeof path === 'string') {\n      apiRoot = rootURL;\n\n      if (-1 !== rootURL.indexOf('?')) {\n        path = path.replace('?', '&');\n      }\n\n      path = path.replace(/^\\//, ''); // API root may already include query parameter prefix if site is\n      // configured to use plain permalinks.\n\n      if ('string' === typeof apiRoot && -1 !== apiRoot.indexOf('?')) {\n        path = path.replace('?', '&');\n      }\n\n      url = apiRoot + path;\n    }\n\n    return next({ ...optionsWithPath,\n      url\n    });\n  });\n};\n\nexport default createRootURLMiddleware;\n//# sourceMappingURL=root-url.js.map","/**\n * Returns the query string part of the URL.\n *\n * @param {string} url The full URL.\n *\n * @example\n * ```js\n * const queryString = getQueryString( 'http://localhost:8080/this/is/a/test?query=true#fragment' ); // 'query=true'\n * ```\n *\n * @return {string|void} The query string part of the URL.\n */\nexport function getQueryString(url) {\n  let query;\n\n  try {\n    query = new URL(url, 'http://example.com').search.substring(1);\n  } catch (error) {}\n\n  if (query) {\n    return query;\n  }\n}\n//# sourceMappingURL=get-query-string.js.map","/**\n * Generates URL-encoded query string using input query data.\n *\n * It is intended to behave equivalent as PHP's `http_build_query`, configured\n * with encoding type PHP_QUERY_RFC3986 (spaces as `%20`).\n *\n * @example\n * ```js\n * const queryString = buildQueryString( {\n *    simple: 'is ok',\n *    arrays: [ 'are', 'fine', 'too' ],\n *    objects: {\n *       evenNested: {\n *          ok: 'yes',\n *       },\n *    },\n * } );\n * // \"simple=is%20ok&arrays%5B0%5D=are&arrays%5B1%5D=fine&arrays%5B2%5D=too&objects%5BevenNested%5D%5Bok%5D=yes\"\n * ```\n *\n * @param {Record<string,*>} data Data to encode.\n *\n * @return {string} Query string.\n */\nexport function buildQueryString(data) {\n  let string = '';\n  const stack = Object.entries(data);\n  let pair;\n\n  while (pair = stack.shift()) {\n    let [key, value] = pair; // Support building deeply nested data, from array or object values.\n\n    const hasNestedData = Array.isArray(value) || value && value.constructor === Object;\n\n    if (hasNestedData) {\n      // Push array or object values onto the stack as composed of their\n      // original key and nested index or key, retaining order by a\n      // combination of Array#reverse and Array#unshift onto the stack.\n      const valuePairs = Object.entries(value).reverse();\n\n      for (const [member, memberValue] of valuePairs) {\n        stack.unshift([`${key}[${member}]`, memberValue]);\n      }\n    } else if (value !== undefined) {\n      // Null is treated as special case, equivalent to empty string.\n      if (value === null) {\n        value = '';\n      }\n\n      string += '&' + [key, value].map(encodeURIComponent).join('=');\n    }\n  } // Loop will concatenate with leading `&`, but it's only expected for all\n  // but the first query parameter. This strips the leading `&`, while still\n  // accounting for the case that the string may in-fact be empty.\n\n\n  return string.substr(1);\n}\n//# sourceMappingURL=build-query-string.js.map","/**\n * Internal dependencies\n */\nimport { getQueryString } from './get-query-string';\n/** @typedef {import('./get-query-arg').QueryArgParsed} QueryArgParsed */\n\n/**\n * @typedef {Record<string,QueryArgParsed>} QueryArgs\n */\n\n/**\n * Sets a value in object deeply by a given array of path segments. Mutates the\n * object reference.\n *\n * @param {Record<string,*>} object Object in which to assign.\n * @param {string[]}         path   Path segment at which to set value.\n * @param {*}                value  Value to set.\n */\n\nfunction setPath(object, path, value) {\n  const length = path.length;\n  const lastIndex = length - 1;\n\n  for (let i = 0; i < length; i++) {\n    let key = path[i];\n\n    if (!key && Array.isArray(object)) {\n      // If key is empty string and next value is array, derive key from\n      // the current length of the array.\n      key = object.length.toString();\n    }\n\n    key = ['__proto__', 'constructor', 'prototype'].includes(key) ? key.toUpperCase() : key; // If the next key in the path is numeric (or empty string), it will be\n    // created as an array. Otherwise, it will be created as an object.\n\n    const isNextKeyArrayIndex = !isNaN(Number(path[i + 1]));\n    object[key] = i === lastIndex ? // If at end of path, assign the intended value.\n    value : // Otherwise, advance to the next object in the path, creating\n    // it if it does not yet exist.\n    object[key] || (isNextKeyArrayIndex ? [] : {});\n\n    if (Array.isArray(object[key]) && !isNextKeyArrayIndex) {\n      // If we current key is non-numeric, but the next value is an\n      // array, coerce the value to an object.\n      object[key] = { ...object[key]\n      };\n    } // Update working reference object to the next in the path.\n\n\n    object = object[key];\n  }\n}\n/**\n * Returns an object of query arguments of the given URL. If the given URL is\n * invalid or has no querystring, an empty object is returned.\n *\n * @param {string} url URL.\n *\n * @example\n * ```js\n * const foo = getQueryArgs( 'https://wordpress.org?foo=bar&bar=baz' );\n * // { \"foo\": \"bar\", \"bar\": \"baz\" }\n * ```\n *\n * @return {QueryArgs} Query args object.\n */\n\n\nexport function getQueryArgs(url) {\n  return (getQueryString(url) || '' // Normalize space encoding, accounting for PHP URL encoding\n  // corresponding to `application/x-www-form-urlencoded`.\n  //\n  // See: https://tools.ietf.org/html/rfc1866#section-8.2.1\n  ).replace(/\\+/g, '%20').split('&').reduce((accumulator, keyValue) => {\n    const [key, value = ''] = keyValue.split('=') // Filtering avoids decoding as `undefined` for value, where\n    // default is restored in destructuring assignment.\n    .filter(Boolean).map(decodeURIComponent);\n\n    if (key) {\n      const segments = key.replace(/\\]/g, '').split('[');\n      setPath(accumulator, segments, value);\n    }\n\n    return accumulator;\n  }, Object.create(null));\n}\n//# sourceMappingURL=get-query-args.js.map","/**\n * Internal dependencies\n */\nimport { getQueryArgs } from './get-query-args';\nimport { buildQueryString } from './build-query-string';\n/**\n * Appends arguments as querystring to the provided URL. If the URL already\n * includes query arguments, the arguments are merged with (and take precedent\n * over) the existing set.\n *\n * @param {string} [url=''] URL to which arguments should be appended. If omitted,\n *                          only the resulting querystring is returned.\n * @param {Object} [args]   Query arguments to apply to URL.\n *\n * @example\n * ```js\n * const newURL = addQueryArgs( 'https://google.com', { q: 'test' } ); // https://google.com/?q=test\n * ```\n *\n * @return {string} URL with arguments applied.\n */\n\nexport function addQueryArgs() {\n  let url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  let args = arguments.length > 1 ? arguments[1] : undefined;\n\n  // If no arguments are to be appended, return original URL.\n  if (!args || !Object.keys(args).length) {\n    return url;\n  }\n\n  let baseUrl = url; // Determine whether URL already had query arguments.\n\n  const queryStringIndex = url.indexOf('?');\n\n  if (queryStringIndex !== -1) {\n    // Merge into existing query arguments.\n    args = Object.assign(getQueryArgs(url), args); // Change working base URL to omit previous query arguments.\n\n    baseUrl = baseUrl.substr(0, queryStringIndex);\n  }\n\n  return baseUrl + '?' + buildQueryString(args);\n}\n//# sourceMappingURL=add-query-args.js.map","/**\n * Internal dependencies\n */\nimport { getQueryArgs } from './get-query-args';\n/**\n * @typedef {{[key: string]: QueryArgParsed}} QueryArgObject\n */\n\n/**\n * @typedef {string|string[]|QueryArgObject} QueryArgParsed\n */\n\n/**\n * Returns a single query argument of the url\n *\n * @param {string} url URL.\n * @param {string} arg Query arg name.\n *\n * @example\n * ```js\n * const foo = getQueryArg( 'https://wordpress.org?foo=bar&bar=baz', 'foo' ); // bar\n * ```\n *\n * @return {QueryArgParsed|void} Query arg value.\n */\n\nexport function getQueryArg(url, arg) {\n  return getQueryArgs(url)[arg];\n}\n//# sourceMappingURL=get-query-arg.js.map","/**\n * Internal dependencies\n */\nimport { getQueryArg } from './get-query-arg';\n/**\n * Determines whether the URL contains a given query arg.\n *\n * @param {string} url URL.\n * @param {string} arg Query arg name.\n *\n * @example\n * ```js\n * const hasBar = hasQueryArg( 'https://wordpress.org?foo=bar&bar=baz', 'bar' ); // true\n * ```\n *\n * @return {boolean} Whether or not the URL contains the query arg.\n */\n\nexport function hasQueryArg(url, arg) {\n  return getQueryArg(url, arg) !== undefined;\n}\n//# sourceMappingURL=has-query-arg.js.map","/**\n * Given a path, returns a normalized path where equal query parameter values\n * will be treated as identical, regardless of order they appear in the original\n * text.\n *\n * @param {string} path Original path.\n *\n * @return {string} Normalized path.\n */\nexport function normalizePath(path) {\n  const splitted = path.split('?');\n  const query = splitted[1];\n  const base = splitted[0];\n\n  if (!query) {\n    return base;\n  } // 'b=1%2C2&c=2&a=5'\n\n\n  return base + '?' + query // [ 'b=1%2C2', 'c=2', 'a=5' ]\n  .split('&') // [ [ 'b, '1%2C2' ], [ 'c', '2' ], [ 'a', '5' ] ]\n  .map(entry => entry.split('=')) // [ [ 'b', '1,2' ], [ 'c', '2' ], [ 'a', '5' ] ]\n  .map(pair => pair.map(decodeURIComponent)) // [ [ 'a', '5' ], [ 'b, '1,2' ], [ 'c', '2' ] ]\n  .sort((a, b) => a[0].localeCompare(b[0])) // [ [ 'a', '5' ], [ 'b, '1%2C2' ], [ 'c', '2' ] ]\n  .map(pair => pair.map(encodeURIComponent)) // [ 'a=5', 'b=1%2C2', 'c=2' ]\n  .map(pair => pair.join('=')) // 'a=5&b=1%2C2&c=2'\n  .join('&');\n}\n//# sourceMappingURL=normalize-path.js.map","/**\n * WordPress dependencies\n */\nimport { addQueryArgs, getQueryArgs, normalizePath } from '@wordpress/url';\n/**\n * @param {Record<string, any>} preloadedData\n * @return {import('../types').APIFetchMiddleware} Preloading middleware.\n */\n\nfunction createPreloadingMiddleware(preloadedData) {\n  const cache = Object.fromEntries(Object.entries(preloadedData).map(_ref => {\n    let [path, data] = _ref;\n    return [normalizePath(path), data];\n  }));\n  return (options, next) => {\n    const {\n      parse = true\n    } = options;\n    /** @type {string | void} */\n\n    let rawPath = options.path;\n\n    if (!rawPath && options.url) {\n      const {\n        rest_route: pathFromQuery,\n        ...queryArgs\n      } = getQueryArgs(options.url);\n\n      if (typeof pathFromQuery === 'string') {\n        rawPath = addQueryArgs(pathFromQuery, queryArgs);\n      }\n    }\n\n    if (typeof rawPath !== 'string') {\n      return next(options);\n    }\n\n    const method = options.method || 'GET';\n    const path = normalizePath(rawPath);\n\n    if ('GET' === method && cache[path]) {\n      const cacheData = cache[path]; // Unsetting the cache key ensures that the data is only used a single time.\n\n      delete cache[path];\n      return prepareResponse(cacheData, !!parse);\n    } else if ('OPTIONS' === method && cache[method] && cache[method][path]) {\n      const cacheData = cache[method][path]; // Unsetting the cache key ensures that the data is only used a single time.\n\n      delete cache[method][path];\n      return prepareResponse(cacheData, !!parse);\n    }\n\n    return next(options);\n  };\n}\n/**\n * This is a helper function that sends a success response.\n *\n * @param {Record<string, any>} responseData\n * @param {boolean}             parse\n * @return {Promise<any>} Promise with the response.\n */\n\n\nfunction prepareResponse(responseData, parse) {\n  return Promise.resolve(parse ? responseData.body : new window.Response(JSON.stringify(responseData.body), {\n    status: 200,\n    statusText: 'OK',\n    headers: responseData.headers\n  }));\n}\n\nexport default createPreloadingMiddleware;\n//# sourceMappingURL=preloading.js.map","/**\n * WordPress dependencies\n */\nimport { addQueryArgs } from '@wordpress/url';\n/**\n * Internal dependencies\n */\n\nimport apiFetch from '..';\n/**\n * Apply query arguments to both URL and Path, whichever is present.\n *\n * @param {import('../types').APIFetchOptions} props\n * @param {Record<string, string | number>}    queryArgs\n * @return {import('../types').APIFetchOptions} The request with the modified query args\n */\n\nconst modifyQuery = (_ref, queryArgs) => {\n  let {\n    path,\n    url,\n    ...options\n  } = _ref;\n  return { ...options,\n    url: url && addQueryArgs(url, queryArgs),\n    path: path && addQueryArgs(path, queryArgs)\n  };\n};\n/**\n * Duplicates parsing functionality from apiFetch.\n *\n * @param {Response} response\n * @return {Promise<any>} Parsed response json.\n */\n\n\nconst parseResponse = response => response.json ? response.json() : Promise.reject(response);\n/**\n * @param {string | null} linkHeader\n * @return {{ next?: string }} The parsed link header.\n */\n\n\nconst parseLinkHeader = linkHeader => {\n  if (!linkHeader) {\n    return {};\n  }\n\n  const match = linkHeader.match(/<([^>]+)>; rel=\"next\"/);\n  return match ? {\n    next: match[1]\n  } : {};\n};\n/**\n * @param {Response} response\n * @return {string | undefined} The next page URL.\n */\n\n\nconst getNextPageUrl = response => {\n  const {\n    next\n  } = parseLinkHeader(response.headers.get('link'));\n  return next;\n};\n/**\n * @param {import('../types').APIFetchOptions} options\n * @return {boolean} True if the request contains an unbounded query.\n */\n\n\nconst requestContainsUnboundedQuery = options => {\n  const pathIsUnbounded = !!options.path && options.path.indexOf('per_page=-1') !== -1;\n  const urlIsUnbounded = !!options.url && options.url.indexOf('per_page=-1') !== -1;\n  return pathIsUnbounded || urlIsUnbounded;\n};\n/**\n * The REST API enforces an upper limit on the per_page option. To handle large\n * collections, apiFetch consumers can pass `per_page=-1`; this middleware will\n * then recursively assemble a full response array from all available pages.\n *\n * @type {import('../types').APIFetchMiddleware}\n */\n\n\nconst fetchAllMiddleware = async (options, next) => {\n  if (options.parse === false) {\n    // If a consumer has opted out of parsing, do not apply middleware.\n    return next(options);\n  }\n\n  if (!requestContainsUnboundedQuery(options)) {\n    // If neither url nor path is requesting all items, do not apply middleware.\n    return next(options);\n  } // Retrieve requested page of results.\n\n\n  const response = await apiFetch({ ...modifyQuery(options, {\n      per_page: 100\n    }),\n    // Ensure headers are returned for page 1.\n    parse: false\n  });\n  const results = await parseResponse(response);\n\n  if (!Array.isArray(results)) {\n    // We have no reliable way of merging non-array results.\n    return results;\n  }\n\n  let nextPage = getNextPageUrl(response);\n\n  if (!nextPage) {\n    // There are no further pages to request.\n    return results;\n  } // Iteratively fetch all remaining pages until no \"next\" header is found.\n\n\n  let mergedResults =\n  /** @type {any[]} */\n  [].concat(results);\n\n  while (nextPage) {\n    const nextResponse = await apiFetch({ ...options,\n      // Ensure the URL for the next page is used instead of any provided path.\n      path: undefined,\n      url: nextPage,\n      // Ensure we still get headers so we can identify the next page.\n      parse: false\n    });\n    const nextResults = await parseResponse(nextResponse);\n    mergedResults = mergedResults.concat(nextResults);\n    nextPage = getNextPageUrl(nextResponse);\n  }\n\n  return mergedResults;\n};\n\nexport default fetchAllMiddleware;\n//# sourceMappingURL=fetch-all-middleware.js.map","/**\n * Set of HTTP methods which are eligible to be overridden.\n *\n * @type {Set<string>}\n */\nconst OVERRIDE_METHODS = new Set(['PATCH', 'PUT', 'DELETE']);\n/**\n * Default request method.\n *\n * \"A request has an associated method (a method). Unless stated otherwise it\n * is `GET`.\"\n *\n * @see  https://fetch.spec.whatwg.org/#requests\n *\n * @type {string}\n */\n\nconst DEFAULT_METHOD = 'GET';\n/**\n * API Fetch middleware which overrides the request method for HTTP v1\n * compatibility leveraging the REST API X-HTTP-Method-Override header.\n *\n * @type {import('../types').APIFetchMiddleware}\n */\n\nconst httpV1Middleware = (options, next) => {\n  const {\n    method = DEFAULT_METHOD\n  } = options;\n\n  if (OVERRIDE_METHODS.has(method.toUpperCase())) {\n    options = { ...options,\n      headers: { ...options.headers,\n        'X-HTTP-Method-Override': method,\n        'Content-Type': 'application/json'\n      },\n      method: 'POST'\n    };\n  }\n\n  return next(options);\n};\n\nexport default httpV1Middleware;\n//# sourceMappingURL=http-v1.js.map","/**\n * WordPress dependencies\n */\nimport { addQueryArgs, hasQueryArg } from '@wordpress/url';\n/**\n * @type {import('../types').APIFetchMiddleware}\n */\n\nconst userLocaleMiddleware = (options, next) => {\n  if (typeof options.url === 'string' && !hasQueryArg(options.url, '_locale')) {\n    options.url = addQueryArgs(options.url, {\n      _locale: 'user'\n    });\n  }\n\n  if (typeof options.path === 'string' && !hasQueryArg(options.path, '_locale')) {\n    options.path = addQueryArgs(options.path, {\n      _locale: 'user'\n    });\n  }\n\n  return next(options);\n};\n\nexport default userLocaleMiddleware;\n//# sourceMappingURL=user-locale.js.map","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n/**\n * Parses the apiFetch response.\n *\n * @param {Response} response\n * @param {boolean}  shouldParseResponse\n *\n * @return {Promise<any> | null | Response} Parsed response.\n */\n\nconst parseResponse = function (response) {\n  let shouldParseResponse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (shouldParseResponse) {\n    if (response.status === 204) {\n      return null;\n    }\n\n    return response.json ? response.json() : Promise.reject(response);\n  }\n\n  return response;\n};\n/**\n * Calls the `json` function on the Response, throwing an error if the response\n * doesn't have a json function or if parsing the json itself fails.\n *\n * @param {Response} response\n * @return {Promise<any>} Parsed response.\n */\n\n\nconst parseJsonAndNormalizeError = response => {\n  const invalidJsonError = {\n    code: 'invalid_json',\n    message: __('The response is not a valid JSON response.')\n  };\n\n  if (!response || !response.json) {\n    throw invalidJsonError;\n  }\n\n  return response.json().catch(() => {\n    throw invalidJsonError;\n  });\n};\n/**\n * Parses the apiFetch response properly and normalize response errors.\n *\n * @param {Response} response\n * @param {boolean}  shouldParseResponse\n *\n * @return {Promise<any>} Parsed response.\n */\n\n\nexport const parseResponseAndNormalizeError = function (response) {\n  let shouldParseResponse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  return Promise.resolve(parseResponse(response, shouldParseResponse)).catch(res => parseAndThrowError(res, shouldParseResponse));\n};\n/**\n * Parses a response, throwing an error if parsing the response fails.\n *\n * @param {Response} response\n * @param {boolean}  shouldParseResponse\n * @return {Promise<any>} Parsed response.\n */\n\nexport function parseAndThrowError(response) {\n  let shouldParseResponse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (!shouldParseResponse) {\n    throw response;\n  }\n\n  return parseJsonAndNormalizeError(response).then(error => {\n    const unknownError = {\n      code: 'unknown_error',\n      message: __('An unknown error occurred.')\n    };\n    throw error || unknownError;\n  });\n}\n//# sourceMappingURL=response.js.map","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n/**\n * Internal dependencies\n */\n\nimport { parseAndThrowError, parseResponseAndNormalizeError } from '../utils/response';\n/**\n * @param {import('../types').APIFetchOptions} options\n * @return {boolean} True if the request is for media upload.\n */\n\nfunction isMediaUploadRequest(options) {\n  const isCreateMethod = !!options.method && options.method === 'POST';\n  const isMediaEndpoint = !!options.path && options.path.indexOf('/wp/v2/media') !== -1 || !!options.url && options.url.indexOf('/wp/v2/media') !== -1;\n  return isMediaEndpoint && isCreateMethod;\n}\n/**\n * Middleware handling media upload failures and retries.\n *\n * @type {import('../types').APIFetchMiddleware}\n */\n\n\nconst mediaUploadMiddleware = (options, next) => {\n  if (!isMediaUploadRequest(options)) {\n    return next(options);\n  }\n\n  let retries = 0;\n  const maxRetries = 5;\n  /**\n   * @param {string} attachmentId\n   * @return {Promise<any>} Processed post response.\n   */\n\n  const postProcess = attachmentId => {\n    retries++;\n    return next({\n      path: `/wp/v2/media/${attachmentId}/post-process`,\n      method: 'POST',\n      data: {\n        action: 'create-image-subsizes'\n      },\n      parse: false\n    }).catch(() => {\n      if (retries < maxRetries) {\n        return postProcess(attachmentId);\n      }\n\n      next({\n        path: `/wp/v2/media/${attachmentId}?force=true`,\n        method: 'DELETE'\n      });\n      return Promise.reject();\n    });\n  };\n\n  return next({ ...options,\n    parse: false\n  }).catch(response => {\n    const attachmentId = response.headers.get('x-wp-upload-attachment-id');\n\n    if (response.status >= 500 && response.status < 600 && attachmentId) {\n      return postProcess(attachmentId).catch(() => {\n        if (options.parse !== false) {\n          return Promise.reject({\n            code: 'post_process',\n            message: __('Media upload failed. If this is a photo or a large image, please scale it down and try again.')\n          });\n        }\n\n        return Promise.reject(response);\n      });\n    }\n\n    return parseAndThrowError(response, options.parse);\n  }).then(response => parseResponseAndNormalizeError(response, options.parse));\n};\n\nexport default mediaUploadMiddleware;\n//# sourceMappingURL=media-upload.js.map","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n/**\n * Internal dependencies\n */\n\nimport createNonceMiddleware from './middlewares/nonce';\nimport createRootURLMiddleware from './middlewares/root-url';\nimport createPreloadingMiddleware from './middlewares/preloading';\nimport fetchAllMiddleware from './middlewares/fetch-all-middleware';\nimport namespaceEndpointMiddleware from './middlewares/namespace-endpoint';\nimport httpV1Middleware from './middlewares/http-v1';\nimport userLocaleMiddleware from './middlewares/user-locale';\nimport mediaUploadMiddleware from './middlewares/media-upload';\nimport { parseResponseAndNormalizeError, parseAndThrowError } from './utils/response';\n/**\n * Default set of header values which should be sent with every request unless\n * explicitly provided through apiFetch options.\n *\n * @type {Record<string, string>}\n */\n\nconst DEFAULT_HEADERS = {\n  // The backend uses the Accept header as a condition for considering an\n  // incoming request as a REST request.\n  //\n  // See: https://core.trac.wordpress.org/ticket/44534\n  Accept: 'application/json, */*;q=0.1'\n};\n/**\n * Default set of fetch option values which should be sent with every request\n * unless explicitly provided through apiFetch options.\n *\n * @type {Object}\n */\n\nconst DEFAULT_OPTIONS = {\n  credentials: 'include'\n};\n/** @typedef {import('./types').APIFetchMiddleware} APIFetchMiddleware */\n\n/** @typedef {import('./types').APIFetchOptions} APIFetchOptions */\n\n/**\n * @type {import('./types').APIFetchMiddleware[]}\n */\n\nconst middlewares = [userLocaleMiddleware, namespaceEndpointMiddleware, httpV1Middleware, fetchAllMiddleware];\n/**\n * Register a middleware\n *\n * @param {import('./types').APIFetchMiddleware} middleware\n */\n\nfunction registerMiddleware(middleware) {\n  middlewares.unshift(middleware);\n}\n/**\n * Checks the status of a response, throwing the Response as an error if\n * it is outside the 200 range.\n *\n * @param {Response} response\n * @return {Response} The response if the status is in the 200 range.\n */\n\n\nconst checkStatus = response => {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  throw response;\n};\n/** @typedef {(options: import('./types').APIFetchOptions) => Promise<any>} FetchHandler*/\n\n/**\n * @type {FetchHandler}\n */\n\n\nconst defaultFetchHandler = nextOptions => {\n  const {\n    url,\n    path,\n    data,\n    parse = true,\n    ...remainingOptions\n  } = nextOptions;\n  let {\n    body,\n    headers\n  } = nextOptions; // Merge explicitly-provided headers with default values.\n\n  headers = { ...DEFAULT_HEADERS,\n    ...headers\n  }; // The `data` property is a shorthand for sending a JSON body.\n\n  if (data) {\n    body = JSON.stringify(data);\n    headers['Content-Type'] = 'application/json';\n  }\n\n  const responsePromise = window.fetch( // Fall back to explicitly passing `window.location` which is the behavior if `undefined` is passed.\n  url || path || window.location.href, { ...DEFAULT_OPTIONS,\n    ...remainingOptions,\n    body,\n    headers\n  });\n  return responsePromise.then(value => Promise.resolve(value).then(checkStatus).catch(response => parseAndThrowError(response, parse)).then(response => parseResponseAndNormalizeError(response, parse)), err => {\n    // Re-throw AbortError for the users to handle it themselves.\n    if (err && err.name === 'AbortError') {\n      throw err;\n    } // Otherwise, there is most likely no network connection.\n    // Unfortunately the message might depend on the browser.\n\n\n    throw {\n      code: 'fetch_error',\n      message: __('You are probably offline.')\n    };\n  });\n};\n/** @type {FetchHandler} */\n\n\nlet fetchHandler = defaultFetchHandler;\n/**\n * Defines a custom fetch handler for making the requests that will override\n * the default one using window.fetch\n *\n * @param {FetchHandler} newFetchHandler The new fetch handler\n */\n\nfunction setFetchHandler(newFetchHandler) {\n  fetchHandler = newFetchHandler;\n}\n/**\n * @template T\n * @param {import('./types').APIFetchOptions} options\n * @return {Promise<T>} A promise representing the request processed via the registered middlewares.\n */\n\n\nfunction apiFetch(options) {\n  // creates a nested function chain that calls all middlewares and finally the `fetchHandler`,\n  // converting `middlewares = [ m1, m2, m3 ]` into:\n  // ```\n  // opts1 => m1( opts1, opts2 => m2( opts2, opts3 => m3( opts3, fetchHandler ) ) );\n  // ```\n  const enhancedHandler = middlewares.reduceRight((\n  /** @type {FetchHandler} */\n  next, middleware) => {\n    return workingOptions => middleware(workingOptions, next);\n  }, fetchHandler);\n  return enhancedHandler(options).catch(error => {\n    if (error.code !== 'rest_cookie_invalid_nonce') {\n      return Promise.reject(error);\n    } // If the nonce is invalid, refresh it and try again.\n\n\n    return window // @ts-ignore\n    .fetch(apiFetch.nonceEndpoint).then(checkStatus).then(data => data.text()).then(text => {\n      // @ts-ignore\n      apiFetch.nonceMiddleware.nonce = text;\n      return apiFetch(options);\n    });\n  });\n}\n\napiFetch.use = registerMiddleware;\napiFetch.setFetchHandler = setFetchHandler;\napiFetch.createNonceMiddleware = createNonceMiddleware;\napiFetch.createPreloadingMiddleware = createPreloadingMiddleware;\napiFetch.createRootURLMiddleware = createRootURLMiddleware;\napiFetch.fetchAllMiddleware = fetchAllMiddleware;\napiFetch.mediaUploadMiddleware = mediaUploadMiddleware;\nexport default apiFetch;\n//# sourceMappingURL=index.js.map","import apiFetch from '@wordpress/api-fetch';\nimport { __ } from '@wordpress/i18n';\nimport { addQueryArgs } from '@wordpress/url';\n\napiFetch.fetchAllMiddleware = null;\n\napiFetch.use(apiFetch.createRootURLMiddleware(window?.parent?.scData?.root_url || window?.scData?.root_url));\n\nif (window?.scData?.nonce) {\n  // @ts-ignore\n  apiFetch.nonceMiddleware = apiFetch.createNonceMiddleware(window?.scData?.nonce);\n  // @ts-ignore\n  apiFetch.use(apiFetch.nonceMiddleware);\n}\n\nif (window?.scData?.nonce_endpoint) {\n  // @ts-ignore\n  apiFetch.nonceEndpoint = window?.scData?.nonce_endpoint;\n}\n\n// Add a timestamp so it can bypass cache rest api\napiFetch.use((options, next) => {\n  options.path = addQueryArgs(options.path, { t: Date.now() });\n  return next(options);\n});\n\nexport default apiFetch;\n\n/**\n * Calls the `json` function on the Response, throwing an error if the response\n * doesn't have a json function or if parsing the json itself fails.\n *\n * @param {Response} response\n * @return {Promise<any>} Parsed response.\n */\nexport const parseJsonAndNormalizeError = response => {\n  const invalidJsonError = {\n    code: 'invalid_json',\n    message: __('The response is not a valid JSON response.', 'surecart'),\n  };\n\n  if (response?.code && response?.message) {\n    throw response;\n  }\n\n  if (!response || !response.json) {\n    throw invalidJsonError;\n  }\n\n  return response.json().catch(() => {\n    throw invalidJsonError;\n  });\n};\n\nexport const handleNonceError = async response => {\n  // need to parse the error response since we are bypassing the apiFetch middleware.\n  const error = await parseJsonAndNormalizeError(response);\n\n  if (error.code !== 'rest_cookie_invalid_nonce') {\n    // console.error(error);\n    throw error;\n  }\n\n  // If the nonce is invalid, refresh it and try again.\n  return (\n    window\n      // @ts-ignore\n      .fetch(apiFetch.nonceEndpoint)\n      .then(response => {\n        if (response.status >= 200 && response.status < 300) {\n          return response;\n        }\n        throw response;\n      })\n      .then(data => data.text())\n      .then(text => {\n        // @ts-ignore\n        apiFetch.nonceMiddleware.nonce = text;\n      })\n  );\n};\n"],"version":3}