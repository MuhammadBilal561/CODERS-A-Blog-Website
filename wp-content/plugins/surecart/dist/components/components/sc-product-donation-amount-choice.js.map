{"file":"sc-product-donation-amount-choice.js","mappings":";;;;;;AAAA,MAAM,gCAAgC,GAAG,EAAE;;;;;;;;;;;;;;;;;;;6OCmCvB,eAAO,CAAC,UAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["./src/components/controllers/checkout-form/product-donation-amount-choice/sc-product-donation-amount-choice.scss?tag=sc-product-donation-amount-choice","./src/components/controllers/checkout-form/product-donation-amount-choice/sc-product-donation-amount-choice.tsx"],"sourcesContent":["","import { Component, h, Prop, Element, Host } from '@stencil/core';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { isInRange } from '../../../../functions/util';\nimport { state as donationState } from '@store/product-donation';\nimport { updateDonationState as update } from '@store/product-donation/mutations';\nimport { getInRangeAmounts } from '@store/product-donation/getters';\n\n@Component({\n  tag: 'sc-product-donation-amount-choice',\n  styleUrl: 'sc-product-donation-amount-choice.scss',\n})\nexport class ScProductDonationAmountChoice {\n  @Element() el: HTMLScProductDonationAmountChoiceElement;\n  /** The product id for the fields. */\n  @Prop({ reflect: true }) productId: string;\n\n  /** The value of the field. */\n  @Prop() value: number;\n\n  /** The label for the field. */\n  @Prop() label: string;\n\n  state() {\n    return donationState[this.productId];\n  }\n\n  render() {\n    const amounts = getInRangeAmounts(this.productId);\n    const order = amounts.indexOf(this.value);\n    if (!isInRange(this.value, this.state().selectedPrice) || order < 0) return <Host style={{ display: 'none' }}></Host>;\n    return (\n      <sc-choice-container\n        show-control=\"false\"\n        checked={this.state().ad_hoc_amount === this.value}\n        onScChange={() => update(this.productId, { ad_hoc_amount: this.value, custom_amount: null })}\n        aria-label={sprintf(__('%s of %s', 'surecart'), order + 1, amounts.length)}\n        role=\"button\"\n      >\n        {this.label ? (\n          this.label\n        ) : (\n          <sc-format-number type=\"currency\" currency={this.state().selectedPrice?.currency} value={this.value} minimum-fraction-digits=\"0\"></sc-format-number>\n        )}\n      </sc-choice-container>\n    );\n  }\n}\n"],"version":3}