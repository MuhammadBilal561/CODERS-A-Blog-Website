{"file":"sc-login-provider2.js","mappings":";;;;;;;;;;;;AAAA,MAAM,kBAAkB,GAAG,sBAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wEC8EhB,UAAE;;;;;;;+LAWH,UAAE,gCACrB,UAAE,gHAOa,UAAE;;;kKAcC,UAAE,gIACF,UAAE,sKAEhB,UAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["./src/components/providers/sc-login-provider/sc-login-provider.css?tag=sc-login-provider&encapsulation=shadow","./src/components/providers/sc-login-provider/sc-login-provider.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n","import { Component, Prop, h, Watch, State, Host, Listen, Event, EventEmitter } from '@stencil/core';\nimport { __ } from '@wordpress/i18n';\nimport apiFetch from '../../../functions/fetch';\nimport { Checkout } from '../../../types';\n\n@Component({\n  tag: 'sc-login-provider',\n  styleUrl: 'sc-login-provider.css',\n  shadow: true,\n})\nexport class ScLoginProvider {\n  private loginForm: HTMLScFormElement;\n\n  /** Is the user logged in. */\n  @Prop() loggedIn: boolean;\n  @Prop() order: Checkout;\n\n  @Event() scSetLoggedIn: EventEmitter<boolean>;\n  @Event() scSetCustomer: EventEmitter<{ email: string; name?: string }>;\n\n  @State() notice: boolean;\n  @State() open: boolean;\n  @State() loading: boolean;\n  @State() error: string;\n\n  /** Listen for open event. */\n  @Listen('scLoginPrompt')\n  handleLoginPrompt() {\n    this.open = true;\n  }\n\n  /** Focus on first input. */\n  @Watch('open')\n  handleLoginDialogChange(val) {\n    if (val) {\n      setTimeout(() => {\n        this.loginForm.querySelector('sc-input').triggerFocus();\n      }, 100);\n    }\n  }\n\n  @Watch('loggedIn')\n  handleLoggedInChange(val, prev) {\n    if (prev === false && val) {\n      this.notice = true;\n    }\n  }\n\n  @Watch('order')\n  handleOrderChange(val, prev) {\n    if (val?.updated_at !== prev?.updated_at) {\n      this.notice = false;\n    }\n  }\n\n  /** Handle form submit. */\n  async handleFormSubmit(e) {\n    e.preventDefault();\n    e.stopImmediatePropagation();\n    this.error = null;\n\n    const { login, password } = await e.target.getFormJson();\n\n    try {\n      this.loading = true;\n      const { name, email } = (await apiFetch({\n        method: 'POST',\n        path: 'surecart/v1/login',\n        data: {\n          login,\n          password,\n        },\n      })) as { name: string; email: string };\n      this.scSetLoggedIn.emit(true);\n      this.scSetCustomer.emit({ name, email });\n      this.open = false;\n    } catch (e) {\n      console.error(e);\n      this.error = e?.message || __('Something went wrong', 'surecart');\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        {!!this.notice && (\n          <sc-alert type=\"success\" open style={{ marginBottom: 'var(--sc-form-row-spacing)' }} closable>\n            <span slot=\"title\">{__('Welcome back!', 'surecart')}</span>\n            {__('You have logged in successfully.', 'surecart')}\n          </sc-alert>\n        )}\n\n        <slot />\n\n        {!this.loggedIn && (\n          <sc-dialog label={__('Login to your account', 'surecart')} open={this.open} onScRequestClose={() => (this.open = false)}>\n            <sc-form\n              ref={el => (this.loginForm = el as HTMLScFormElement)}\n              onScFormSubmit={e => {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n              }}\n              onScSubmit={e => this.handleFormSubmit(e)}\n            >\n              {!!this.error && (\n                <sc-alert type=\"danger\" open={!!this.error}>\n                  {this.error}\n                </sc-alert>\n              )}\n              <sc-input label={__('Email or Username', 'surecart')} type=\"text\" name=\"login\" required autofocus={this.open}></sc-input>\n              <sc-input label={__('Password', 'surecart')} type=\"password\" name=\"password\" required></sc-input>\n              <sc-button type=\"primary\" full loading={this.loading} submit>\n                {__('Login', 'surecart')}\n              </sc-button>\n            </sc-form>\n          </sc-dialog>\n        )}\n      </Host>\n    );\n  }\n}\n"],"version":3}