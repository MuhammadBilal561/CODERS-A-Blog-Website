{"file":"consumer.js","mappings":";;AAAO,IAAI,qBAAqB,GAAG,YAAY;AAC/C,IAAI,IAAI,OAAO,CAAC;AAChB,IAAI,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,UAAU,GAAG,EAAE,EAAE,OAAO,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;AACjE,IAAI,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;AAClD,CAAC;;ACFS,IAAC,YAAY,GAAG,UAAU,SAAS,EAAE,KAAK,EAAE,UAAU,EAAE;AAClE,IAAI,IAAI,UAAU,KAAK,KAAK,CAAC,EAAE,EAAE,UAAU,GAAG,IAAI,CAAC,EAAE;AACrD,IAAI,IAAI,aAAa,IAAI,SAAS,CAAC,WAAW,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC;AACpE,IAAI,IAAI,KAAK,GAAG,aAAa,GAAG,SAAS,CAAC,SAAS,GAAG,SAAS,CAAC;AAChE,IAAI,IAAI,iBAAiB,GAAG,KAAK,CAAC,iBAAiB,CAAC;AACpD,IAAI,KAAK,CAAC,iBAAiB,GAAG,YAAY;AAC1C,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC;AACzB,QAAQ,IAAI,EAAE,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;AAClC,QAAQ,IAAI,MAAM,GAAG,qBAAqB,EAAE,CAAC;AAC7C,QAAQ,IAAI,KAAK,GAAG,IAAI,WAAW,CAAC,cAAc,EAAE;AACpD,YAAY,OAAO,EAAE,IAAI;AACzB,YAAY,QAAQ,EAAE,IAAI;AAC1B,YAAY,MAAM,EAAE;AACpB,gBAAgB,QAAQ,EAAE,IAAI;AAC9B,gBAAgB,MAAM,EAAE,KAAK;AAC7B,gBAAgB,OAAO,EAAE,UAAU,IAAI,EAAE,KAAK,EAAE;AAChD,oBAAoB,IAAI,MAAM,GAAG,CAAC,IAAI,IAAI,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC;AAC3D,oBAAoB,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;AACzC,iBAAiB;AACjB,gBAAgB,MAAM,EAAE,MAAM;AAC9B,aAAa;AACb,SAAS,CAAC,CAAC;AACX,QAAQ,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAChC,QAAQ,IAAI,QAAQ,GAAG,YAAY;AACnC,YAAY,IAAI,iBAAiB,EAAE;AACnC,gBAAgB,OAAO,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACrD,aAAa;AACb,SAAS,CAAC;AACV,QAAQ,OAAO,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,QAAQ,EAAE,CAAC,EAAE,CAAC,IAAI,QAAQ,EAAE,CAAC,CAAC;AACnG,KAAK,CAAC;AACN;;;;","names":[],"sources":["../../node_modules/stencil-wormhole/dist/esm/deferred.js","../../node_modules/stencil-wormhole/dist/esm/consumer.js"],"sourcesContent":["export var createDeferredPromise = function () {\n    var resolve;\n    var promise = new Promise(function (res) { resolve = res; });\n    return { promise: promise, resolve: resolve };\n};\n","import { getElement } from \"@stencil/core\";\nimport { createDeferredPromise } from \"./deferred\";\nexport var openWormhole = function (Component, props, isBlocking) {\n    if (isBlocking === void 0) { isBlocking = true; }\n    var isConstructor = (Component.constructor.name === 'Function');\n    var Proto = isConstructor ? Component.prototype : Component;\n    var componentWillLoad = Proto.componentWillLoad;\n    Proto.componentWillLoad = function () {\n        var _this = this;\n        var el = getElement(this);\n        var onOpen = createDeferredPromise();\n        var event = new CustomEvent('openWormhole', {\n            bubbles: true,\n            composed: true,\n            detail: {\n                consumer: this,\n                fields: props,\n                updater: function (prop, value) {\n                    var target = (prop in el) ? el : _this;\n                    target[prop] = value;\n                },\n                onOpen: onOpen,\n            },\n        });\n        el.dispatchEvent(event);\n        var willLoad = function () {\n            if (componentWillLoad) {\n                return componentWillLoad.call(_this);\n            }\n        };\n        return isBlocking ? onOpen.promise.then(function () { return willLoad(); }) : (willLoad());\n    };\n};\n"],"version":3}