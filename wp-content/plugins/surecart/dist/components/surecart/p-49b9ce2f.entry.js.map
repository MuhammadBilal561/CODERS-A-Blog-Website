{"version":3,"names":["scPasswordNagCss","wp","i18n","__","h","type","this","open","exportparts","style","position","error","set","class","slot","size","onClick","name","onScFormSubmit","e","handleSubmit","enableValidation","label","confirmation","ref","el","input","required","full","submit","busy","loading","Fragment","dismiss","spinner"],"sources":["./src/components/controllers/dashboard/sc-password-nag/sc-password-nag.css?tag=sc-password-nag&encapsulation=shadow","./src/components/controllers/dashboard/sc-password-nag/sc-password-nag.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n","import { Component, Fragment, h, Prop, State, Watch, Host } from '@stencil/core';\nimport apiFetch from '../../../../functions/fetch';\nimport { __ } from '@wordpress/i18n';\n\n@Component({\n  tag: 'sc-password-nag',\n  styleUrl: 'sc-password-nag.css',\n  shadow: true,\n})\nexport class ScPasswordNag {\n  private input: HTMLScPasswordElement;\n  @Prop({ mutable: true }) open: boolean = true;\n  /** The type of alert. */\n  @Prop({ reflect: true }) type: 'primary' | 'success' | 'info' | 'warning' | 'danger' = 'primary';\n  /** The success url. */\n  @Prop() successUrl: string;\n  /** Set a new password */\n  @State() set: boolean;\n  @State() loading: boolean;\n  @State() error: string;\n  @State() success: boolean;\n\n  /** Ensures strong password validation. */\n  @Prop({ reflect: true }) enableValidation = true;\n\n  @Watch('set')\n  handleSetChange() {\n    setTimeout(() => {\n      this.input && this.input.triggerFocus();\n    }, 50);\n  }\n\n  /** Dismiss the form. */\n  async dismiss() {\n    this.loading = true;\n    this.error = '';\n    try {\n      await apiFetch({\n        path: `wp/v2/users/me`,\n        method: 'PATCH',\n        data: {\n          meta: {\n            default_password_nag: false,\n          },\n        },\n      });\n      this.open = false;\n    } catch (e) {\n      this.error = e?.message || __('Something went wrong', 'surecart');\n      this.loading = false;\n    }\n  }\n\n  validatePassword(password: string) {\n    const regex = new RegExp('^(?=.*?[#?!@$%^&*-]).{6,}$');\n    if (regex.test(password)) return true;\n    return false;\n  }\n\n  /** Handle password submit. */\n  async handleSubmit(e) {\n    this.loading = true;\n    this.error = '';\n    try {\n      const { password } = await e.target.getFormJson();\n      await apiFetch({\n        path: `wp/v2/users/me`,\n        method: 'PATCH',\n        data: {\n          password,\n          meta: {\n            default_password_nag: false,\n          },\n        },\n      });\n      this.dismiss();\n      this.success = true;\n    } catch (e) {\n      this.error = e?.message || __('Something went wrong', 'surecart');\n      this.loading = false;\n    }\n  }\n\n  render() {\n    if (this.success) {\n      return (\n        <sc-alert type=\"success\" open>\n          <span slot=\"title\">{__('Success!', 'surecart')}</span>\n          {__('You have successfully set your password.', 'surecart')}\n        </sc-alert>\n      );\n    }\n\n    return (\n      <Host tabindex={0} aria-label={__('You have not yet set a password. Please set a password for your account.', 'surecart')}>\n        <sc-alert type={this.type} open={this.open} exportparts=\"base, icon, text, title, message, close-icon\" style={{ position: 'relative' }}>\n          {!!this.error && this.error}\n          {this.set ? (\n            <sc-dashboard-module class=\"customer-details\">\n              <span slot=\"heading\">{__('Set A Password', 'surecart')} </span>\n              <sc-button type=\"text\" size=\"small\" slot=\"end\" onClick={() => (this.set = false)}>\n                <sc-icon name=\"x\" slot=\"prefix\" />\n                {__('Cancel', 'surecart')}\n              </sc-button>\n              <sc-card>\n                <sc-form onScFormSubmit={e => this.handleSubmit(e)}>\n                  <sc-password\n                    enableValidation={this.enableValidation}\n                    label={__('New Password', 'surecart')}\n                    name=\"password\"\n                    confirmation={true}\n                    ref={el => (this.input = el as HTMLScPasswordElement)}\n                    required\n                  />\n                  <div>\n                    <sc-button type=\"primary\" full submit busy={this.loading}>\n                      {__('Set Password', 'surecart')}\n                    </sc-button>\n                  </div>\n                </sc-form>\n              </sc-card>\n            </sc-dashboard-module>\n          ) : (\n            <Fragment>\n              <slot name=\"title\" slot=\"title\">\n                {__('Reminder', 'surecart')}\n              </slot>\n              <slot>{__('You have not yet set a password. Please set a password for your account.', 'surecart')}</slot>\n              <sc-flex justify-content=\"flex-start\">\n                <sc-button size=\"small\" type=\"primary\" onClick={() => (this.set = true)}>\n                  {__('Set A Password', 'surecart')}\n                </sc-button>\n                <sc-button size=\"small\" type=\"text\" onClick={() => this.dismiss()}>\n                  {__('Dismiss', 'surecart')}\n                </sc-button>\n              </sc-flex>\n            </Fragment>\n          )}\n          {this.loading && <sc-block-ui spinner></sc-block-ui>}\n        </sc-alert>\n      </Host>\n    );\n  }\n}\n"],"mappings":"qHAAA,MAAMA,EAAmB,uB,8fCgDQC,GAAAC,KAAAC,GAAE,mC,0aA8BFF,GAAAC,KAAAC,GAAE,mC,qHASLF,GAAAC,KAAAC,GAAE,wBACrBF,GAAAC,KAAAC,GAAE,uD,qCAMwBF,GAAAC,KAAAC,GAAE,wFAAAC,EAAA,YAAAC,KAAAC,KAAAD,KAAAE,KAAAD,KAAAC,KAAAC,YAAA,+CAAAC,MAAA,CAAAC,SAAA,eAAAJ,KAAAK,OAAAL,KAAAK,MAAAL,KAAAM,IAAAR,EAAA,uBAAAS,MAAA,oBAAAT,EAAA,QAAAU,KAAA,WAKHb,GAAAC,KAAAC,GAAE,kCAAAC,EAAA,aAAAC,KAAA,OAAAU,KAAA,QAAAD,KAAA,MAAAE,QAAA,IAAAV,KAAAM,IAAA,OAAAR,EAAA,WAAAa,KAAA,IAAAH,KAAA,WAGrBb,GAAAC,KAAAC,GAAE,sBAAAC,EAAA,eAAAA,EAAA,WAAAc,eAAAC,GAAAb,KAAAc,aAAAD,IAAAf,EAAA,eAAAiB,iBAAAf,KAAAe,iBAAAC,MAMQrB,GAAAC,KAAAC,GAAE,2BAAAc,KAAA,WAAAM,aAAA,KAAAC,IAAAC,GAAAnB,KAAAoB,MAAAD,EAAAE,SAAA,OAAAvB,EAAA,WAAAA,EAAA,aAAAC,KAAA,UAAAuB,KAAA,KAAAC,OAAA,KAAAC,KAAAxB,KAAAyB,SAQN9B,GAAAC,KAAAC,GAAE,gCAAAC,EAAA4B,EAAA,KAAA5B,EAAA,QAAAa,KAAA,QAAAH,KAAA,SASRb,GAAAC,KAAAC,GAAE,wBAAAC,EAAA,YAEEH,GAAAC,KAAAC,GAAE,wFAAAC,EAAA,2CAAAA,EAAA,aAAAW,KAAA,QAAAV,KAAA,UAAAW,QAAA,IAAAV,KAAAM,IAAA,MAGJX,GAAAC,KAAAC,GAAE,8BAAAC,EAAA,aAAAW,KAAA,QAAAV,KAAA,OAAAW,QAAA,IAAAV,KAAA2B,WAGFhC,GAAAC,KAAAC,GAAE,yBAAAG,KAAAyB,SAAA3B,EAAA,eAAA8B,QAAA,Q"}