{"version":3,"names":["scUpsellSubmitButtonCss","ScUpsellSubmitButton","getUpsellProductId","_a","upsellState","product","id","async","e","preventDefault","accept","render","h","Host","class","isBusy","disabled","isProductOutOfStock","this","isSelectedVariantMissing","noticesState","code","onClick","handleAddToOrderClick"],"sources":["./src/components/controllers/upsell/sc-upsell-submit-button/sc-upsell-submit-button.scss?tag=sc-upsell-submit-button","./src/components/controllers/upsell/sc-upsell-submit-button/sc-upsell-submit-button.tsx"],"sourcesContent":["sc-upsell-submit-button {\n  position: relative;\n  display: block;\n\n  .wp-block-button__link {\n    position: relative;\n    text-decoration: none;\n\n    span {\n      sc-icon {\n        padding-right: var(--sc-spacing-small);\n      }\n    }\n\n    [data-text], sc-spinner {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n  }\n\n  .sc-block-button--sold-out,\n  .sc-block-button--unavailable {\n    display: none !important;\n  }\n\n  &.is-unavailable {\n    .sc-block-button__link {\n      display: none !important;\n    }\n    .sc-block-button--unavailable {\n      display: initial !important;\n    }\n  }\n\n  &.is-sold-out {\n    .sc-block-button__link {\n      display: none !important;\n    }\n    .sc-block-button--sold-out {\n      display: initial !important;\n    }\n  }\n\n  sc-spinner::part(base) {\n    --indicator-color: currentColor;\n    --spinner-size: 12px;\n    position: absolute;\n    top: calc(50% - var(--spinner-size) + (var(--spinner-size) / 4));\n    left: calc(50% - var(--spinner-size) + (var(--spinner-size) / 4));\n  }\n\n  [data-text],\n  [data-loader] {\n    transition: opacity var(--sc-transition-fast) ease-in-out, visibility var(--sc-transition-fast) ease-in-out;\n  }\n\n  [data-loader] {\n    opacity: 0;\n    visibility: hidden;\n  }\n\n  &.is-disabled {\n    pointer-events: none;\n  }\n\n  &.is-busy {\n    [data-text] {\n      opacity: 0;\n      visibility: hidden;\n    }\n    [data-loader] {\n      opacity: 1;\n      visibility: visible;\n    }\n  }\n\n  &.is-out-of-stock {\n    [data-text] {\n      opacity: 0.6;\n    }\n  }\n}\n","/**\n * External dependencies.\n */\nimport { Component, Element, h, Host } from '@stencil/core';\n\n/**\n * Internal dependencies.\n */\nimport { state as upsellState } from '@store/upsell';\nimport { state as noticesState } from '@store/notices';\nimport { isProductOutOfStock, isSelectedVariantMissing } from '@store/product/getters';\nimport { accept } from '@store/upsell/mutations';\nimport { isBusy } from '@store/upsell/getters';\n\n@Component({\n  tag: 'sc-upsell-submit-button',\n  styleUrl: 'sc-upsell-submit-button.scss',\n})\nexport class ScUpsellSubmitButton {\n  @Element() el: HTMLScUpsellSubmitButtonElement;\n\n  getUpsellProductId() {\n    return upsellState.product?.id || '';\n  }\n\n  async handleAddToOrderClick(e) {\n    e.preventDefault();\n    accept();\n  }\n\n  render() {\n    return (\n      <Host\n        class={{\n          'is-busy': isBusy(),\n          'is-disabled': upsellState.disabled,\n          // TODO: change this to out of stock error message.\n          'is-sold-out': (isProductOutOfStock(this.getUpsellProductId()) && !isSelectedVariantMissing(this.getUpsellProductId())) || noticesState?.code === 'out_of_stock',\n          'is-unavailable': isSelectedVariantMissing(this.getUpsellProductId()) || noticesState?.code === 'expired',\n        }}\n        onClick={e => this.handleAddToOrderClick(e)}\n      >\n        <slot />\n      </Host>\n    );\n  }\n}\n"],"mappings":"oeAAA,MAAMA,EAA0B,snD,MCkBnBC,EAAoB,M,yBAG/BC,qB,MACE,QAAOC,EAAAC,EAAYC,WAAO,MAAAF,SAAA,SAAAA,EAAEG,KAAM,E,CAGpCC,4BAA4BC,GAC1BA,EAAEC,iBACFC,G,CAGFC,SACE,OACEC,EAACC,EAAI,CACHC,MAAO,CACL,UAAWC,IACX,cAAeX,EAAYY,SAE3B,cAAgBC,EAAoBC,KAAKhB,wBAA0BiB,EAAyBD,KAAKhB,wBAA0BkB,IAAY,MAAZA,SAAY,SAAZA,EAAcC,QAAS,eAClJ,iBAAkBF,EAAyBD,KAAKhB,wBAAyBkB,IAAY,MAAZA,SAAY,SAAZA,EAAcC,QAAS,WAElGC,QAASd,GAAKU,KAAKK,sBAAsBf,IAEzCI,EAAA,a"}