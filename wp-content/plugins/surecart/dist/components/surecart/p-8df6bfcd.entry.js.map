{"version":3,"names":["ScConsumer","constructor","hostRef","this","setContext","async","context","promise","Promise","resolve","resolvePromise","componentWillLoad","mountEmitter","emit","disconnectedCallback","render","renderer"],"sources":["./src/components/context/consumer/sc-consumer.tsx"],"sourcesContent":["import { Component, Event, EventEmitter, Prop, State } from '@stencil/core';\n\n@Component({\n  tag: 'sc-consumer',\n})\nexport class ScConsumer {\n  @Prop() renderer: any;\n  @State() context: any;\n  @Event({ eventName: 'mountConsumer' }) mountEmitter: EventEmitter;\n  @State() promise: Promise<any>;\n  @State() resolvePromise: any;\n\n  constructor() {\n    this.promise = new Promise(resolve => {\n      this.resolvePromise = resolve;\n    });\n  }\n\n  setContext = async (context: any) => {\n    this.context = context;\n    return this.promise;\n  };\n\n  componentWillLoad() {\n    this.mountEmitter.emit(this.setContext);\n  }\n\n  disconnectedCallback() {\n    this.resolvePromise();\n  }\n\n  render() {\n    if (!this.context) {\n      return null;\n    }\n    return this.renderer(this.context);\n  }\n}\n"],"mappings":"iDAKaA,EAAU,MAOrBC,YAAAC,G,sDAMAC,KAAAC,WAAaC,MAAOC,IAClBH,KAAKG,QAAUA,EACf,OAAOH,KAAKI,OAAO,E,oGAPnBJ,KAAKI,QAAU,IAAIC,SAAQC,IACzBN,KAAKO,eAAiBD,CAAO,G,CASjCE,oBACER,KAAKS,aAAaC,KAAKV,KAAKC,W,CAG9BU,uBACEX,KAAKO,gB,CAGPK,SACE,IAAKZ,KAAKG,QAAS,CACjB,OAAO,I,CAET,OAAOH,KAAKa,SAASb,KAAKG,Q"}