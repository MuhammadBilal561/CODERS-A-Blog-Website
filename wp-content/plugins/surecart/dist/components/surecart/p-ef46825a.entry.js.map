{"version":3,"names":["scTabPanelCss","id","ScTabPanel","this","componentId","render","el","h","Host","style","display","active","part","class","role"],"sources":["./src/components/ui/tab-panel/sc-tab-panel.scss?tag=sc-tab-panel&encapsulation=shadow","./src/components/ui/tab-panel/sc-tab-panel.tsx"],"sourcesContent":[":host {\n  --padding: 0;\n  --spacing: var(--sc-spacing-large);\n  display: block;\n}\n::slotted(* ~ *) {\n  margin-top: var(--spacing);\n}\n\n.tab-panel {\n  border: solid 1px transparent;\n  padding: var(--padding);\n  font-family: var(--sc-font-sans);\n  font-size: var(--sc-font-size-medium);\n}\n","import { Component, Prop, h, Element, Host } from '@stencil/core';\nlet id = 0;\n@Component({\n  tag: 'sc-tab-panel',\n  styleUrl: 'sc-tab-panel.scss',\n  shadow: true,\n})\nexport class ScTabPanel {\n  @Element() el: HTMLElement;\n\n  private componentId = `tab-panel-${++id}`;\n\n  /** The tab panel's name. */\n  @Prop({ reflect: true }) name: string = '';\n\n  /** When true, the tab panel will be shown. */\n  @Prop({ reflect: true }) active: boolean = false;\n\n  render() {\n    // If the user didn't provide an ID, we'll set one so we can link tabs and tab panels with aria labels\n    this.el.id = this.el.id || this.componentId;\n\n    return (\n      <Host style={{ display: this.active ? 'block' : 'none' }}>\n        <div part=\"base\" class=\"tab-panel\" role=\"tabpanel\" aria-hidden={this.active ? 'false' : 'true'}>\n          <slot />\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"yDAAA,MAAMA,EAAgB,kPCCtB,IAAIC,EAAK,E,MAMIC,EAAU,M,yBAGbC,KAAAC,YAAc,eAAeH,I,UAGG,G,YAGG,K,CAE3CI,SAEEF,KAAKG,GAAGL,GAAKE,KAAKG,GAAGL,IAAME,KAAKC,YAEhC,OACEG,EAACC,EAAI,CAACC,MAAO,CAAEC,QAASP,KAAKQ,OAAS,QAAU,SAC9CJ,EAAA,OAAKK,KAAK,OAAOC,MAAM,YAAYC,KAAK,WAAU,cAAcX,KAAKQ,OAAS,QAAU,QACtFJ,EAAA,c"}