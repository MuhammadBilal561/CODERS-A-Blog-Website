{"version":3,"names":["currentCheckout","getCheckout","state","formId","mode","checkoutIsLocked","lockName","_a","locks","some","name","length","getLineItemByProductId","productId","_b","checkout","line_items","data","find","line_item","price","product","id","fullShippingAddressRequired","shipping_enabled","shipping_address_required","paymentMethodRequiresShipping","shippingAddressRequired","tax_status","_c","_d","tax_enabled","getCompleteAddress","type","isComplete","isAddressComplete","line_1","line1","line_2","line2","otherProps","shipping_address"],"sources":["./src/store/checkout/getters.ts"],"sourcesContent":["import { Product, Address } from 'src/types';\nimport { getCheckout } from '../checkouts/mutations';\nimport state from './store';\nimport { isAddressComplete } from 'src/functions/address';\n\n/**\n * Gets the current checkout for the page.\n */\nexport const currentCheckout = () => getCheckout(state.formId, state.mode);\n\n/**\n * Is the checkout currently locked.\n * Pass an optional lock name to find if a\n * specific lock name is locking checkout.\n */\nexport const checkoutIsLocked = (lockName = ''): boolean => (lockName ? state.locks.some(name => name === lockName) : !!state.locks?.length);\n\n/**\n * Get a line item by product id.\n */\nexport const getLineItemByProductId = (productId: string) => (state.checkout?.line_items?.data || []).find(line_item => (line_item?.price?.product as Product)?.id === productId);\n\n/**\n * Is the shipping address required?\n */\nexport const fullShippingAddressRequired = () => state.checkout?.shipping_enabled || state?.checkout?.shipping_address_required || state?.paymentMethodRequiresShipping;\n\n/**\n * Is the address required?\n */\nexport const shippingAddressRequired = () =>\n  state.checkout?.tax_status === 'address_invalid' ||\n  state.checkout?.shipping_enabled ||\n  state.checkout?.shipping_address_required ||\n  state?.checkout?.tax_enabled ||\n  state?.paymentMethodRequiresShipping;\n\n/**\n * Get Billing address\n */\nexport const getCompleteAddress = (type = 'shipping') => {\n  const isComplete = isAddressComplete(state.checkout?.[`${type}_address`] as Address);\n  if (!isComplete) return;\n\n  const { line_1: line1, line_2: line2, ...otherProps } = (state.checkout?.shipping_address as Address) || {};\n\n  return {\n    line1,\n    line2,\n    ...otherProps,\n  };\n};\n"],"mappings":"qFAQaA,EAAkB,IAAMC,EAAYC,EAAMC,OAAQD,EAAME,M,MAOxDC,EAAmB,CAACC,EAAW,MAAE,IAAAC,EAAc,OAACD,EAAWJ,EAAMM,MAAMC,MAAKC,GAAQA,IAASJ,QAAcC,EAAAL,EAAMM,SAAK,MAAAD,SAAA,SAAAA,EAAEI,OAAM,E,MAK9HC,EAA0BC,IAAiB,IAAAN,EAAAO,EAAK,SAACA,GAAAP,EAAAL,EAAMa,YAAQ,MAAAR,SAAA,SAAAA,EAAES,cAAU,MAAAF,SAAA,SAAAA,EAAEG,OAAQ,IAAIC,MAAKC,IAAS,IAAAZ,EAAAO,EAAI,QAAAA,GAACP,EAAAY,IAAS,MAATA,SAAS,SAATA,EAAWC,SAAK,MAAAb,SAAA,SAAAA,EAAEc,WAAmB,MAAAP,SAAA,SAAAA,EAAEQ,MAAOT,CAAS,GAAC,E,MAKpKU,EAA8B,SAAAhB,EAAAO,EAAM,QAAAP,EAAAL,EAAMa,YAAQ,MAAAR,SAAA,SAAAA,EAAEiB,qBAAoBV,EAAAZ,IAAK,MAALA,SAAK,SAALA,EAAOa,YAAQ,MAAAD,SAAA,SAAAA,EAAEW,6BAA6BvB,IAAK,MAALA,SAAK,SAALA,EAAOwB,8BAA6B,E,MAK1JC,EAA0B,K,YACrC,QAAApB,EAAAL,EAAMa,YAAQ,MAAAR,SAAA,SAAAA,EAAEqB,cAAe,qBAC/Bd,EAAAZ,EAAMa,YAAQ,MAAAD,SAAA,SAAAA,EAAEU,qBAChBK,EAAA3B,EAAMa,YAAQ,MAAAc,SAAA,SAAAA,EAAEJ,8BAChBK,EAAA5B,IAAK,MAALA,SAAK,SAALA,EAAOa,YAAQ,MAAAe,SAAA,SAAAA,EAAEC,eACjB7B,IAAK,MAALA,SAAK,SAALA,EAAOwB,8BAA6B,E,MAKzBM,EAAqB,CAACC,EAAO,c,QACxC,MAAMC,EAAaC,GAAkB5B,EAAAL,EAAMa,YAAQ,MAAAR,SAAA,SAAAA,EAAG,GAAG0B,cACzD,IAAKC,EAAY,OAEjB,MAAQE,OAAQC,EAAOC,OAAQC,KAAUC,KAAgB1B,EAAAZ,EAAMa,YAAQ,MAAAD,SAAA,SAAAA,EAAE2B,mBAAgC,GAEzG,MAAO,CACLJ,QACAE,WACGC,EACJ,S"}