{"version":3,"names":["set","obj","prop","value","propToArray","toString","setPropImmutableRec","i","clone","head","length","Array","isArray","getArrayIndex","slice","Object","assign","undefined","get","_delete","deletePropImmutableRec","concat","toggle","curVal","Boolean","merge","val","merged","Math","max","test","Error","parseInt","split","reduce","ret","el","index","list","last","prev","pop","push","lib","delete","scOrderDetailCss","ScSessionDetail","getPropByPath","object","path","defaultValue","this","shift","getValue","dotProp","_a","order","metadata","h","type","currency","_b","render","loading","part","class","style","width","height","display","fallback","name","label","openWormhole"],"sources":["../../node_modules/dot-prop-immutable/lib/index.js","./src/components/controllers/confirmation/order-detail/sc-order-detail.scss?tag=sc-order-detail&encapsulation=shadow","./src/components/controllers/confirmation/order-detail/sc-order-detail.tsx"],"sourcesContent":["/**\n * Set a value by a dot path.\n * @param obj The object to evaluate.\n * @param prop The path to be set.\n * @param value The value to set.\n */\nfunction set(obj, prop, value) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tconst setPropImmutableRec = (obj, prop, value, i) => {\n\t\tlet clone, head = prop[i];\n\n\t\tif (prop.length > i) {\n\t\t\tif (Array.isArray(obj)) {\n\t\t\t\thead = getArrayIndex(head, obj);\n\t\t\t\tclone = obj.slice();\n\t\t\t} else {\n\t\t\t\tclone = Object.assign({}, obj);\n\t\t\t}\n\t\t\tclone[head] = setPropImmutableRec(obj[head] !== undefined ? obj[head] : {}, prop, value, i + 1);\n\t\t\treturn clone;\n\t\t}\n\n\t\treturn typeof value === 'function' ? value(obj) : value;\n\t};\n\n\treturn setPropImmutableRec(obj, prop, value, 0);\n}\n\n/**\n * Get a value by a dot path.\n * @param obj The object to evaluate.\n * @param prop The path to value that should be returned.\n * @param [value] The default value that should be returned when the target doesn't exist.\n */\nfunction get(obj, prop, value) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tfor (var i = 0; i < prop.length; i++) {\n\t\tif (obj === null || typeof obj !== 'object') {\n\t\t\treturn value;\n\t\t}\n\t\tlet head = prop[i];\n\t\tif (Array.isArray(obj) && head === '$end') {\n\t\t\thead = obj.length - 1;\n\t\t}\n\t\tobj = obj[head];\n\t}\n\n\tif (typeof obj === 'undefined') {\n\t\treturn value;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Delete a property by a dot path.\n * If target container is an object, the property is deleted.\n * If target container is an array, the index is deleted.\n * If target container is undefined, nothing is deleted.\n * @param obj The object to evaluate.\n * @param prop The path to the property or index that should be deleted.\n */\nfunction _delete(obj, prop) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tconst deletePropImmutableRec = (obj, prop, i) => {\n\t\tlet clone, head = prop[i];\n\n\t\tif (obj === null || typeof obj !== 'object' ||\n\t\t\t!Array.isArray(obj) && obj[head] === undefined) {\n\n\t\t\treturn obj;\n\t\t}\n\n\t\tif (prop.length - 1 > i) {\n\t\t\tif (Array.isArray(obj)) {\n\t\t\t\thead = getArrayIndex(head, obj);\n\t\t\t\tclone = obj.slice();\n\t\t\t} else {\n\t\t\t\tclone = Object.assign({}, obj);\n\t\t\t}\n\n\t\t\tclone[head] = deletePropImmutableRec(obj[head], prop, i + 1);\n\t\t\treturn clone;\n\t\t}\n\n\t\tif (Array.isArray(obj)) {\n\t\t\thead = getArrayIndex(head, obj);\n\t\t\tclone = [].concat(obj.slice(0, head), obj.slice(head + 1));\n\t\t} else {\n\t\t\tclone = Object.assign({}, obj);\n\t\t\tdelete clone[head];\n\t\t}\n\n\t\treturn clone;\n\t};\n\n\treturn deletePropImmutableRec(obj, prop, 0);\n}\n\n/**\n * Toggles a value.  The target value is evaluated using Boolean(currentValue).  The result will always be a JSON boolean.\n * Be careful with strings as target value, as \"true\" and \"false\" will toggle to false, but \"0\" will toggle to true.\n * Here is what Javascript considers false:  0, -0, null, false, NaN, undefined, and the empty string (\"\")\n * @param obj The object to evaluate.\n * @param prop The path to the value.\n */\nfunction toggle(obj, prop) {\n\tconst curVal = get(obj, prop);\n\treturn set(obj, prop, !Boolean(curVal));\n}\n\n/**\n * Merges a value.  The target value must be an object, array, null, or undefined.\n * If target is an object, Object.assign({}, target, param) is used.\n * If target an array, target.concat(param) is used.\n * If target is null or undefined, the value is simply set.\n * @param obj The object to evaluate.\n * @param prop The path to the value.\n * @param val The value to merge into the target value.\n */\nfunction merge(obj, prop, val) {\n\tconst curVal = get(obj, prop);\n\tif (typeof curVal === 'object') {\n\t\tif (Array.isArray(curVal)) {\n\t\t\treturn set(obj, prop, curVal.concat(val));\n\t\t} else if (curVal === null) {\n\t\t\treturn set(obj, prop, val);\n\t\t}\n\t\telse {\n\t\t\tlet merged = Object.assign({}, curVal, val);\n\t\t\treturn set(obj, prop, merged);\n\t\t}\n\t} else if (typeof curVal === 'undefined') {\n\t\treturn set(obj, prop, val);\n\t}\n\telse {\n\t\treturn obj;\n\t}\n}\n\nfunction getArrayIndex(head, obj) {\n\tif (head === '$end') {\n\t\thead = Math.max(obj.length - 1, 0);\n\t}\n\tif (!/^\\+?\\d+$/.test(head)) {\n\t\tthrow new Error(`Array index '${head}' has to be an integer`);\n\t}\n\treturn parseInt(head);\n}\n\nfunction propToArray(prop) {\n\treturn prop.split('.').reduce((ret, el, index, list) => {\n\t\tconst last = index > 0 && list[index - 1];\n\t\tif (last && /(?:^|[^\\\\])\\\\$/.test(last)) {\n\t\t\tconst prev = ret.pop();\n\t\t\tret.push(prev.slice(0, -1) + '.' + el);\n\t\t} else {\n\t\t\tret.push(el);\n\t\t}\n\t\treturn ret;\n\t}, []);\n}\n\nmodule.exports = {\n\tset,\n\tget,\n\tdelete: _delete,\n\ttoggle,\n\tmerge\n};\n",":host {\n  display: block;\n}\n\n.order-detail__value {\n  display: block;\n  font-weight: var(--sc-font-weight-semibold);\n  line-height: var(--sc-line-height-dense);\n}\n\n.order-detail__label {\n  display: block;\n  color: var(--sc-color-gray-500);\n  line-height: var(--sc-line-height-dense);\n}\n","import { Checkout } from '../../../../types';\nimport { Component, h, Prop } from '@stencil/core';\nimport dotProp from 'dot-prop-immutable';\nimport { openWormhole } from 'stencil-wormhole';\n\n@Component({\n  tag: 'sc-order-detail',\n  styleUrl: 'sc-order-detail.scss',\n  shadow: true,\n})\nexport class ScSessionDetail {\n  @Prop() order: Checkout;\n  @Prop() value: string;\n  @Prop() fallback: string;\n  @Prop() metaKey: string;\n  @Prop() loading: boolean;\n  @Prop() label: string;\n\n  getPropByPath(object, path, defaultValue) {\n    if (object && path.length) return this.getPropByPath(object[path.shift()], path, defaultValue);\n    return object === undefined ? defaultValue : object;\n  }\n\n  getValue() {\n    if (!this.value) {\n      return;\n    }\n\n    let value = '';\n\n    // get metadata value\n    if (this.value === 'metadata') {\n      return dotProp.get(this?.order?.metadata, this.value || '');\n    }\n\n    // get value\n    value = dotProp.get(this?.order, this.value || '');\n\n    // if number, format it\n    if (typeof value === 'number') {\n      value = <sc-format-number type=\"currency\" currency={this?.order?.currency} value={value}></sc-format-number>;\n    }\n\n    return value;\n  }\n\n  render() {\n    if (this.loading) {\n      return (\n        <div\n          part=\"base\"\n          class={{\n            'order-detail': true,\n          }}\n        >\n          <span part=\"label\" class=\"order-detail__label\">\n            <sc-skeleton style={{ width: '60px', height: '8px', display: 'inline-block' }}></sc-skeleton>\n          </span>\n          <span part=\"value\" class=\"order-detail__value\">\n            <sc-skeleton style={{ width: '120px', display: 'inline-block' }}></sc-skeleton>\n          </span>\n        </div>\n      );\n    }\n\n    const value = this.getValue();\n    if (!value) {\n      if (!this.fallback) {\n        return;\n      }\n    }\n\n    return (\n      <div\n        part=\"base\"\n        class={{\n          'order-detail': true,\n        }}\n      >\n        <span part=\"label\" class=\"order-detail__label\">\n          <slot name=\"label\">{this.label}</slot>\n        </span>\n        <span part=\"value\" class=\"order-detail__value\">\n          <slot name=\"value\">{value || this.fallback}</slot>\n        </span>\n      </div>\n    );\n  }\n}\n\nopenWormhole(ScSessionDetail, ['order', 'loading'], false);\n"],"mappings":"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"}