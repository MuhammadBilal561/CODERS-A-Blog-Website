{"version":3,"names":["scAvatarCss","ScAvatar","handleImageChange","this","hasError","render","h","part","class","avatar","shape","role","label","initials","name","library","image","src","loading","alt","onError"],"sources":["./src/components/ui/sc-avatar/sc-avatar.css?tag=sc-avatar&encapsulation=shadow","./src/components/ui/sc-avatar/sc-avatar.tsx"],"sourcesContent":[":host {\n  display: inline-block;\n  --sc-avatar-size: 3rem;\n}\n.avatar {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  width: var(--sc-avatar-size);\n  height: var(--sc-avatar-size);\n  background-color: var(--sc-color-gray-400);\n  font-family: var(--sc-font-sans);\n  font-size: calc(var(--sc-avatar-size) * 0.5);\n  font-weight: var(--sc-font-weight-normal);\n  color: var(--sc-color-white);\n  user-select: none;\n  vertical-align: middle;\n}\n.avatar--circle,\n.avatar--circle .avatar__image {\n  border-radius: var(--sc-border-radius-circle);\n}\n.avatar--rounded,\n.avatar--rounded .avatar__image {\n  border-radius: var(--sc-border-radius-medium);\n}\n.avatar--square {\n  border-radius: 0;\n}\n.avatar__icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n.avatar__initials {\n  line-height: 1;\n  text-transform: uppercase;\n}\n.avatar__image {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  overflow: hidden;\n}\n","import { Component, h, State, Prop, Watch } from '@stencil/core';\n\n@Component({\n  tag: 'sc-avatar',\n  styleUrl: 'sc-avatar.css',\n  shadow: true,\n})\nexport class ScAvatar {\n  @State() private hasError = false;\n\n  /** The image source to use for the avatar. */\n  @Prop() image = '';\n\n  /** A label to use to describe the avatar to assistive devices. */\n  @Prop() label = '';\n\n  /** Initials to use as a fallback when no image is available (1-2 characters max recommended). */\n  @Prop() initials = '';\n\n  /** Indicates how the browser should load the image. */\n  @Prop() loading: 'eager' | 'lazy' = 'eager';\n\n  /** The shape of the avatar. */\n  @Prop({ reflect: true }) shape: 'circle' | 'square' | 'rounded' = 'circle';\n\n  @Watch('image')\n  handleImageChange() {\n    // Reset the error when a new image is provided\n    this.hasError = false;\n  }\n\n  render() {\n    return (\n      <div\n        part=\"base\"\n        class={{\n          'avatar': true,\n          'avatar--circle': this.shape === 'circle',\n          'avatar--rounded': this.shape === 'rounded',\n          'avatar--square': this.shape === 'square',\n        }}\n        role=\"img\"\n        aria-label={this.label}\n      >\n        {this.initials ? (\n          <div part=\"initials\" class=\"avatar__initials\">\n            {this.initials}\n          </div>\n        ) : (\n          <div part=\"icon\" class=\"avatar__icon\" aria-hidden=\"true\">\n            <slot name=\"icon\">\n              <sl-icon name=\"person-fill\" library=\"system\"></sl-icon>\n            </slot>\n          </div>\n        )}\n        {this.image && !this.hasError && <img part=\"image\" class=\"avatar__image\" src={this.image} loading={this.loading} alt=\"\" onError={() => (this.hasError = true)} />}\n      </div>\n    );\n  }\n}\n"],"mappings":"2CAAA,MAAMA,EAAc,25B,MCOPC,EAAQ,M,uCACS,M,WAGZ,G,WAGA,G,cAGG,G,aAGiB,Q,WAG8B,Q,CAGlEC,oBAEEC,KAAKC,SAAW,K,CAGlBC,SACE,OACEC,EAAA,OACEC,KAAK,OACLC,MAAO,CACLC,OAAU,KACV,iBAAkBN,KAAKO,QAAU,SACjC,kBAAmBP,KAAKO,QAAU,UAClC,iBAAkBP,KAAKO,QAAU,UAEnCC,KAAK,MAAK,aACER,KAAKS,OAEhBT,KAAKU,SACJP,EAAA,OAAKC,KAAK,WAAWC,MAAM,oBACxBL,KAAKU,UAGRP,EAAA,OAAKC,KAAK,OAAOC,MAAM,eAAc,cAAa,QAChDF,EAAA,QAAMQ,KAAK,QACTR,EAAA,WAASQ,KAAK,cAAcC,QAAQ,aAIzCZ,KAAKa,QAAUb,KAAKC,UAAYE,EAAA,OAAKC,KAAK,QAAQC,MAAM,gBAAgBS,IAAKd,KAAKa,MAAOE,QAASf,KAAKe,QAASC,IAAI,GAAGC,QAAS,IAAOjB,KAAKC,SAAW,O"}