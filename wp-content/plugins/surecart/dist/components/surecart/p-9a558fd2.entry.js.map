{"version":3,"names":["scSwitchCss","id","ScSwitch","this","switchId","labelId","async","invalid","input","checkValidity","reportValidity","handleClick","checked","scChange","emit","handleBlur","hasFocus","scBlur","handleFocus","scFocus","handleKeyDown","event","edit","key","preventDefault","handleMouseDown","focus","handleCheckedChange","componentDidLoad","formController","FormSubmitController","el","value","control","undefined","addFormData","hasDescription","querySelector","disconnectedCallback","_a","removeFormData","render","Tag","h","part","htmlFor","class","switch","required","disabled","reversed","onMouseDown","e","ref","type","role","name","onClick","onBlur","onFocus","onKeyDown"],"sources":["./src/components/ui/switch/sc-switch.scss?tag=sc-switch&encapsulation=shadow","./src/components/ui/switch/sc-switch.tsx"],"sourcesContent":["/**\n * @prop --width: The width of the switch.\n * @prop --height: The height of the switch.\n * @prop --thumb-size: The size of the thumb.\n */\n:host {\n  --height: var(--sc-toggle-size);\n  --thumb-size: calc(var(--sc-toggle-size) - 2px);\n  --width: calc(var(--height) * 2);\n\n  display: block;\n}\n\n.switch {\n  display: inline-flex;\n  align-items: flex-start;\n  gap: 0.7em;\n  font-family: var(--sc-input-font-family);\n  font-size: var(--sc-input-font-size-medium);\n  font-weight: var(--sc-input-font-weight);\n  color: var(--sc-input-color);\n  vertical-align: middle;\n  cursor: pointer;\n\n  &--reversed {\n    flex-direction: row-reverse;\n  }\n}\n\n.switch--editing {\n  cursor: initial;\n}\n\n.switch__control {\n  flex: 0 0 auto;\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: var(--width);\n  height: var(--height);\n  background-color: var(--sc-switch-control-background-color, var(--sc-color-gray-300));\n  border: solid var(--sc-input-border-width) var(--sc-switch-border-color, var(--sc-color-gray-300));\n  border-radius: var(--height);\n  transition: var(--sc-input-transition, var(--sc-transition-medium)) border-color, var(--sc-input-transition, var(--sc-transition-medium)) background-color;\n\n  .switch__thumb {\n    width: var(--thumb-size);\n    height: var(--thumb-size);\n    background-color: var(--sc-switch-thumb-background-color, var(--sc-color-white));\n    border-radius: 50%;\n    border: solid var(--sc-input-border-width) var(--sc-input-border-color);\n    transform: translateX(calc(var(--width) / -2 + var(--thumb-size) / 2 - (var(--thumb-size) - var(--height)) / 2));\n    transition: var(--sc-input-transition, var(--sc-transition-medium)) transform ease, var(--sc-input-transition, var(--sc-transition-medium)) background-color,\n      var(--sc-input-transition, var(--sc-transition-medium)) border-color, var(--sc-input-transition, var(--sc-transition-medium)) box-shadow;\n  }\n\n  input[type='checkbox'] {\n    position: absolute;\n    opacity: 0;\n    padding: 0;\n    margin: 0;\n    pointer-events: none;\n  }\n\n  &:has(:focus-visible) {\n    outline: 2px solid var(--sc-focus-ring-color-primary);\n    outline-offset: 2px;\n  }\n}\n\n// Hover\n.switch:not(.switch--checked):not(.switch--disabled) .switch__control:hover {\n  background-color: var(--sc-switch-control-hover-background-color, var(--sc-color-gray-200));\n  border-color: var(--sc-switch-control-hover-border-color, var(--sc-color-gray-200));\n\n  .switch__thumb {\n    background-color: var(--sc-switch-background-thumb-hover-color, var(--sc-color-white));\n    border-color: var(--sc-switch-thumb-border-color, var(--sc-input-border-color));\n  }\n}\n\n// Focus\n.switch.switch--focused:not(.switch--checked):not(.switch--disabled) .switch__control {\n  background-color: var(--sc-switch-control-hover-background-color, var(--sc-color-gray-200));\n  border-color: var(--sc-switch-control-hover-border-color, var(--sc-color-gray-200));\n\n  .switch__thumb {\n    background-color: var(--sc-color-white);\n    border-color: var(--sc-color-gray-300);\n    box-shadow: 0 0 0 1px var(--sc-color-gray-300);\n  }\n}\n\n// Checked\n.switch--checked .switch__control {\n  background-color: var(--sc-switch-checked-control-background-color, var(--sc-color-primary-500));\n  border-color: var(--sc-switch-checked-control-border-color, var(--sc-color-primary-500));\n\n  .switch__thumb {\n    background-color: var(--sc-color-white);\n    border-color: var(--sc-color-primary-500);\n    transform: translateX(calc(var(--width) / 2 - var(--thumb-size) / 2 + (var(--thumb-size) - var(--height)) / 2));\n  }\n}\n\n// Checked + hover\n.switch.switch--checked:not(.switch--disabled) .switch__control:hover {\n  opacity: 0.8;\n\n  .switch__thumb {\n    background-color: var(--sc-color-white);\n    border-color: var(--sc-color-primary-500);\n  }\n}\n\n// Checked + focus\n.switch.switch--checked:not(.switch--disabled).switch--focused .switch__control {\n  .switch__thumb {\n    background-color: var(--sc-color-white);\n    border-color: var(--sc-color-primary-500);\n    box-shadow: 0 0 0 1px var(--sc-focus-ring-color-primary);\n  }\n}\n\n// Disabled\n.switch--disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.switch__label {\n  user-select: none;\n  line-height: var(--height);\n}\n\n.switch--is-required .switch__title:after {\n  content: ' *';\n  color: var(--sc-color-danger-500);\n}\n\n.switch__title {\n  color: var(--sc-swith-label-color, var(--sc-input-label-color));\n  font-weight: var(--sc-input-label-font-weight);\n  font-size: var(--sc-input-label-font-size-medium);\n}\n\n.switch__description {\n  display: none;\n  color: var(--sc-switch-description-color, var(--sc-color-gray-500));\n  line-height: var(--sc-line-height-dense);\n  margin: 0.5em 0 0;\n  font-size: var(--sc-font-size-small);\n}\n.switch--has-description {\n  .switch__description {\n    display: block;\n  }\n}\n\nslot[name='description']::slotted(*) {\n  margin: 0.75em 0;\n  line-height: var(--sc-line-height-dense);\n  vertical-align: center;\n}\n","import { Component, Prop, Event, EventEmitter, h, State, Watch, Element, Method } from '@stencil/core';\nimport { FormSubmitController } from '../../../functions/form-data';\n\nlet id = 0;\n\n@Component({\n  tag: 'sc-switch',\n  styleUrl: 'sc-switch.scss',\n  shadow: true,\n})\nexport class ScSwitch {\n  @Element() el: HTMLScSwitchElement;\n  private formController: any;\n  private input: HTMLInputElement;\n  private switchId: string = `switch-${++id}`;\n  private labelId = `switch-label-${id}`;\n  /** Does it have a description? */\n  @State() hasDescription: boolean;\n\n  @State() private hasFocus: boolean = false;\n\n  /** The switch's name attribute. */\n  @Prop({ reflect: true }) name: string;\n\n  /** The switch's value attribute. */\n  @Prop() value: string;\n\n  /** Disables the switch. */\n  @Prop({ reflect: true }) disabled: boolean = false;\n\n  /** Makes the switch a required field. */\n  @Prop({ reflect: true }) required: boolean = false;\n\n  /** Draws the switch in a checked state. */\n  @Prop({ reflect: true, mutable: true }) checked: boolean = false;\n\n  /** This will be true when the control is in an invalid state. Validity is determined by the `required` prop. */\n  @Prop({ reflect: true, mutable: true }) invalid: boolean = false;\n\n  @Prop() reversed: boolean;\n\n  /** This will be true as a workaround in the block editor to focus on the content. */\n  @Prop() edit: boolean = false;\n\n  /** Emitted when the control loses focus. */\n  @Event() scBlur: EventEmitter<void>;\n\n  /** Emitted when the control's checked state changes. */\n  @Event() scChange: EventEmitter<void>;\n\n  /** Emitted when the control gains focus. */\n  @Event() scFocus: EventEmitter<void>;\n\n  /** Checks for validity and shows the browser's validation message if the control is invalid. */\n  @Method()\n  async reportValidity() {\n    this.invalid = !this.input.checkValidity();\n    return this.input.reportValidity();\n  }\n\n  handleClick() {\n    this.checked = !this.checked;\n    this.scChange.emit();\n  }\n\n  handleBlur() {\n    this.hasFocus = false;\n    this.scBlur.emit();\n  }\n\n  handleFocus() {\n    this.hasFocus = true;\n    this.scFocus.emit();\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (this.edit) return true;\n\n    if (event.key === 'ArrowLeft') {\n      event.preventDefault();\n      this.checked = false;\n      this.scChange.emit();\n    }\n\n    if (event.key === 'ArrowRight') {\n      event.preventDefault();\n      this.checked = true;\n      this.scChange.emit();\n    }\n\n    if (event.key === ' ' || event.key === 'Enter') {\n      event.preventDefault();\n      this.handleClick();\n    }\n  }\n\n  handleMouseDown(event: MouseEvent) {\n    if (this.edit) return true;\n\n    // Prevent clicks on the label from briefly blurring the input\n    event.preventDefault();\n    this.input.focus();\n  }\n\n  @Watch('checked')\n  handleCheckedChange() {\n    if (this.input) {\n      this.input.checked = this.checked;\n      this.invalid = !this.input.checkValidity();\n    }\n  }\n\n  componentDidLoad() {\n    this.formController = new FormSubmitController(this.el, {\n      value: (control: HTMLScChoiceElement) => (control.checked ? control.value : undefined),\n    }).addFormData();\n    this.hasDescription = !!this.el.querySelector('[slot=\"description\"]');\n  }\n\n  disconnectedCallback() {\n    this.formController?.removeFormData();\n  }\n\n  render() {\n    const Tag = this.edit ? 'div' : 'label';\n    return (\n      <Tag\n        part=\"base\"\n        htmlFor={this.switchId}\n        class={{\n          'switch': true,\n          'switch--is-required': this.required,\n          'switch--checked': this.checked,\n          'switch--disabled': this.disabled,\n          'switch--focused': this.hasFocus,\n          'switch--reversed': this.reversed,\n          'switch--editing': this.edit,\n          'switch--has-description': this.hasDescription,\n        }}\n        onMouseDown={e => this.handleMouseDown(e)}\n      >\n        <span part=\"control\" class=\"switch__control\">\n          <span part=\"thumb\" class=\"switch__thumb\"></span>\n          <input\n            ref={el => (this.input = el as HTMLInputElement)}\n            id={this.switchId}\n            type=\"checkbox\"\n            role=\"switch\"\n            name={this.name}\n            value={this.value || 'on'}\n            checked={this.checked}\n            disabled={this.disabled}\n            required={this.required}\n            aria-checked={this.checked ? 'true' : 'false'}\n            aria-labelledby={this.labelId}\n            onClick={() => this.handleClick()}\n            onBlur={() => this.handleBlur()}\n            onFocus={() => this.handleFocus()}\n            onKeyDown={e => this.handleKeyDown(e)}\n          />\n        </span>\n        <span class=\"switch__label\">\n          <span part=\"title\" id={this.labelId} class=\"switch__title\">\n            <slot></slot>\n          </span>\n          <span class=\"switch__description\" part=\"description\">\n            <slot name=\"description\"></slot>\n          </span>\n        </span>\n      </Tag>\n    );\n  }\n}\n"],"mappings":"6FAAA,MAAMA,EAAc,05ICGpB,IAAIC,EAAK,E,MAOIC,EAAQ,M,4HAIXC,KAAAC,SAAmB,YAAYH,IAC/BE,KAAAE,QAAU,gBAAgBJ,I,4CAIG,M,uDASQ,M,cAGA,M,aAGc,M,aAGA,M,kCAKnC,K,CAaxBK,uBACEH,KAAKI,SAAWJ,KAAKK,MAAMC,gBAC3B,OAAON,KAAKK,MAAME,gB,CAGpBC,cACER,KAAKS,SAAWT,KAAKS,QACrBT,KAAKU,SAASC,M,CAGhBC,aACEZ,KAAKa,SAAW,MAChBb,KAAKc,OAAOH,M,CAGdI,cACEf,KAAKa,SAAW,KAChBb,KAAKgB,QAAQL,M,CAGfM,cAAcC,GACZ,GAAIlB,KAAKmB,KAAM,OAAO,KAEtB,GAAID,EAAME,MAAQ,YAAa,CAC7BF,EAAMG,iBACNrB,KAAKS,QAAU,MACfT,KAAKU,SAASC,M,CAGhB,GAAIO,EAAME,MAAQ,aAAc,CAC9BF,EAAMG,iBACNrB,KAAKS,QAAU,KACfT,KAAKU,SAASC,M,CAGhB,GAAIO,EAAME,MAAQ,KAAOF,EAAME,MAAQ,QAAS,CAC9CF,EAAMG,iBACNrB,KAAKQ,a,EAITc,gBAAgBJ,GACd,GAAIlB,KAAKmB,KAAM,OAAO,KAGtBD,EAAMG,iBACNrB,KAAKK,MAAMkB,O,CAIbC,sBACE,GAAIxB,KAAKK,MAAO,CACdL,KAAKK,MAAMI,QAAUT,KAAKS,QAC1BT,KAAKI,SAAWJ,KAAKK,MAAMC,e,EAI/BmB,mBACEzB,KAAK0B,eAAiB,IAAIC,EAAqB3B,KAAK4B,GAAI,CACtDC,MAAQC,GAAkCA,EAAQrB,QAAUqB,EAAQD,MAAQE,YAC3EC,cACHhC,KAAKiC,iBAAmBjC,KAAK4B,GAAGM,cAAc,uB,CAGhDC,uB,OACEC,EAAApC,KAAK0B,kBAAc,MAAAU,SAAA,SAAAA,EAAEC,gB,CAGvBC,SACE,MAAMC,EAAMvC,KAAKmB,KAAO,MAAQ,QAChC,OACEqB,EAACD,EAAG,CACFE,KAAK,OACLC,QAAS1C,KAAKC,SACd0C,MAAO,CACLC,OAAU,KACV,sBAAuB5C,KAAK6C,SAC5B,kBAAmB7C,KAAKS,QACxB,mBAAoBT,KAAK8C,SACzB,kBAAmB9C,KAAKa,SACxB,mBAAoBb,KAAK+C,SACzB,kBAAmB/C,KAAKmB,KACxB,0BAA2BnB,KAAKiC,gBAElCe,YAAaC,GAAKjD,KAAKsB,gBAAgB2B,IAEvCT,EAAA,QAAMC,KAAK,UAAUE,MAAM,mBACzBH,EAAA,QAAMC,KAAK,QAAQE,MAAM,kBACzBH,EAAA,SACEU,IAAKtB,GAAO5B,KAAKK,MAAQuB,EACzB9B,GAAIE,KAAKC,SACTkD,KAAK,WACLC,KAAK,SACLC,KAAMrD,KAAKqD,KACXxB,MAAO7B,KAAK6B,OAAS,KACrBpB,QAAST,KAAKS,QACdqC,SAAU9C,KAAK8C,SACfD,SAAU7C,KAAK6C,SAAQ,eACT7C,KAAKS,QAAU,OAAS,QAAO,kBAC5BT,KAAKE,QACtBoD,QAAS,IAAMtD,KAAKQ,cACpB+C,OAAQ,IAAMvD,KAAKY,aACnB4C,QAAS,IAAMxD,KAAKe,cACpB0C,UAAWR,GAAKjD,KAAKiB,cAAcgC,MAGvCT,EAAA,QAAMG,MAAM,iBACVH,EAAA,QAAMC,KAAK,QAAQ3C,GAAIE,KAAKE,QAASyC,MAAM,iBACzCH,EAAA,cAEFA,EAAA,QAAMG,MAAM,sBAAsBF,KAAK,eACrCD,EAAA,QAAMa,KAAK,kB"}