{"file":"mutations-8c68bd4f.js","mappings":";;;;;;AAOA;;;MAGa,aAAa,GAAG,MAAMA,eAAkB,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,IAAI,EAAE;AAEhF;;;;MAIa,YAAY,GAAG,QAAQ,KAAK,KAAK,CAAC,KAAK,GAAG,CAAC,GAAG,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAE;AAEnF;;;;MAIa,cAAc,GAAG,CAAC,QAAQ,GAAG,EAAE,MAAM,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,KAAK,QAAQ,CAAC,GAAG,EAAE,EAAE;AAEjI;;;MAGa,sBAAsB,GAAG,OAAO,EAAE,EAAE,EAAE,IAAI,EAAE;EACvD,IAAI;IACF,eAAe,CAAC,OAAO,CAAC,CAAC;IACzB,KAAK,CAAC,QAAQ,GAAG,MAAM,cAAc,CAAC;MACpC,EAAE,EAAE,EAAE;MACN,IAAI;KACL,CAAC,CAAC;IACH,eAAe,CAAC,SAAS,CAAC,CAAC;GAC5B;EAAC,OAAO,CAAC,EAAE;IACV,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACjB,iBAAiB,CAAC,CAAC,CAAC,CAAC;IACrB,eAAe,CAAC,QAAQ,CAAC,CAAC;GAC3B;AACH,EAAE;AAEF;;;MAGa,sBAAsB,GAAG,OAAM,EAAE;EAC5C,IAAI;IACF,eAAe,CAAC,OAAO,CAAC,CAAC;IACzB,KAAK,CAAC,QAAQ,GAAG,MAAM,cAAc,CAAC;MACpC,UAAU,EAAE,KAAK,CAAC,QAAQ,CAAC,EAAE;MAC7B,MAAM,EAAE,EAAE;KACX,CAAC,CAAC;IACH,eAAe,CAAC,SAAS,CAAC,CAAC;GAC5B;EAAC,OAAO,CAAC,EAAE;IACV,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACjB,iBAAiB,CAAC,CAAC,CAAC,CAAC;IACrB,eAAe,CAAC,QAAQ,CAAC,CAAC;GAC3B;AACH,EAAE;AAEF;;;MAGa,mBAAmB,GAAG,OAAM,IAAI;EAC3C,IAAI;IACF,eAAe,CAAC,OAAO,CAAC,CAAC;IACzB,KAAK,CAAC,QAAQ,GAAG,MAAM,WAAW,CAAC;MACjC,QAAQ,EAAE,KAAK,CAAC,QAAQ;MACxB,IAAI;MACJ,SAAS,EAAE,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI,MAAK,MAAM;KAClC,CAAC,CAAC;IACH,eAAe,CAAC,SAAS,CAAC,CAAC;GAC5B;EAAC,OAAO,CAAC,EAAE;IACV,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACjB,iBAAiB,CAAC,CAAC,CAAC,CAAC;IACrB,eAAe,CAAC,QAAQ,CAAC,CAAC;GAC3B;AACH,EAAE;AAEF;;;MAGa,cAAc,GAAG,CAAC,MAAc;;EAC3C,IAAI,EAAC,MAAA,KAAK,CAAC,QAAQ,0CAAE,EAAE,CAAA,EAAE;IACvB,OAAO;GACR;EAED,QAAQ,CAAC;IACP,IAAI,EAAE,yBAAyB,KAAK,CAAC,QAAQ,CAAC,EAAE,eAAe,MAAM,EAAE;IACvE,MAAM,EAAE,MAAM;IACd,SAAS,EAAE,IAAI;GAChB,CAAC,CAAC;AACL;;;;","names":["clearSavedCheckout"],"sources":["./src/store/checkout/mutations.ts"],"sourcesContent":["import state from './store';\nimport { clearCheckout as clearSavedCheckout } from '../checkouts/mutations';\nimport { updateFormState } from '@store/form/mutations';\nimport { createErrorNotice } from '@store/notices/mutations';\nimport { addLineItem, removeLineItem, updateLineItem } from '../../services/session';\nimport apiFetch from '../../functions/fetch';\n\n/**\n * Clear the current checkout.\n */\nexport const clearCheckout = () => clearSavedCheckout(state.formId, state.mode);\n\n/**\n * Lock the checkout (disables input and submission)\n * Pass a lock name to prevent conflicts and allow multiple locks.\n */\nexport const lockCheckout = lockName => (state.locks = [...state.locks, lockName]);\n\n/**\n * Unlock the checkout.\n * Pass an optional lock name to only unlock a specific lock\n */\nexport const unLockCheckout = (lockName = '') => (state.locks = !!lockName ? state.locks.filter(name => name !== lockName) : []);\n\n/**\n * Update the checkout line item\n */\nexport const updateCheckoutLineItem = async ({ id, data }) => {\n  try {\n    updateFormState('FETCH');\n    state.checkout = await updateLineItem({\n      id: id,\n      data,\n    });\n    updateFormState('RESOLVE');\n  } catch (e) {\n    console.error(e);\n    createErrorNotice(e);\n    updateFormState('REJECT');\n  }\n};\n\n/**\n * Remove the checkout line item.\n */\nexport const removeCheckoutLineItem = async id => {\n  try {\n    updateFormState('FETCH');\n    state.checkout = await removeLineItem({\n      checkoutId: state.checkout.id,\n      itemId: id,\n    });\n    updateFormState('RESOLVE');\n  } catch (e) {\n    console.error(e);\n    createErrorNotice(e);\n    updateFormState('REJECT');\n  }\n};\n\n/**\n * Add the checkout line item.\n */\nexport const addCheckoutLineItem = async data => {\n  try {\n    updateFormState('FETCH');\n    state.checkout = await addLineItem({\n      checkout: state.checkout,\n      data,\n      live_mode: state?.mode === 'live',\n    });\n    updateFormState('RESOLVE');\n  } catch (e) {\n    console.error(e);\n    createErrorNotice(e);\n    updateFormState('REJECT');\n  }\n};\n\n/**\n * Track order bump offers.\n */\nexport const trackOrderBump = (bumpId: string) => {\n  if (!state.checkout?.id) {\n    return;\n  }\n\n  apiFetch({\n    path: `surecart/v1/checkouts/${state.checkout.id}/offer_bump/${bumpId}`,\n    method: 'POST',\n    keepalive: true, // Important: allow the request to outlive the page.\n  });\n};\n"],"version":3}