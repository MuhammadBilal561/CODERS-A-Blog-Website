{"file":"sc-stacked-list.sc-stacked-list-row.entry.js","mappings":";;;AAAA,MAAM,gBAAgB,GAAG,2EAA2E;;MCOvF,aAAa;;;;EACxB,MAAM;IACJ,OAAO,eAAa,CAAC;GACtB;;;;ACVH,MAAM,mBAAmB,GAAG,knDAAknD;;MCQjoD,gBAAgB;;;;kBAIF,OAAO;sBAEH,GAAG;;qBAGH,KAAK;qBACL,KAAK;;EAElC,gBAAgB;;IAEd,IAAI,gBAAgB,IAAI,MAAM,EAAE;MAC9B,IAAI,EAAE,GAAG,IAAI,MAAM,CAAC,cAAc,CAAC,OAAO;QACxC,OAAO,CAAC,OAAO,CAAC,KAAK;UACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC;SACtC,CAAC,CAAC;OACJ,CAAC,CAAC;MACH,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACrB;GACF;EAED,gBAAgB;IACd,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC;IACvF,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC;GACxF;EAED,MAAM;IACJ,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,KAAK,CAAC;IAEpC,QACE,EAAC,GAAG,IACF,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,MAAM,EAAE,IAAI,CAAC,MAAM,EACnB,IAAI,EAAC,MAAM,EACX,KAAK,EAAE;QACL,UAAU,EAAE,IAAI;QAChB,sBAAsB,EAAE,IAAI,CAAC,SAAS;QACtC,sBAAsB,EAAE,IAAI,CAAC,SAAS;QACtC,eAAe,EAAE,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU;QAC9C,kBAAkB,EAAC,KAAK,EAAE;OAC3B,IAED,YAAM,KAAK,EAAC,kBAAkB,IAC5B,YAAM,IAAI,EAAC,QAAQ,EAAC,YAAY,EAAE,MAAM,IAAI,CAAC,gBAAgB,EAAE,GAAS,CACnE,EACP,YAAM,YAAY,EAAE,MAAM,IAAI,CAAC,gBAAgB,EAAE,GAAS,EAC1D,YAAM,KAAK,EAAC,kBAAkB,IAC5B,YAAM,IAAI,EAAC,QAAQ,EAAC,YAAY,EAAE,MAAM,IAAI,CAAC,gBAAgB,EAAE,GAAS,CACnE,CACH,EACN;GACH;;;;;;;","names":[],"sources":["./src/components/ui/stacked-list/sc-stacked-list.scss?tag=sc-stacked-list&encapsulation=shadow","./src/components/ui/stacked-list/sc-stacked-list.tsx","./src/components/ui/stacked-list-row/sc-stacked-list-row.scss?tag=sc-stacked-list-row&encapsulation=shadow","./src/components/ui/stacked-list-row/sc-stacked-list-row.tsx"],"sourcesContent":[":host {\n  display: block;\n  font-family: var(--sc-font-sans);\n}\n\n:slotted(*) {\n  margin: 0;\n}\n","import { Component, h } from '@stencil/core';\n\n@Component({\n  tag: 'sc-stacked-list',\n  styleUrl: 'sc-stacked-list.scss',\n  shadow: true,\n})\nexport class ScStackedList {\n  render() {\n    return <slot></slot>;\n  }\n}\n",":host {\n  display: block;\n  --column-width-min: 125px;\n  position: relative;\n}\n\n:host(:not(:last-child)) {\n  border-bottom: 1px solid var(--sc-stacked-list-border-color, var(--sc-color-gray-200));\n}\n\n:host(:focus-within) {\n  z-index: 2;\n}\n\n.list-row {\n  background: var(--sc-list-row-background-color, var(--sc-color-white));\n  color: var(--sc-list-row-color, var(--sc-color-gray-800));\n  text-decoration: none;\n  display: grid;\n  justify-content: var(--sc-stacked-list-row-justify-content, space-between);\n  align-items: var(--sc-stacked-list-row-align-items, start);\n  grid-template-columns: repeat(auto-fit, minmax(100%, 1fr));\n  gap: var(--sc-spacing-xx-small);\n  padding: var(--sc-spacing-medium) var(--sc-spacing-large);\n  transition: background-color var(--sc-transition-fast) ease;\n  border-radius: var(--sc-input-border-radius-medium);\n  min-width: 0px;\n  min-height: 0px;\n\n  &[href]:hover {\n    background: var(--sc-stacked-list-row-hover-color, var(--sc-color-gray-50));\n  }\n\n  &__prefix,\n  &__suffix {\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    z-index: 1;\n  }\n\n  &__prefix {\n    left: var(--sc-spacing-large);\n  }\n\n  &__suffix {\n    right: var(--sc-spacing-large);\n  }\n\n  &--has-prefix {\n    padding-left: 3.5em;\n  }\n  &--has-suffix {\n    padding-right: 3.5em;\n    gap: var(--sc-spacing-xxxx-large);\n  }\n}\n\n.list-row.breakpoint-lg {\n  grid-template-columns: repeat(calc(var(--columns) - 1), 1fr) 1fr;\n  gap: var(--sc-spacing-large);\n\n  ::slotted(:last-child:not(:first-child)) {\n    display: flex;\n    justify-content: flex-end;\n  }\n}\n\n.list-row--is-rtl {\n  &.list-row {\n    &__prefix,\n    &__suffix {\n      left: 20px;\n      width: 20px;\n      transform: rotate(180deg);\n    }\n\n    &__suffix {\n      right: auto;\n    }\n\n    &--has-suffix {\n      gap: var(--sc-spacing-large);\n    }\n  }\n}\n","import { Component, Element, h, Prop, State } from '@stencil/core';\nimport { isRtl } from '../../../functions/page-align';\n\n@Component({\n  tag: 'sc-stacked-list-row',\n  styleUrl: 'sc-stacked-list-row.scss',\n  shadow: true,\n})\nexport class ScStackedListRow {\n  @Element() el: HTMLElement;\n\n  @Prop() href: string;\n  @Prop() target: string = '_self';\n\n  @Prop() mobileSize: number = 600;\n\n  @State() width: number;\n  @State() private hasPrefix = false;\n  @State() private hasSuffix = false;\n\n  componentDidLoad() {\n    // Only run if ResizeObserver is supported.\n    if ('ResizeObserver' in window) {\n      var ro = new window.ResizeObserver(entries => {\n        entries.forEach(entry => {\n          this.width = entry.contentRect.width;\n        });\n      });\n      ro.observe(this.el);\n    }\n  }\n\n  handleSlotChange() {\n    this.hasPrefix = !!Array.from(this.el.children).some(child => child.slot === 'prefix');\n    this.hasSuffix = !!Array.from(this.el.children).some(child => child.slot === 'suffix');\n  }\n\n  render() {\n    const Tag = this.href ? 'a' : 'div';\n\n    return (\n      <Tag\n        href={this.href}\n        target={this.target}\n        part=\"base\"\n        class={{\n          'list-row': true,\n          'list-row--has-prefix': this.hasPrefix,\n          'list-row--has-suffix': this.hasSuffix,\n          'breakpoint-lg': this.width >= this.mobileSize,\n          'list-row--is-rtl':isRtl()\n        }}\n      >\n        <span class=\"list-row__prefix\">\n          <slot name=\"prefix\" onSlotchange={() => this.handleSlotChange()}></slot>\n        </span>\n        <slot onSlotchange={() => this.handleSlotChange()}></slot>\n        <span class=\"list-row__suffix\">\n          <slot name=\"suffix\" onSlotchange={() => this.handleSlotChange()}></slot>\n        </span>\n      </Tag>\n    );\n  }\n}\n"],"version":3}